
@using Microsoft.AspNetCore.Components;
@using Microsoft.Azure.IIoT.App.Services
@using Microsoft.Azure.IIoT.OpcUa.Api.Registry.Models;

@inject Registry RegistryHelper


<div class="drawer-content list-group">
    <div class="list-group-item text-left">
        @if (SupervisorStatus != null)
        {
            string DeviceId = SupervisorStatus.DeviceId == null ? "--" : SupervisorStatus.DeviceId;
            <div class="label">
                DeviceId:
                <div class="body">@DeviceId</div>
            </div>
            string ModuleId = SupervisorStatus.ModuleId == null ? "--" : SupervisorStatus.ModuleId;
            <div class="label">
                ModuleId:
                <div class="body">@ModuleId</div>
            </div>
            string SiteId = SupervisorStatus.SiteId == null ? "--" : SupervisorStatus.SiteId;
            <div class="label">
                SiteId:
                <div class="body">@SiteId</div>
            </div>
            <div class="label">
                Endpoints:
                @{
                    if (SupervisorStatus.Endpoints != null)
                    {
                        foreach (var endpoint in SupervisorStatus.Endpoints)
                        {
                            string Id = endpoint.Id == null ? "--" : endpoint.Id;
                            <div class="label">
                                Uri:
                                <div class="body">@Id</div>
                            </div>
                            string ActivationState = endpoint.ActivationState == null ? "--" : endpoint.ActivationState.ToString();
                            <div class="label">
                                Connection Status:
                                <div class="body">@ActivationState</div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="body">--</div>
                    }
                }
            </div>
        }
        <div class="loader-pos @_spinner"></div>
    </div>
</div>


@code {
    [Parameter]
    public string SupervisorId { get; set; }


    public SupervisorStatusApiModel SupervisorStatus { get; set; }
    private string _spinner { get; set; }

    /// <summary>
    /// OnInitialized
    /// </summary>
    protected override void OnInitialized()
    {
        _spinner = "loader-big";
    }
    
    /// <summary>
    /// OnAfterRenderAsync
    /// </summary>
    /// <param name="firstRender"></param>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            SupervisorStatus = await RegistryHelper.GetSupervisorStatusAsync(SupervisorId);
            _spinner = "";
            StateHasChanged();
        }
    }

}
