package azureiiotopchistory

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
    "github.com/Azure/go-autorest/autorest"
    "github.com/Azure/go-autorest/autorest/date"
)

// The package's fully qualified name.
const fqdn = "go/azure-iiot-opc-history"

        // CredentialType enumerates the values for credential type.
    type CredentialType string

    const (
                // JwtToken ...
        JwtToken CredentialType = "JwtToken"
                // None ...
        None CredentialType = "None"
                // UserName ...
        UserName CredentialType = "UserName"
                // X509Certificate ...
        X509Certificate CredentialType = "X509Certificate"
            )
    // PossibleCredentialTypeValues returns an array of possible values for the CredentialType const type.
    func PossibleCredentialTypeValues() []CredentialType {
        return []CredentialType{JwtToken,None,UserName,X509Certificate}
    }

        // DiagnosticsLevel enumerates the values for diagnostics level.
    type DiagnosticsLevel string

    const (
                // DiagnosticsLevelDiagnostics ...
        DiagnosticsLevelDiagnostics DiagnosticsLevel = "Diagnostics"
                // DiagnosticsLevelNone ...
        DiagnosticsLevelNone DiagnosticsLevel = "None"
                // DiagnosticsLevelOperations ...
        DiagnosticsLevelOperations DiagnosticsLevel = "Operations"
                // DiagnosticsLevelStatus ...
        DiagnosticsLevelStatus DiagnosticsLevel = "Status"
                // DiagnosticsLevelVerbose ...
        DiagnosticsLevelVerbose DiagnosticsLevel = "Verbose"
            )
    // PossibleDiagnosticsLevelValues returns an array of possible values for the DiagnosticsLevel const type.
    func PossibleDiagnosticsLevelValues() []DiagnosticsLevel {
        return []DiagnosticsLevel{DiagnosticsLevelDiagnostics,DiagnosticsLevelNone,DiagnosticsLevelOperations,DiagnosticsLevelStatus,DiagnosticsLevelVerbose}
    }

        // FilterOperatorType enumerates the values for filter operator type.
    type FilterOperatorType string

    const (
                // And ...
        And FilterOperatorType = "And"
                // Between ...
        Between FilterOperatorType = "Between"
                // BitwiseAnd ...
        BitwiseAnd FilterOperatorType = "BitwiseAnd"
                // BitwiseOr ...
        BitwiseOr FilterOperatorType = "BitwiseOr"
                // Cast ...
        Cast FilterOperatorType = "Cast"
                // Equals ...
        Equals FilterOperatorType = "Equals"
                // GreaterThan ...
        GreaterThan FilterOperatorType = "GreaterThan"
                // GreaterThanOrEqual ...
        GreaterThanOrEqual FilterOperatorType = "GreaterThanOrEqual"
                // InList ...
        InList FilterOperatorType = "InList"
                // InView ...
        InView FilterOperatorType = "InView"
                // IsNull ...
        IsNull FilterOperatorType = "IsNull"
                // LessThan ...
        LessThan FilterOperatorType = "LessThan"
                // LessThanOrEqual ...
        LessThanOrEqual FilterOperatorType = "LessThanOrEqual"
                // Like ...
        Like FilterOperatorType = "Like"
                // Not ...
        Not FilterOperatorType = "Not"
                // OfType ...
        OfType FilterOperatorType = "OfType"
                // Or ...
        Or FilterOperatorType = "Or"
                // RelatedTo ...
        RelatedTo FilterOperatorType = "RelatedTo"
            )
    // PossibleFilterOperatorTypeValues returns an array of possible values for the FilterOperatorType const type.
    func PossibleFilterOperatorTypeValues() []FilterOperatorType {
        return []FilterOperatorType{And,Between,BitwiseAnd,BitwiseOr,Cast,Equals,GreaterThan,GreaterThanOrEqual,InList,InView,IsNull,LessThan,LessThanOrEqual,Like,Not,OfType,Or,RelatedTo}
    }

        // HistoryUpdateOperation enumerates the values for history update
        // operation.
    type HistoryUpdateOperation string

    const (
                // Delete ...
        Delete HistoryUpdateOperation = "Delete"
                // Insert ...
        Insert HistoryUpdateOperation = "Insert"
                // Replace ...
        Replace HistoryUpdateOperation = "Replace"
                // Update ...
        Update HistoryUpdateOperation = "Update"
            )
    // PossibleHistoryUpdateOperationValues returns an array of possible values for the HistoryUpdateOperation const type.
    func PossibleHistoryUpdateOperationValues() []HistoryUpdateOperation {
        return []HistoryUpdateOperation{Delete,Insert,Replace,Update}
    }

        // NodeAttribute enumerates the values for node attribute.
    type NodeAttribute string

    const (
                // AccessLevel ...
        AccessLevel NodeAttribute = "AccessLevel"
                // AccessRestrictions ...
        AccessRestrictions NodeAttribute = "AccessRestrictions"
                // ArrayDimensions ...
        ArrayDimensions NodeAttribute = "ArrayDimensions"
                // BrowseName ...
        BrowseName NodeAttribute = "BrowseName"
                // ContainsNoLoops ...
        ContainsNoLoops NodeAttribute = "ContainsNoLoops"
                // DataType ...
        DataType NodeAttribute = "DataType"
                // DataTypeDefinition ...
        DataTypeDefinition NodeAttribute = "DataTypeDefinition"
                // Description ...
        Description NodeAttribute = "Description"
                // DisplayName ...
        DisplayName NodeAttribute = "DisplayName"
                // EventNotifier ...
        EventNotifier NodeAttribute = "EventNotifier"
                // Executable ...
        Executable NodeAttribute = "Executable"
                // Historizing ...
        Historizing NodeAttribute = "Historizing"
                // InverseName ...
        InverseName NodeAttribute = "InverseName"
                // IsAbstract ...
        IsAbstract NodeAttribute = "IsAbstract"
                // MinimumSamplingInterval ...
        MinimumSamplingInterval NodeAttribute = "MinimumSamplingInterval"
                // NodeClass ...
        NodeClass NodeAttribute = "NodeClass"
                // RolePermissions ...
        RolePermissions NodeAttribute = "RolePermissions"
                // Symmetric ...
        Symmetric NodeAttribute = "Symmetric"
                // UserAccessLevel ...
        UserAccessLevel NodeAttribute = "UserAccessLevel"
                // UserExecutable ...
        UserExecutable NodeAttribute = "UserExecutable"
                // UserRolePermissions ...
        UserRolePermissions NodeAttribute = "UserRolePermissions"
                // UserWriteMask ...
        UserWriteMask NodeAttribute = "UserWriteMask"
                // Value ...
        Value NodeAttribute = "Value"
                // ValueRank ...
        ValueRank NodeAttribute = "ValueRank"
                // WriteMask ...
        WriteMask NodeAttribute = "WriteMask"
            )
    // PossibleNodeAttributeValues returns an array of possible values for the NodeAttribute const type.
    func PossibleNodeAttributeValues() []NodeAttribute {
        return []NodeAttribute{AccessLevel,AccessRestrictions,ArrayDimensions,BrowseName,ContainsNoLoops,DataType,DataTypeDefinition,Description,DisplayName,EventNotifier,Executable,Historizing,InverseName,IsAbstract,MinimumSamplingInterval,NodeClass,RolePermissions,Symmetric,UserAccessLevel,UserExecutable,UserRolePermissions,UserWriteMask,Value,ValueRank,WriteMask}
    }

            // AggregateConfigurationAPIModel aggregate configuration
            type AggregateConfigurationAPIModel struct {
            // UseServerCapabilitiesDefaults - Whether to use the default server caps
            UseServerCapabilitiesDefaults *bool `json:"useServerCapabilitiesDefaults,omitempty"`
            // TreatUncertainAsBad - Whether to treat uncertain as bad
            TreatUncertainAsBad *bool `json:"treatUncertainAsBad,omitempty"`
            // PercentDataBad - Percent of data that is bad
            PercentDataBad *int32 `json:"percentDataBad,omitempty"`
            // PercentDataGood - Percent of data that is good
            PercentDataGood *int32 `json:"percentDataGood,omitempty"`
            // UseSlopedExtrapolation - Whether to use sloped extrapolation.
            UseSlopedExtrapolation *bool `json:"useSlopedExtrapolation,omitempty"`
            }

            // ContentFilterAPIModel content filter
            type ContentFilterAPIModel struct {
            // Elements - The flat list of elements in the filter AST
            Elements *[]ContentFilterElementAPIModel `json:"elements,omitempty"`
            }

            // ContentFilterElementAPIModel an expression element in the filter
            // ast
            type ContentFilterElementAPIModel struct {
            // FilterOperator - Possible values include: 'Equals', 'IsNull', 'GreaterThan', 'LessThan', 'GreaterThanOrEqual', 'LessThanOrEqual', 'Like', 'Not', 'Between', 'InList', 'And', 'Or', 'Cast', 'InView', 'OfType', 'RelatedTo', 'BitwiseAnd', 'BitwiseOr'
            FilterOperator FilterOperatorType `json:"filterOperator,omitempty"`
            // FilterOperands - The operands in the element for the operator
            FilterOperands *[]FilterOperandAPIModel `json:"filterOperands,omitempty"`
            }

            // CredentialAPIModel credential model
            type CredentialAPIModel struct {
            // Type - Possible values include: 'None', 'UserName', 'X509Certificate', 'JwtToken'
            Type CredentialType `json:"type,omitempty"`
            // Value - Value to pass to server
            Value interface{} `json:"value,omitempty"`
            }

            // DeleteEventsDetailsAPIModel the events to delete
            type DeleteEventsDetailsAPIModel struct {
            // EventIds - Events to delete
            EventIds *[][]byte `json:"eventIds,omitempty"`
            }

            // DeleteEventsDetailsAPIModelHistoryUpdateRequestAPIModel request
            // node history update
            type DeleteEventsDetailsAPIModelHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *DeleteEventsDetailsAPIModel `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // DeleteModifiedValuesDetailsAPIModel delete raw modified data
            type DeleteModifiedValuesDetailsAPIModel struct {
            // StartTime - Start time
            StartTime *date.Time `json:"startTime,omitempty"`
            // EndTime - End time to delete until
            EndTime *date.Time `json:"endTime,omitempty"`
            }

            // DeleteModifiedValuesDetailsAPIModelHistoryUpdateRequestAPIModel
            // request node history update
            type DeleteModifiedValuesDetailsAPIModelHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *DeleteModifiedValuesDetailsAPIModel `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // DeleteValuesAtTimesDetailsAPIModel deletes data at times
            type DeleteValuesAtTimesDetailsAPIModel struct {
            // ReqTimes - The timestamps to delete
            ReqTimes *[]date.Time `json:"reqTimes,omitempty"`
            }

            // DeleteValuesAtTimesDetailsAPIModelHistoryUpdateRequestAPIModel
            // request node history update
            type DeleteValuesAtTimesDetailsAPIModelHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *DeleteValuesAtTimesDetailsAPIModel `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // DeleteValuesDetailsAPIModel delete raw modified data
            type DeleteValuesDetailsAPIModel struct {
            // StartTime - Start time
            StartTime *date.Time `json:"startTime,omitempty"`
            // EndTime - End time to delete until
            EndTime *date.Time `json:"endTime,omitempty"`
            }

            // DeleteValuesDetailsAPIModelHistoryUpdateRequestAPIModel request
            // node history update
            type DeleteValuesDetailsAPIModelHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *DeleteValuesDetailsAPIModel `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // DiagnosticsAPIModel diagnostics configuration
            type DiagnosticsAPIModel struct {
            // Level - Possible values include: 'DiagnosticsLevelNone', 'DiagnosticsLevelStatus', 'DiagnosticsLevelOperations', 'DiagnosticsLevelDiagnostics', 'DiagnosticsLevelVerbose'
            Level DiagnosticsLevel `json:"level,omitempty"`
            // AuditID - Client audit log entry.
            // (default: client generated)
            AuditID *string `json:"auditId,omitempty"`
            // TimeStamp - Timestamp of request.
            // (default: client generated)
            TimeStamp *date.Time `json:"timeStamp,omitempty"`
            }

            // EventFilterAPIModel event filter
            type EventFilterAPIModel struct {
            // SelectClauses - Select statements
            SelectClauses *[]SimpleAttributeOperandAPIModel `json:"selectClauses,omitempty"`
            WhereClause *ContentFilterAPIModel `json:"whereClause,omitempty"`
            }

            // FilterOperandAPIModel filter operand
            type FilterOperandAPIModel struct {
            // Index - Element reference in the outer list if
            // operand is an element operand
            Index *int32 `json:"index,omitempty"`
            // Value - Variant value if operand is a literal
            Value interface{} `json:"value,omitempty"`
            // NodeID - Type definition node id if operand is
            // simple or full attribute operand.
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - Browse path of attribute operand
            BrowsePath *[]string `json:"browsePath,omitempty"`
            // AttributeID - Possible values include: 'NodeClass', 'BrowseName', 'DisplayName', 'Description', 'WriteMask', 'UserWriteMask', 'IsAbstract', 'Symmetric', 'InverseName', 'ContainsNoLoops', 'EventNotifier', 'Value', 'DataType', 'ValueRank', 'ArrayDimensions', 'AccessLevel', 'UserAccessLevel', 'MinimumSamplingInterval', 'Historizing', 'Executable', 'UserExecutable', 'DataTypeDefinition', 'RolePermissions', 'UserRolePermissions', 'AccessRestrictions'
            AttributeID NodeAttribute `json:"attributeId,omitempty"`
            // IndexRange - Index range of attribute operand
            IndexRange *string `json:"indexRange,omitempty"`
            // Alias - Optional alias to refer to it makeing it a
            // full blown attribute operand
            Alias *string `json:"alias,omitempty"`
            }

            // HistoricEventAPIModel historic event
            type HistoricEventAPIModel struct {
            // EventFields - The selected fields of the event
            EventFields *[]interface{} `json:"eventFields,omitempty"`
            }

            // HistoricEventAPIModelHistoryReadNextResponseAPIModel history
            // read continuation result
            type HistoricEventAPIModelHistoryReadNextResponseAPIModel struct {
            autorest.Response `json:"-"`
            // History - History as json encoded extension object
            History *[]HistoricEventAPIModel `json:"history,omitempty"`
            // ContinuationToken - Continuation token if more results pending.
            ContinuationToken *string `json:"continuationToken,omitempty"`
            ErrorInfo *ServiceResultAPIModel `json:"errorInfo,omitempty"`
            }

            // HistoricEventAPIModelHistoryReadResponseAPIModel history read
            // results
            type HistoricEventAPIModelHistoryReadResponseAPIModel struct {
            autorest.Response `json:"-"`
            // History - History as json encoded extension object
            History *[]HistoricEventAPIModel `json:"history,omitempty"`
            // ContinuationToken - Continuation token if more results pending.
            ContinuationToken *string `json:"continuationToken,omitempty"`
            ErrorInfo *ServiceResultAPIModel `json:"errorInfo,omitempty"`
            }

            // HistoricValueAPIModel historic data
            type HistoricValueAPIModel struct {
            // Value - ,
            //             The value of data value.
            Value interface{} `json:"value,omitempty"`
            // StatusCode - The status code associated with the value.
            StatusCode *int32 `json:"statusCode,omitempty"`
            // SourceTimestamp - The source timestamp associated with the value.
            SourceTimestamp *date.Time `json:"sourceTimestamp,omitempty"`
            // SourcePicoseconds - Additional resolution for the source timestamp.
            SourcePicoseconds *int32 `json:"sourcePicoseconds,omitempty"`
            // ServerTimestamp - The server timestamp associated with the value.
            ServerTimestamp *date.Time `json:"serverTimestamp,omitempty"`
            // ServerPicoseconds - Additional resolution for the server timestamp.
            ServerPicoseconds *int32 `json:"serverPicoseconds,omitempty"`
            ModificationInfo *ModificationInfoAPIModel `json:"modificationInfo,omitempty"`
            }

            // HistoricValueAPIModelHistoryReadNextResponseAPIModel history
            // read continuation result
            type HistoricValueAPIModelHistoryReadNextResponseAPIModel struct {
            autorest.Response `json:"-"`
            // History - History as json encoded extension object
            History *[]HistoricValueAPIModel `json:"history,omitempty"`
            // ContinuationToken - Continuation token if more results pending.
            ContinuationToken *string `json:"continuationToken,omitempty"`
            ErrorInfo *ServiceResultAPIModel `json:"errorInfo,omitempty"`
            }

            // HistoricValueAPIModelHistoryReadResponseAPIModel history read
            // results
            type HistoricValueAPIModelHistoryReadResponseAPIModel struct {
            autorest.Response `json:"-"`
            // History - History as json encoded extension object
            History *[]HistoricValueAPIModel `json:"history,omitempty"`
            // ContinuationToken - Continuation token if more results pending.
            ContinuationToken *string `json:"continuationToken,omitempty"`
            ErrorInfo *ServiceResultAPIModel `json:"errorInfo,omitempty"`
            }

            // HistoryReadNextRequestAPIModel request node history read
            // continuation
            type HistoryReadNextRequestAPIModel struct {
            // ContinuationToken - Continuation token to continue reading more
            // results.
            ContinuationToken *string `json:"continuationToken,omitempty"`
            // Abort - Abort reading after this read
            Abort *bool `json:"abort,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // HistoryUpdateResponseAPIModel history update results
            type HistoryUpdateResponseAPIModel struct {
            autorest.Response `json:"-"`
            // Results - List of results from the update operation
            Results *[]ServiceResultAPIModel `json:"results,omitempty"`
            ErrorInfo *ServiceResultAPIModel `json:"errorInfo,omitempty"`
            }

            // InsertEventsDetailsAPIModel insert historic events
            type InsertEventsDetailsAPIModel struct {
            Filter *EventFilterAPIModel `json:"filter,omitempty"`
            // Events - The new events to insert
            Events *[]HistoricEventAPIModel `json:"events,omitempty"`
            }

            // InsertEventsDetailsAPIModelHistoryUpdateRequestAPIModel request
            // node history update
            type InsertEventsDetailsAPIModelHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *InsertEventsDetailsAPIModel `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // InsertValuesDetailsAPIModel insert historic data
            type InsertValuesDetailsAPIModel struct {
            // Values - Values to insert
            Values *[]HistoricValueAPIModel `json:"values,omitempty"`
            }

            // InsertValuesDetailsAPIModelHistoryUpdateRequestAPIModel request
            // node history update
            type InsertValuesDetailsAPIModelHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *InsertValuesDetailsAPIModel `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // JTokenHistoryReadNextResponseAPIModel history read continuation
            // result
            type JTokenHistoryReadNextResponseAPIModel struct {
            autorest.Response `json:"-"`
            // History - History as json encoded extension object
            History interface{} `json:"history,omitempty"`
            // ContinuationToken - Continuation token if more results pending.
            ContinuationToken *string `json:"continuationToken,omitempty"`
            ErrorInfo *ServiceResultAPIModel `json:"errorInfo,omitempty"`
            }

            // JTokenHistoryReadRequestAPIModel request node history read
            type JTokenHistoryReadRequestAPIModel struct {
            // NodeID - Node to read from (mandatory)
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            // Details - The HistoryReadDetailsType extension object
            // encoded in json and containing the tunneled
            // Historian reader request.
            Details interface{} `json:"details,omitempty"`
            // IndexRange - Index range to read, e.g. 1:2,0:1 for 2 slices
            // out of a matrix or 0:1 for the first item in
            // an array, string or bytestring.
            // See 7.22 of part 4: NumericRange.
            IndexRange *string `json:"indexRange,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // JTokenHistoryReadResponseAPIModel history read results
            type JTokenHistoryReadResponseAPIModel struct {
            autorest.Response `json:"-"`
            // History - History as json encoded extension object
            History interface{} `json:"history,omitempty"`
            // ContinuationToken - Continuation token if more results pending.
            ContinuationToken *string `json:"continuationToken,omitempty"`
            ErrorInfo *ServiceResultAPIModel `json:"errorInfo,omitempty"`
            }

            // JTokenHistoryUpdateRequestAPIModel request node history update
            type JTokenHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            // Details - The HistoryUpdateDetailsType extension object
            // encoded as json Variant and containing the tunneled
            // update request for the Historian server. The value
            // is updated at edge using above node address.
            Details interface{} `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // ModificationInfoAPIModel modification information
            type ModificationInfoAPIModel struct {
            // ModificationTime - Modification time
            ModificationTime *date.Time `json:"modificationTime,omitempty"`
            // UpdateType - Possible values include: 'Insert', 'Replace', 'Update', 'Delete'
            UpdateType HistoryUpdateOperation `json:"updateType,omitempty"`
            // UserName - User who made the change
            UserName *string `json:"userName,omitempty"`
            }

            // ReadEventsDetailsAPIModel read event data
            type ReadEventsDetailsAPIModel struct {
            // StartTime - Start time to read from
            StartTime *date.Time `json:"startTime,omitempty"`
            // EndTime - End time to read to
            EndTime *date.Time `json:"endTime,omitempty"`
            // NumEvents - Number of events to read
            NumEvents *int32 `json:"numEvents,omitempty"`
            Filter *EventFilterAPIModel `json:"filter,omitempty"`
            }

            // ReadEventsDetailsAPIModelHistoryReadRequestAPIModel request node
            // history read
            type ReadEventsDetailsAPIModelHistoryReadRequestAPIModel struct {
            // NodeID - Node to read from (mandatory)
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *ReadEventsDetailsAPIModel `json:"details,omitempty"`
            // IndexRange - Index range to read, e.g. 1:2,0:1 for 2 slices
            // out of a matrix or 0:1 for the first item in
            // an array, string or bytestring.
            // See 7.22 of part 4: NumericRange.
            IndexRange *string `json:"indexRange,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // ReadModifiedValuesDetailsAPIModel read modified data
            type ReadModifiedValuesDetailsAPIModel struct {
            // StartTime - The start time to read from
            StartTime *date.Time `json:"startTime,omitempty"`
            // EndTime - The end time to read to
            EndTime *date.Time `json:"endTime,omitempty"`
            // NumValues - The number of values to read
            NumValues *int32 `json:"numValues,omitempty"`
            }

            // ReadModifiedValuesDetailsAPIModelHistoryReadRequestAPIModel
            // request node history read
            type ReadModifiedValuesDetailsAPIModelHistoryReadRequestAPIModel struct {
            // NodeID - Node to read from (mandatory)
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *ReadModifiedValuesDetailsAPIModel `json:"details,omitempty"`
            // IndexRange - Index range to read, e.g. 1:2,0:1 for 2 slices
            // out of a matrix or 0:1 for the first item in
            // an array, string or bytestring.
            // See 7.22 of part 4: NumericRange.
            IndexRange *string `json:"indexRange,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // ReadProcessedValuesDetailsAPIModel read processed historic data
            type ReadProcessedValuesDetailsAPIModel struct {
            // StartTime - Start time to read from.
            StartTime *date.Time `json:"startTime,omitempty"`
            // EndTime - End time to read until
            EndTime *date.Time `json:"endTime,omitempty"`
            // ProcessingInterval - Interval to process
            ProcessingInterval *float64 `json:"processingInterval,omitempty"`
            // AggregateTypeID - The aggregate type node ids
            AggregateTypeID *string `json:"aggregateTypeId,omitempty"`
            AggregateConfiguration *AggregateConfigurationAPIModel `json:"aggregateConfiguration,omitempty"`
            }

            // ReadProcessedValuesDetailsAPIModelHistoryReadRequestAPIModel
            // request node history read
            type ReadProcessedValuesDetailsAPIModelHistoryReadRequestAPIModel struct {
            // NodeID - Node to read from (mandatory)
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *ReadProcessedValuesDetailsAPIModel `json:"details,omitempty"`
            // IndexRange - Index range to read, e.g. 1:2,0:1 for 2 slices
            // out of a matrix or 0:1 for the first item in
            // an array, string or bytestring.
            // See 7.22 of part 4: NumericRange.
            IndexRange *string `json:"indexRange,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // ReadValuesAtTimesDetailsAPIModel read data at specified times
            type ReadValuesAtTimesDetailsAPIModel struct {
            // ReqTimes - Requested datums
            ReqTimes *[]date.Time `json:"reqTimes,omitempty"`
            // UseSimpleBounds - Whether to use simple bounds
            UseSimpleBounds *bool `json:"useSimpleBounds,omitempty"`
            }

            // ReadValuesAtTimesDetailsAPIModelHistoryReadRequestAPIModel
            // request node history read
            type ReadValuesAtTimesDetailsAPIModelHistoryReadRequestAPIModel struct {
            // NodeID - Node to read from (mandatory)
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *ReadValuesAtTimesDetailsAPIModel `json:"details,omitempty"`
            // IndexRange - Index range to read, e.g. 1:2,0:1 for 2 slices
            // out of a matrix or 0:1 for the first item in
            // an array, string or bytestring.
            // See 7.22 of part 4: NumericRange.
            IndexRange *string `json:"indexRange,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // ReadValuesDetailsAPIModel read historic values
            type ReadValuesDetailsAPIModel struct {
            // StartTime - Beginning of period to read. Set to null
            // if no specific start time is specified.
            StartTime *date.Time `json:"startTime,omitempty"`
            // EndTime - End of period to read. Set to null if no
            // specific end time is specified.
            EndTime *date.Time `json:"endTime,omitempty"`
            // NumValues - The maximum number of values returned for any Node
            // over the time range. If only one time is specified,
            // the time range shall extend to return this number
            // of values. 0 or null indicates that there is no
            // maximum.
            NumValues *int32 `json:"numValues,omitempty"`
            // ReturnBounds - Whether to return the bounding values or not.
            ReturnBounds *bool `json:"returnBounds,omitempty"`
            }

            // ReadValuesDetailsAPIModelHistoryReadRequestAPIModel request node
            // history read
            type ReadValuesDetailsAPIModelHistoryReadRequestAPIModel struct {
            // NodeID - Node to read from (mandatory)
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *ReadValuesDetailsAPIModel `json:"details,omitempty"`
            // IndexRange - Index range to read, e.g. 1:2,0:1 for 2 slices
            // out of a matrix or 0:1 for the first item in
            // an array, string or bytestring.
            // See 7.22 of part 4: NumericRange.
            IndexRange *string `json:"indexRange,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // ReplaceEventsDetailsAPIModel replace historic events
            type ReplaceEventsDetailsAPIModel struct {
            Filter *EventFilterAPIModel `json:"filter,omitempty"`
            // Events - The events to replace
            Events *[]HistoricEventAPIModel `json:"events,omitempty"`
            }

            // ReplaceEventsDetailsAPIModelHistoryUpdateRequestAPIModel request
            // node history update
            type ReplaceEventsDetailsAPIModelHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *ReplaceEventsDetailsAPIModel `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // ReplaceValuesDetailsAPIModel replace historic data
            type ReplaceValuesDetailsAPIModel struct {
            // Values - Values to replace
            Values *[]HistoricValueAPIModel `json:"values,omitempty"`
            }

            // ReplaceValuesDetailsAPIModelHistoryUpdateRequestAPIModel request
            // node history update
            type ReplaceValuesDetailsAPIModelHistoryUpdateRequestAPIModel struct {
            // NodeID - Node to update
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - An optional path from NodeId instance to
            // the actual node.
            BrowsePath *[]string `json:"browsePath,omitempty"`
            Details *ReplaceValuesDetailsAPIModel `json:"details,omitempty"`
            Header *RequestHeaderAPIModel `json:"header,omitempty"`
            }

            // RequestHeaderAPIModel request header model
            type RequestHeaderAPIModel struct {
            Elevation *CredentialAPIModel `json:"elevation,omitempty"`
            // Locales - Optional list of locales in preference order.
            Locales *[]string `json:"locales,omitempty"`
            Diagnostics *DiagnosticsAPIModel `json:"diagnostics,omitempty"`
            }

            // ServiceResultAPIModel service result
            type ServiceResultAPIModel struct {
            // StatusCode - Error code - if null operation succeeded.
            StatusCode *int32 `json:"statusCode,omitempty"`
            // ErrorMessage - Error message in case of error or null.
            ErrorMessage *string `json:"errorMessage,omitempty"`
            // Diagnostics - Additional diagnostics information
            Diagnostics interface{} `json:"diagnostics,omitempty"`
            }

            // SimpleAttributeOperandAPIModel simple attribute operand model
            type SimpleAttributeOperandAPIModel struct {
            // NodeID - Type definition node id if operand is
            // simple or full attribute operand.
            NodeID *string `json:"nodeId,omitempty"`
            // BrowsePath - Browse path of attribute operand
            BrowsePath *[]string `json:"browsePath,omitempty"`
            // AttributeID - Possible values include: 'NodeClass', 'BrowseName', 'DisplayName', 'Description', 'WriteMask', 'UserWriteMask', 'IsAbstract', 'Symmetric', 'InverseName', 'ContainsNoLoops', 'EventNotifier', 'Value', 'DataType', 'ValueRank', 'ArrayDimensions', 'AccessLevel', 'UserAccessLevel', 'MinimumSamplingInterval', 'Historizing', 'Executable', 'UserExecutable', 'DataTypeDefinition', 'RolePermissions', 'UserRolePermissions', 'AccessRestrictions'
            AttributeID NodeAttribute `json:"attributeId,omitempty"`
            // IndexRange - Index range of attribute operand
            IndexRange *string `json:"indexRange,omitempty"`
            }

