# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PrivateKeyApiModel(Model):
    """Private key.

    :param kty: Key type. Possible values include: 'RSA', 'ECC', 'AES'
    :type kty: str or ~azure-iiot-opc-vault.models.PrivateKeyType
    :param n: RSA modulus.
    :type n: bytearray
    :param e: RSA public exponent, in Base64.
    :type e: bytearray
    :param dp: RSA Private Key Parameter
    :type dp: bytearray
    :param dq: RSA Private Key Parameter
    :type dq: bytearray
    :param qi: RSA Private Key Parameter
    :type qi: bytearray
    :param p: RSA secret prime
    :type p: bytearray
    :param q: RSA secret prime, with p &lt; q
    :type q: bytearray
    :param crv: The curve for ECC algorithms
    :type crv: str
    :param x: X coordinate for the Elliptic Curve point.
    :type x: bytearray
    :param y: Y coordinate for the Elliptic Curve point.
    :type y: bytearray
    :param d: RSA private exponent or ECC private key.
    :type d: bytearray
    :param k: Symmetric key
    :type k: bytearray
    :param key_hsm: HSM Token, used with "Bring Your Own Key"
    :type key_hsm: bytearray
    """

    _attribute_map = {
        'kty': {'key': 'kty', 'type': 'PrivateKeyType'},
        'n': {'key': 'n', 'type': 'bytearray'},
        'e': {'key': 'e', 'type': 'bytearray'},
        'dp': {'key': 'dp', 'type': 'bytearray'},
        'dq': {'key': 'dq', 'type': 'bytearray'},
        'qi': {'key': 'qi', 'type': 'bytearray'},
        'p': {'key': 'p', 'type': 'bytearray'},
        'q': {'key': 'q', 'type': 'bytearray'},
        'crv': {'key': 'crv', 'type': 'str'},
        'x': {'key': 'x', 'type': 'bytearray'},
        'y': {'key': 'y', 'type': 'bytearray'},
        'd': {'key': 'd', 'type': 'bytearray'},
        'k': {'key': 'k', 'type': 'bytearray'},
        'key_hsm': {'key': 'key_hsm', 'type': 'bytearray'},
    }

    def __init__(self, kty=None, n=None, e=None, dp=None, dq=None, qi=None, p=None, q=None, crv=None, x=None, y=None, d=None, k=None, key_hsm=None):
        super(PrivateKeyApiModel, self).__init__()
        self.kty = kty
        self.n = n
        self.e = e
        self.dp = dp
        self.dq = dq
        self.qi = qi
        self.p = p
        self.q = q
        self.crv = crv
        self.x = x
        self.y = y
        self.d = d
        self.k = k
        self.key_hsm = key_hsm
