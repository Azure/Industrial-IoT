# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AggregateConfigApiModel(Model):
    """Aggregate configuration.

    :param use_server_capabilities_defaults: Whether to use the default server
     caps
    :type use_server_capabilities_defaults: bool
    :param treat_uncertain_as_bad: Whether to treat uncertain as bad
    :type treat_uncertain_as_bad: bool
    :param percent_data_bad: Percent of data that is bad
    :type percent_data_bad: int
    :param percent_data_good: Percent of data that is good
    :type percent_data_good: int
    :param use_sloped_extrapolation: Whether to use sloped extrapolation.
    :type use_sloped_extrapolation: bool
    """

    _attribute_map = {
        'use_server_capabilities_defaults': {'key': 'useServerCapabilitiesDefaults', 'type': 'bool'},
        'treat_uncertain_as_bad': {'key': 'treatUncertainAsBad', 'type': 'bool'},
        'percent_data_bad': {'key': 'percentDataBad', 'type': 'int'},
        'percent_data_good': {'key': 'percentDataGood', 'type': 'int'},
        'use_sloped_extrapolation': {'key': 'useSlopedExtrapolation', 'type': 'bool'},
    }

    def __init__(self, use_server_capabilities_defaults=None, treat_uncertain_as_bad=None, percent_data_bad=None, percent_data_good=None, use_sloped_extrapolation=None):
        super(AggregateConfigApiModel, self).__init__()
        self.use_server_capabilities_defaults = use_server_capabilities_defaults
        self.treat_uncertain_as_bad = treat_uncertain_as_bad
        self.percent_data_bad = percent_data_bad
        self.percent_data_good = percent_data_good
        self.use_sloped_extrapolation = use_sloped_extrapolation
