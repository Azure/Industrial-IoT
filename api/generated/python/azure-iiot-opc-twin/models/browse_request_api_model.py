# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class BrowseRequestApiModel(Model):
    """Browse request model.

    :param node_id: Node to browse.
     (default: RootFolder).
    :type node_id: str
    :param direction: Possible values include: 'Forward', 'Backward', 'Both'
    :type direction: str or ~azure-iiot-opc-twin.models.BrowseDirection
    :param view:
    :type view: ~azure-iiot-opc-twin.models.BrowseViewApiModel
    :param reference_type_id: Reference types to browse.
     (default: hierarchical).
    :type reference_type_id: str
    :param no_subtypes: Whether to include subtypes of the reference type.
     (default is false). Default value: False .
    :type no_subtypes: bool
    :param max_references_to_return: Max number of references to return. There
     might
     be less returned as this is up to the client
     restrictions.  Set to 0 to return no references
     or target nodes.
     (default is decided by client e.g. 60)
    :type max_references_to_return: int
    :param target_nodes_only: Whether to collapse all references into a set of
     unique target nodes and not show reference
     information.
     (default is false). Default value: False .
    :type target_nodes_only: bool
    :param read_variable_values: Whether to read variable values on target
     nodes.
     (default is false). Default value: False .
    :type read_variable_values: bool
    :param header:
    :type header: ~azure-iiot-opc-twin.models.RequestHeaderApiModel
    """

    _attribute_map = {
        'node_id': {'key': 'nodeId', 'type': 'str'},
        'direction': {'key': 'direction', 'type': 'BrowseDirection'},
        'view': {'key': 'view', 'type': 'BrowseViewApiModel'},
        'reference_type_id': {'key': 'referenceTypeId', 'type': 'str'},
        'no_subtypes': {'key': 'noSubtypes', 'type': 'bool'},
        'max_references_to_return': {'key': 'maxReferencesToReturn', 'type': 'int'},
        'target_nodes_only': {'key': 'targetNodesOnly', 'type': 'bool'},
        'read_variable_values': {'key': 'readVariableValues', 'type': 'bool'},
        'header': {'key': 'header', 'type': 'RequestHeaderApiModel'},
    }

    def __init__(self, node_id=None, direction=None, view=None, reference_type_id=None, no_subtypes=False, max_references_to_return=None, target_nodes_only=False, read_variable_values=False, header=None):
        super(BrowseRequestApiModel, self).__init__()
        self.node_id = node_id
        self.direction = direction
        self.view = view
        self.reference_type_id = reference_type_id
        self.no_subtypes = no_subtypes
        self.max_references_to_return = max_references_to_return
        self.target_nodes_only = target_nodes_only
        self.read_variable_values = read_variable_values
        self.header = header
