# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ValueWriteRequestApiModel(Model):
    """Value write request model.

    :param node_id: Node id to to write value to.
    :type node_id: str
    :param browse_path: An optional path from NodeId instance to
     the actual node.
    :type browse_path: list[str]
    :param value: Value to write. The system tries to convert
     the value according to the data type value,
     e.g. convert comma seperated value strings
     into arrays.  (Mandatory)
    :type value: object
    :param data_type: A built in datatype for the value. This can
     be a data type from browse, or a built in
     type.
     (default: best effort)
    :type data_type: str
    :param index_range: Index range to write
    :type index_range: str
    :param header: Optional request header
    :type header: ~azure-iiot-opc-twin.models.RequestHeaderApiModel
    """

    _validation = {
        'value': {'required': True},
    }

    _attribute_map = {
        'node_id': {'key': 'nodeId', 'type': 'str'},
        'browse_path': {'key': 'browsePath', 'type': '[str]'},
        'value': {'key': 'value', 'type': 'object'},
        'data_type': {'key': 'dataType', 'type': 'str'},
        'index_range': {'key': 'indexRange', 'type': 'str'},
        'header': {'key': 'header', 'type': 'RequestHeaderApiModel'},
    }

    def __init__(self, value, node_id=None, browse_path=None, data_type=None, index_range=None, header=None):
        super(ValueWriteRequestApiModel, self).__init__()
        self.node_id = node_id
        self.browse_path = browse_path
        self.value = value
        self.data_type = data_type
        self.index_range = index_range
        self.header = header
