/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Trust group root registration model
 *
 */
class TrustGroupRootCreateRequestApiModel {
  /**
   * Create a TrustGroupRootCreateRequestApiModel.
   * @property {string} [name] The new name of the trust group root
   * @property {string} [type] Possible values include:
   * 'ApplicationInstanceCertificate', 'HttpsCertificate',
   * 'UserCredentialCertificate'
   * @property {string} [subjectName] The subject name of the group as
   * distinguished name.
   * @property {string} [lifetime] The lifetime of the trust group root
   * certificate.
   * @property {number} [keySize] The certificate key size in bits.
   * @property {string} [signatureAlgorithm] Possible values include: 'Rsa256',
   * 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss', 'Rsa512Pss'
   * @property {string} [issuedLifetime] The issued certificate lifetime.
   * @property {number} [issuedKeySize] The issued certificate key size in
   * bits.
   * @property {string} [issuedSignatureAlgorithm] Possible values include:
   * 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss', 'Rsa512Pss'
   */
  constructor() {
  }

  /**
   * Defines the metadata of TrustGroupRootCreateRequestApiModel
   *
   * @returns {object} metadata of TrustGroupRootCreateRequestApiModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TrustGroupRootCreateRequestApiModel',
      type: {
        name: 'Composite',
        className: 'TrustGroupRootCreateRequestApiModel',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'Enum',
              allowedValues: [ 'ApplicationInstanceCertificate', 'HttpsCertificate', 'UserCredentialCertificate' ]
            }
          },
          subjectName: {
            required: false,
            serializedName: 'subjectName',
            type: {
              name: 'String'
            }
          },
          lifetime: {
            required: false,
            serializedName: 'lifetime',
            type: {
              name: 'String'
            }
          },
          keySize: {
            required: false,
            serializedName: 'keySize',
            type: {
              name: 'Number'
            }
          },
          signatureAlgorithm: {
            required: false,
            serializedName: 'signatureAlgorithm',
            type: {
              name: 'Enum',
              allowedValues: [ 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss', 'Rsa512Pss' ]
            }
          },
          issuedLifetime: {
            required: false,
            serializedName: 'issuedLifetime',
            type: {
              name: 'String'
            }
          },
          issuedKeySize: {
            required: false,
            serializedName: 'issuedKeySize',
            type: {
              name: 'Number'
            }
          },
          issuedSignatureAlgorithm: {
            required: false,
            serializedName: 'issuedSignatureAlgorithm',
            type: {
              name: 'Enum',
              allowedValues: [ 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss', 'Rsa512Pss' ]
            }
          }
        }
      }
    };
  }
}

module.exports = TrustGroupRootCreateRequestApiModel;
