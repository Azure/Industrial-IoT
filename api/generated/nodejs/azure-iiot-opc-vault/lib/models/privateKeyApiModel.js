/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Private key
 *
 */
class PrivateKeyApiModel {
  /**
   * Create a PrivateKeyApiModel.
   * @property {string} [kty] Possible values include: 'RSA', 'ECC', 'AES'
   * @property {buffer} [n] RSA modulus.
   * @property {buffer} [e] RSA public exponent, in Base64.
   * @property {buffer} [dp] RSA Private Key Parameter
   * @property {buffer} [dq] RSA Private Key Parameter
   * @property {buffer} [qi] RSA Private Key Parameter
   * @property {buffer} [p] RSA secret prime
   * @property {buffer} [q] RSA secret prime, with p < q
   * @property {string} [crv]
   * @property {buffer} [x] X coordinate for the Elliptic Curve point.
   * @property {buffer} [y] Y coordinate for the Elliptic Curve point.
   * @property {buffer} [d] RSA private exponent or ECC private key.
   * @property {buffer} [k] Symmetric key
   * @property {buffer} [keyHsm]
   */
  constructor() {
  }

  /**
   * Defines the metadata of PrivateKeyApiModel
   *
   * @returns {object} metadata of PrivateKeyApiModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PrivateKeyApiModel',
      type: {
        name: 'Composite',
        className: 'PrivateKeyApiModel',
        modelProperties: {
          kty: {
            required: false,
            serializedName: 'kty',
            type: {
              name: 'Enum',
              allowedValues: [ 'RSA', 'ECC', 'AES' ]
            }
          },
          n: {
            required: false,
            serializedName: 'n',
            type: {
              name: 'ByteArray'
            }
          },
          e: {
            required: false,
            serializedName: 'e',
            type: {
              name: 'ByteArray'
            }
          },
          dp: {
            required: false,
            serializedName: 'dp',
            type: {
              name: 'ByteArray'
            }
          },
          dq: {
            required: false,
            serializedName: 'dq',
            type: {
              name: 'ByteArray'
            }
          },
          qi: {
            required: false,
            serializedName: 'qi',
            type: {
              name: 'ByteArray'
            }
          },
          p: {
            required: false,
            serializedName: 'p',
            type: {
              name: 'ByteArray'
            }
          },
          q: {
            required: false,
            serializedName: 'q',
            type: {
              name: 'ByteArray'
            }
          },
          crv: {
            required: false,
            serializedName: 'crv',
            type: {
              name: 'String'
            }
          },
          x: {
            required: false,
            serializedName: 'x',
            type: {
              name: 'ByteArray'
            }
          },
          y: {
            required: false,
            serializedName: 'y',
            type: {
              name: 'ByteArray'
            }
          },
          d: {
            required: false,
            serializedName: 'd',
            type: {
              name: 'ByteArray'
            }
          },
          k: {
            required: false,
            serializedName: 'k',
            type: {
              name: 'ByteArray'
            }
          },
          keyHsm: {
            required: false,
            serializedName: 'key_hsm',
            type: {
              name: 'ByteArray'
            }
          }
        }
      }
    };
  }
}

module.exports = PrivateKeyApiModel;
