/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Endpoint query
 *
 */
class EndpointRegistrationQueryApiModel {
  /**
   * Create a EndpointRegistrationQueryApiModel.
   * @property {string} [url] Endoint url for direct server access
   * @property {buffer} [certificate] Certificate of the endpoint
   * @property {string} [securityMode] Possible values include: 'Best', 'Sign',
   * 'SignAndEncrypt', 'None'
   * @property {string} [securityPolicy] Security policy uri
   * @property {boolean} [activated] Whether the endpoint was activated
   * @property {boolean} [connected] Whether the endpoint is connected on
   * supervisor.
   * @property {string} [endpointState] Possible values include: 'Connecting',
   * 'NotReachable', 'Busy', 'NoTrust', 'CertificateInvalid', 'Ready', 'Error'
   * @property {boolean} [includeNotSeenSince] Whether to include endpoints
   * that were soft deleted
   * @property {string} [discovererId] Discoverer id to filter with
   * @property {string} [applicationId] Application id to filter
   * @property {string} [supervisorId] Supervisor id to filter with
   * @property {string} [siteOrGatewayId] Site or gateway id to filter with
   */
  constructor() {
  }

  /**
   * Defines the metadata of EndpointRegistrationQueryApiModel
   *
   * @returns {object} metadata of EndpointRegistrationQueryApiModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EndpointRegistrationQueryApiModel',
      type: {
        name: 'Composite',
        className: 'EndpointRegistrationQueryApiModel',
        modelProperties: {
          url: {
            required: false,
            serializedName: 'url',
            type: {
              name: 'String'
            }
          },
          certificate: {
            required: false,
            serializedName: 'certificate',
            type: {
              name: 'ByteArray'
            }
          },
          securityMode: {
            required: false,
            serializedName: 'securityMode',
            type: {
              name: 'Enum',
              allowedValues: [ 'Best', 'Sign', 'SignAndEncrypt', 'None' ]
            }
          },
          securityPolicy: {
            required: false,
            serializedName: 'securityPolicy',
            type: {
              name: 'String'
            }
          },
          activated: {
            required: false,
            serializedName: 'activated',
            type: {
              name: 'Boolean'
            }
          },
          connected: {
            required: false,
            serializedName: 'connected',
            type: {
              name: 'Boolean'
            }
          },
          endpointState: {
            required: false,
            serializedName: 'endpointState',
            type: {
              name: 'Enum',
              allowedValues: [ 'Connecting', 'NotReachable', 'Busy', 'NoTrust', 'CertificateInvalid', 'Ready', 'Error' ]
            }
          },
          includeNotSeenSince: {
            required: false,
            serializedName: 'includeNotSeenSince',
            type: {
              name: 'Boolean'
            }
          },
          discovererId: {
            required: false,
            serializedName: 'discovererId',
            type: {
              name: 'String'
            }
          },
          applicationId: {
            required: false,
            serializedName: 'applicationId',
            type: {
              name: 'String'
            }
          },
          supervisorId: {
            required: false,
            serializedName: 'supervisorId',
            type: {
              name: 'String'
            }
          },
          siteOrGatewayId: {
            required: false,
            serializedName: 'siteOrGatewayId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = EndpointRegistrationQueryApiModel;
