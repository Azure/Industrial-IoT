/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse, ServiceClientCredentials } from 'ms-rest';
import * as models from "./models";

export default class AzureOpcTwinClient extends ServiceClient {
  /**
   * @class
   * Initializes a new instance of the AzureOpcTwinClient class.
   * @constructor
   *
   * @param {credentials} credentials - Subscription credentials which uniquely identify client subscription.
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   */
  constructor(credentials: ServiceClientCredentials, baseUri?: string, options?: ServiceClientOptions);

  credentials: ServiceClientCredentials;


  /**
   * @summary Browse node references
   *
   * Browse a node on the specified endpoint. The endpoint must be activated and
   * connected and the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The browse request
   *
   * @param {string} [body.nodeId] Node to browse.
   * (default: RootFolder).
   *
   * @param {string} [body.direction] Possible values include: 'Forward',
   * 'Backward', 'Both'
   *
   * @param {object} [body.view]
   *
   * @param {string} body.view.viewId Node of the view to browse
   *
   * @param {number} [body.view.version] Browses specific version of the view.
   *
   * @param {date} [body.view.timestamp] Browses at or before this timestamp.
   *
   * @param {string} [body.referenceTypeId] Reference types to browse.
   * (default: hierarchical).
   *
   * @param {boolean} [body.noSubtypes] Whether to include subtypes of the
   * reference type.
   * (default is false)
   *
   * @param {number} [body.maxReferencesToReturn] Max number of references to
   * return. There might
   * be less returned as this is up to the client
   * restrictions.  Set to 0 to return no references
   * or target nodes.
   * (default is decided by client e.g. 60)
   *
   * @param {boolean} [body.targetNodesOnly] Whether to collapse all references
   * into a set of
   * unique target nodes and not show reference
   * information.
   * (default is false)
   *
   * @param {boolean} [body.readVariableValues] Whether to read variable values
   * on target nodes.
   * (default is false)
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<BrowseResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  browseWithHttpOperationResponse(endpointId: string, body: models.BrowseRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BrowseResponseApiModel>>;

  /**
   * @summary Browse node references
   *
   * Browse a node on the specified endpoint. The endpoint must be activated and
   * connected and the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The browse request
   *
   * @param {string} [body.nodeId] Node to browse.
   * (default: RootFolder).
   *
   * @param {string} [body.direction] Possible values include: 'Forward',
   * 'Backward', 'Both'
   *
   * @param {object} [body.view]
   *
   * @param {string} body.view.viewId Node of the view to browse
   *
   * @param {number} [body.view.version] Browses specific version of the view.
   *
   * @param {date} [body.view.timestamp] Browses at or before this timestamp.
   *
   * @param {string} [body.referenceTypeId] Reference types to browse.
   * (default: hierarchical).
   *
   * @param {boolean} [body.noSubtypes] Whether to include subtypes of the
   * reference type.
   * (default is false)
   *
   * @param {number} [body.maxReferencesToReturn] Max number of references to
   * return. There might
   * be less returned as this is up to the client
   * restrictions.  Set to 0 to return no references
   * or target nodes.
   * (default is decided by client e.g. 60)
   *
   * @param {boolean} [body.targetNodesOnly] Whether to collapse all references
   * into a set of
   * unique target nodes and not show reference
   * information.
   * (default is false)
   *
   * @param {boolean} [body.readVariableValues] Whether to read variable values
   * on target nodes.
   * (default is false)
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {BrowseResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {BrowseResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link BrowseResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  browse(endpointId: string, body: models.BrowseRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BrowseResponseApiModel>;
  browse(endpointId: string, body: models.BrowseRequestApiModel, callback: ServiceCallback<models.BrowseResponseApiModel>): void;
  browse(endpointId: string, body: models.BrowseRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BrowseResponseApiModel>): void;


  /**
   * @summary Browse set of unique target nodes
   *
   * Browse the set of unique hierarchically referenced target nodes on the
   * endpoint. The endpoint must be activated and connected and the module client
   * and server must trust each other. The root node id to browse from can be
   * provided as part of the query parameters. If it is not provided, the
   * RootFolder node is browsed. Note that this is the same as the POST method
   * with the model containing the node id and the targetNodesOnly flag set to
   * true.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.nodeId] The node to browse or omit to browse the
   * root node (i=84)
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<BrowseResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSetOfUniqueNodesWithHttpOperationResponse(endpointId: string, options?: { nodeId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BrowseResponseApiModel>>;

  /**
   * @summary Browse set of unique target nodes
   *
   * Browse the set of unique hierarchically referenced target nodes on the
   * endpoint. The endpoint must be activated and connected and the module client
   * and server must trust each other. The root node id to browse from can be
   * provided as part of the query parameters. If it is not provided, the
   * RootFolder node is browsed. Note that this is the same as the POST method
   * with the model containing the node id and the targetNodesOnly flag set to
   * true.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.nodeId] The node to browse or omit to browse the
   * root node (i=84)
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {BrowseResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {BrowseResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link BrowseResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSetOfUniqueNodes(endpointId: string, options?: { nodeId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.BrowseResponseApiModel>;
  getSetOfUniqueNodes(endpointId: string, callback: ServiceCallback<models.BrowseResponseApiModel>): void;
  getSetOfUniqueNodes(endpointId: string, options: { nodeId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BrowseResponseApiModel>): void;


  /**
   * @summary Browse next set of references
   *
   * Browse next set of references on the endpoint. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The request body with continuation token.
   *
   * @param {string} body.continuationToken Continuation token from previews
   * browse request.
   * (mandatory)
   *
   * @param {boolean} [body.abort] Whether to abort browse and release.
   * (default: false)
   *
   * @param {boolean} [body.targetNodesOnly] Whether to collapse all references
   * into a set of
   * unique target nodes and not show reference
   * information.
   * (default is false)
   *
   * @param {boolean} [body.readVariableValues] Whether to read variable values
   * on target nodes.
   * (default is false)
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<BrowseNextResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  browseNextWithHttpOperationResponse(endpointId: string, body: models.BrowseNextRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BrowseNextResponseApiModel>>;

  /**
   * @summary Browse next set of references
   *
   * Browse next set of references on the endpoint. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The request body with continuation token.
   *
   * @param {string} body.continuationToken Continuation token from previews
   * browse request.
   * (mandatory)
   *
   * @param {boolean} [body.abort] Whether to abort browse and release.
   * (default: false)
   *
   * @param {boolean} [body.targetNodesOnly] Whether to collapse all references
   * into a set of
   * unique target nodes and not show reference
   * information.
   * (default is false)
   *
   * @param {boolean} [body.readVariableValues] Whether to read variable values
   * on target nodes.
   * (default is false)
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {BrowseNextResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {BrowseNextResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link BrowseNextResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  browseNext(endpointId: string, body: models.BrowseNextRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BrowseNextResponseApiModel>;
  browseNext(endpointId: string, body: models.BrowseNextRequestApiModel, callback: ServiceCallback<models.BrowseNextResponseApiModel>): void;
  browseNext(endpointId: string, body: models.BrowseNextRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BrowseNextResponseApiModel>): void;


  /**
   * @summary Browse next set of unique target nodes
   *
   * Browse the next set of unique hierarchically referenced target nodes on the
   * endpoint. The endpoint must be activated and connected and the module client
   * and server must trust each other. Note that this is the same as the POST
   * method with the model containing the continuation token and the
   * targetNodesOnly flag set to true.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {string} continuationToken Continuation token from
   * GetSetOfUniqueNodes operation
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<BrowseNextResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getNextSetOfUniqueNodesWithHttpOperationResponse(endpointId: string, continuationToken: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BrowseNextResponseApiModel>>;

  /**
   * @summary Browse next set of unique target nodes
   *
   * Browse the next set of unique hierarchically referenced target nodes on the
   * endpoint. The endpoint must be activated and connected and the module client
   * and server must trust each other. Note that this is the same as the POST
   * method with the model containing the continuation token and the
   * targetNodesOnly flag set to true.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {string} continuationToken Continuation token from
   * GetSetOfUniqueNodes operation
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {BrowseNextResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {BrowseNextResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link BrowseNextResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getNextSetOfUniqueNodes(endpointId: string, continuationToken: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BrowseNextResponseApiModel>;
  getNextSetOfUniqueNodes(endpointId: string, continuationToken: string, callback: ServiceCallback<models.BrowseNextResponseApiModel>): void;
  getNextSetOfUniqueNodes(endpointId: string, continuationToken: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BrowseNextResponseApiModel>): void;


  /**
   * @summary Browse using a browse path
   *
   * Browse using a path from the specified node id. This call uses
   * TranslateBrowsePathsToNodeIds service under the hood. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The browse path request
   *
   * @param {string} [body.nodeId] Node to browse from.
   * (default: RootFolder).
   *
   * @param {array} body.browsePaths The paths to browse from node.
   * (mandatory)
   *
   * @param {boolean} [body.readVariableValues] Whether to read variable values
   * on target nodes.
   * (default is false)
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<BrowsePathResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  browseUsingPathWithHttpOperationResponse(endpointId: string, body: models.BrowsePathRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BrowsePathResponseApiModel>>;

  /**
   * @summary Browse using a browse path
   *
   * Browse using a path from the specified node id. This call uses
   * TranslateBrowsePathsToNodeIds service under the hood. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The browse path request
   *
   * @param {string} [body.nodeId] Node to browse from.
   * (default: RootFolder).
   *
   * @param {array} body.browsePaths The paths to browse from node.
   * (mandatory)
   *
   * @param {boolean} [body.readVariableValues] Whether to read variable values
   * on target nodes.
   * (default is false)
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {BrowsePathResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {BrowsePathResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link BrowsePathResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  browseUsingPath(endpointId: string, body: models.BrowsePathRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BrowsePathResponseApiModel>;
  browseUsingPath(endpointId: string, body: models.BrowsePathRequestApiModel, callback: ServiceCallback<models.BrowsePathResponseApiModel>): void;
  browseUsingPath(endpointId: string, body: models.BrowsePathRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BrowsePathResponseApiModel>): void;


  /**
   * @summary Get method meta data
   *
   * Return method meta data to support a user interface displaying forms to
   * input and output arguments. The endpoint must be activated and connected and
   * the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The method metadata request
   *
   * @param {string} [body.methodId] Method id of method to call.
   * (Required)
   *
   * @param {array} [body.methodBrowsePath] An optional component path from the
   * node identified by
   * MethodId to the actual method node.
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<MethodMetadataResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCallMetadataWithHttpOperationResponse(endpointId: string, body: models.MethodMetadataRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MethodMetadataResponseApiModel>>;

  /**
   * @summary Get method meta data
   *
   * Return method meta data to support a user interface displaying forms to
   * input and output arguments. The endpoint must be activated and connected and
   * the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The method metadata request
   *
   * @param {string} [body.methodId] Method id of method to call.
   * (Required)
   *
   * @param {array} [body.methodBrowsePath] An optional component path from the
   * node identified by
   * MethodId to the actual method node.
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {MethodMetadataResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {MethodMetadataResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link MethodMetadataResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCallMetadata(endpointId: string, body: models.MethodMetadataRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MethodMetadataResponseApiModel>;
  getCallMetadata(endpointId: string, body: models.MethodMetadataRequestApiModel, callback: ServiceCallback<models.MethodMetadataResponseApiModel>): void;
  getCallMetadata(endpointId: string, body: models.MethodMetadataRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MethodMetadataResponseApiModel>): void;


  /**
   * @summary Call a method
   *
   * Invoke method node with specified input arguments. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The method call request
   *
   * @param {string} [body.methodId] Method id of method to call.
   *
   * @param {string} [body.objectId] Context of the method, i.e. an object or
   * object type
   * node.
   *
   * @param {array} [body.argumentsProperty] Arguments for the method - null
   * means no args
   *
   * @param {array} [body.methodBrowsePath] An optional component path from the
   * node identified by
   * MethodId or from a resolved objectId to the actual
   * method node.
   *
   * @param {array} [body.objectBrowsePath] An optional component path from the
   * node identified by
   * ObjectId to the actual object or objectType node.
   * If ObjectId is null, the root node (i=84) is used.
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<MethodCallResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  callMethodWithHttpOperationResponse(endpointId: string, body: models.MethodCallRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MethodCallResponseApiModel>>;

  /**
   * @summary Call a method
   *
   * Invoke method node with specified input arguments. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The method call request
   *
   * @param {string} [body.methodId] Method id of method to call.
   *
   * @param {string} [body.objectId] Context of the method, i.e. an object or
   * object type
   * node.
   *
   * @param {array} [body.argumentsProperty] Arguments for the method - null
   * means no args
   *
   * @param {array} [body.methodBrowsePath] An optional component path from the
   * node identified by
   * MethodId or from a resolved objectId to the actual
   * method node.
   *
   * @param {array} [body.objectBrowsePath] An optional component path from the
   * node identified by
   * ObjectId to the actual object or objectType node.
   * If ObjectId is null, the root node (i=84) is used.
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {MethodCallResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {MethodCallResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link MethodCallResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  callMethod(endpointId: string, body: models.MethodCallRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MethodCallResponseApiModel>;
  callMethod(endpointId: string, body: models.MethodCallRequestApiModel, callback: ServiceCallback<models.MethodCallResponseApiModel>): void;
  callMethod(endpointId: string, body: models.MethodCallRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MethodCallResponseApiModel>): void;


  /**
   * @summary Read variable value
   *
   * Read a variable node's value. The endpoint must be activated and connected
   * and the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The read value request
   *
   * @param {string} [body.nodeId] Node to read from (mandatory)
   *
   * @param {array} [body.browsePath] An optional path from NodeId instance to
   * the actual node.
   *
   * @param {string} [body.indexRange] Index range to read, e.g. 1:2,0:1 for 2
   * slices
   * out of a matrix or 0:1 for the first item in
   * an array, string or bytestring.
   * See 7.22 of part 4: NumericRange.
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ValueReadResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  readValueWithHttpOperationResponse(endpointId: string, body: models.ValueReadRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ValueReadResponseApiModel>>;

  /**
   * @summary Read variable value
   *
   * Read a variable node's value. The endpoint must be activated and connected
   * and the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The read value request
   *
   * @param {string} [body.nodeId] Node to read from (mandatory)
   *
   * @param {array} [body.browsePath] An optional path from NodeId instance to
   * the actual node.
   *
   * @param {string} [body.indexRange] Index range to read, e.g. 1:2,0:1 for 2
   * slices
   * out of a matrix or 0:1 for the first item in
   * an array, string or bytestring.
   * See 7.22 of part 4: NumericRange.
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ValueReadResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ValueReadResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ValueReadResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  readValue(endpointId: string, body: models.ValueReadRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ValueReadResponseApiModel>;
  readValue(endpointId: string, body: models.ValueReadRequestApiModel, callback: ServiceCallback<models.ValueReadResponseApiModel>): void;
  readValue(endpointId: string, body: models.ValueReadRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ValueReadResponseApiModel>): void;


  /**
   * @summary Get variable value
   *
   * Get a variable node's value using its node id. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {string} nodeId The node to read
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ValueReadResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getValueWithHttpOperationResponse(endpointId: string, nodeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ValueReadResponseApiModel>>;

  /**
   * @summary Get variable value
   *
   * Get a variable node's value using its node id. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {string} nodeId The node to read
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ValueReadResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ValueReadResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ValueReadResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getValue(endpointId: string, nodeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ValueReadResponseApiModel>;
  getValue(endpointId: string, nodeId: string, callback: ServiceCallback<models.ValueReadResponseApiModel>): void;
  getValue(endpointId: string, nodeId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ValueReadResponseApiModel>): void;


  /**
   * @summary Read node attributes
   *
   * Read attributes of a node. The endpoint must be activated and connected and
   * the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The read request
   *
   * @param {array} body.attributes Attributes to read
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ReadResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  readAttributesWithHttpOperationResponse(endpointId: string, body: models.ReadRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReadResponseApiModel>>;

  /**
   * @summary Read node attributes
   *
   * Read attributes of a node. The endpoint must be activated and connected and
   * the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The read request
   *
   * @param {array} body.attributes Attributes to read
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ReadResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ReadResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ReadResponseApiModel} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  readAttributes(endpointId: string, body: models.ReadRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReadResponseApiModel>;
  readAttributes(endpointId: string, body: models.ReadRequestApiModel, callback: ServiceCallback<models.ReadResponseApiModel>): void;
  readAttributes(endpointId: string, body: models.ReadRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReadResponseApiModel>): void;


  /**
   * @summary Write variable value
   *
   * Write variable node's value. The endpoint must be activated and connected
   * and the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The write value request
   *
   * @param {string} [body.nodeId] Node id to to write value to.
   *
   * @param {array} [body.browsePath] An optional path from NodeId instance to
   * the actual node.
   *
   * @param {object} body.value Value to write. The system tries to convert
   * the value according to the data type value,
   * e.g. convert comma seperated value strings
   * into arrays.  (Mandatory)
   *
   * @param {string} [body.dataType] A built in datatype for the value. This can
   * be a data type from browse, or a built in
   * type.
   * (default: best effort)
   *
   * @param {string} [body.indexRange] Index range to write
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ValueWriteResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  writeValueWithHttpOperationResponse(endpointId: string, body: models.ValueWriteRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ValueWriteResponseApiModel>>;

  /**
   * @summary Write variable value
   *
   * Write variable node's value. The endpoint must be activated and connected
   * and the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The write value request
   *
   * @param {string} [body.nodeId] Node id to to write value to.
   *
   * @param {array} [body.browsePath] An optional path from NodeId instance to
   * the actual node.
   *
   * @param {object} body.value Value to write. The system tries to convert
   * the value according to the data type value,
   * e.g. convert comma seperated value strings
   * into arrays.  (Mandatory)
   *
   * @param {string} [body.dataType] A built in datatype for the value. This can
   * be a data type from browse, or a built in
   * type.
   * (default: best effort)
   *
   * @param {string} [body.indexRange] Index range to write
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ValueWriteResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ValueWriteResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ValueWriteResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  writeValue(endpointId: string, body: models.ValueWriteRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ValueWriteResponseApiModel>;
  writeValue(endpointId: string, body: models.ValueWriteRequestApiModel, callback: ServiceCallback<models.ValueWriteResponseApiModel>): void;
  writeValue(endpointId: string, body: models.ValueWriteRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ValueWriteResponseApiModel>): void;


  /**
   * @summary Write node attributes
   *
   * Write any attribute of a node. The endpoint must be activated and connected
   * and the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The batch write request
   *
   * @param {array} body.attributes Attributes to update
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<WriteResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  writeAttributesWithHttpOperationResponse(endpointId: string, body: models.WriteRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WriteResponseApiModel>>;

  /**
   * @summary Write node attributes
   *
   * Write any attribute of a node. The endpoint must be activated and connected
   * and the module client and server must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The batch write request
   *
   * @param {array} body.attributes Attributes to update
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {WriteResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {WriteResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link WriteResponseApiModel} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  writeAttributes(endpointId: string, body: models.WriteRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WriteResponseApiModel>;
  writeAttributes(endpointId: string, body: models.WriteRequestApiModel, callback: ServiceCallback<models.WriteResponseApiModel>): void;
  writeAttributes(endpointId: string, body: models.WriteRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WriteResponseApiModel>): void;
}

export { AzureOpcTwinClient, models as AzureOpcTwinModels };
