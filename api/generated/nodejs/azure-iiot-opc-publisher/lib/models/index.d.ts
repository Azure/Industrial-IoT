/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as moment from "moment";

/**
 * A monitored and published item
 */
export interface PublishedItemApiModel {
  /**
   * Node to monitor
   */
  nodeId: string;
  /**
   * Publishing interval to use
   */
  publishingInterval?: string;
  /**
   * Sampling interval to use
   */
  samplingInterval?: string;
}

/**
 * Credential model
 */
export interface CredentialApiModel {
  /**
   * Possible values include: 'None', 'UserName', 'X509Certificate', 'JwtToken'
   */
  type?: string;
  /**
   * Value to pass to server
   */
  value?: any;
}

/**
 * Diagnostics configuration
 */
export interface DiagnosticsApiModel {
  /**
   * Possible values include: 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   */
  level?: string;
  /**
   * Client audit log entry.
   * (default: client generated)
   */
  auditId?: string;
  /**
   * Timestamp of request.
   * (default: client generated)
   */
  timeStamp?: Date;
}

/**
 * Request header model
 */
export interface RequestHeaderApiModel {
  elevation?: CredentialApiModel;
  /**
   * Optional list of locales in preference order.
  */
  locales?: string[];
  diagnostics?: DiagnosticsApiModel;
}

/**
 * Publish request
*/
export interface PublishStartRequestApiModel {
  item: PublishedItemApiModel;
  header?: RequestHeaderApiModel;
}

/**
 * Service result
*/
export interface ServiceResultApiModel {
  /**
   * Error code - if null operation succeeded.
  */
  statusCode?: number;
  /**
   * Error message in case of error or null.
  */
  errorMessage?: string;
  /**
   * Additional diagnostics information
  */
  diagnostics?: any;
}

/**
 * Result of publish request
*/
export interface PublishStartResponseApiModel {
  errorInfo?: ServiceResultApiModel;
}

/**
 * Unpublish request
*/
export interface PublishStopRequestApiModel {
  /**
   * Node of published item to unpublish
  */
  nodeId: string;
  header?: RequestHeaderApiModel;
}

/**
 * Result of publish stop request
*/
export interface PublishStopResponseApiModel {
  errorInfo?: ServiceResultApiModel;
}

/**
 * Request list of published items
*/
export interface PublishedItemListRequestApiModel {
  /**
   * Continuation token or null to start
  */
  continuationToken?: string;
}

/**
 * List of published nodes
*/
export interface PublishedItemListResponseApiModel {
  /**
   * Monitored items
  */
  items?: PublishedItemApiModel[];
  /**
   * Continuation or null if final
  */
  continuationToken?: string;
}
