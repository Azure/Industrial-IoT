/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse, ServiceClientCredentials } from 'ms-rest';
import * as models from "./models";

export default class AzureOpcPublisherClient extends ServiceClient {
  /**
   * @class
   * Initializes a new instance of the AzureOpcPublisherClient class.
   * @constructor
   *
   * @param {credentials} credentials - Subscription credentials which uniquely identify client subscription.
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   */
  constructor(credentials: ServiceClientCredentials, baseUri?: string, options?: ServiceClientOptions);

  credentials: ServiceClientCredentials;


  /**
   * @summary Subscribe to receive samples
   *
   * Register a client to receive publisher samples through SignalR.
   *
   * @param {string} endpointId The endpoint to subscribe to
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.body] The user id that will receive publisher
   * samples.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  subscribeWithHttpOperationResponse(endpointId: string, options?: { body? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Subscribe to receive samples
   *
   * Register a client to receive publisher samples through SignalR.
   *
   * @param {string} endpointId The endpoint to subscribe to
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.body] The user id that will receive publisher
   * samples.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  subscribe(endpointId: string, options?: { body? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  subscribe(endpointId: string, callback: ServiceCallback<void>): void;
  subscribe(endpointId: string, options: { body? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Unsubscribe from receiving samples.
   *
   * Unregister a client and stop it from receiving samples.
   *
   * @param {string} endpointId The endpoint to unsubscribe from
   *
   * @param {string} userId The user id that will not receive any more published
   * samples
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  unsubscribeWithHttpOperationResponse(endpointId: string, userId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Unsubscribe from receiving samples.
   *
   * Unregister a client and stop it from receiving samples.
   *
   * @param {string} endpointId The endpoint to unsubscribe from
   *
   * @param {string} userId The user id that will not receive any more published
   * samples
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  unsubscribe(endpointId: string, userId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  unsubscribe(endpointId: string, userId: string, callback: ServiceCallback<void>): void;
  unsubscribe(endpointId: string, userId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Start publishing node values
   *
   * Start publishing variable node values to IoT Hub. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The publish request
   *
   * @param {object} body.item
   *
   * @param {string} body.item.nodeId Node to monitor
   *
   * @param {string} [body.item.publishingInterval] Publishing interval to use
   *
   * @param {string} [body.item.samplingInterval] Sampling interval to use
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PublishStartResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  startPublishingValuesWithHttpOperationResponse(endpointId: string, body: models.PublishStartRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PublishStartResponseApiModel>>;

  /**
   * @summary Start publishing node values
   *
   * Start publishing variable node values to IoT Hub. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The publish request
   *
   * @param {object} body.item
   *
   * @param {string} body.item.nodeId Node to monitor
   *
   * @param {string} [body.item.publishingInterval] Publishing interval to use
   *
   * @param {string} [body.item.samplingInterval] Sampling interval to use
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PublishStartResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PublishStartResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PublishStartResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  startPublishingValues(endpointId: string, body: models.PublishStartRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PublishStartResponseApiModel>;
  startPublishingValues(endpointId: string, body: models.PublishStartRequestApiModel, callback: ServiceCallback<models.PublishStartResponseApiModel>): void;
  startPublishingValues(endpointId: string, body: models.PublishStartRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PublishStartResponseApiModel>): void;


  /**
   * @summary Stop publishing node values
   *
   * Stop publishing variable node values to IoT Hub. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The unpublish request
   *
   * @param {string} body.nodeId Node of published item to unpublish
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PublishStopResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  stopPublishingValuesWithHttpOperationResponse(endpointId: string, body: models.PublishStopRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PublishStopResponseApiModel>>;

  /**
   * @summary Stop publishing node values
   *
   * Stop publishing variable node values to IoT Hub. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The unpublish request
   *
   * @param {string} body.nodeId Node of published item to unpublish
   *
   * @param {object} [body.header]
   *
   * @param {object} [body.header.elevation]
   *
   * @param {string} [body.header.elevation.type] Possible values include:
   * 'None', 'UserName', 'X509Certificate', 'JwtToken'
   *
   * @param {object} [body.header.elevation.value] Value to pass to server
   *
   * @param {array} [body.header.locales] Optional list of locales in preference
   * order.
   *
   * @param {object} [body.header.diagnostics]
   *
   * @param {string} [body.header.diagnostics.level] Possible values include:
   * 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
   *
   * @param {string} [body.header.diagnostics.auditId] Client audit log entry.
   * (default: client generated)
   *
   * @param {date} [body.header.diagnostics.timeStamp] Timestamp of request.
   * (default: client generated)
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PublishStopResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PublishStopResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PublishStopResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  stopPublishingValues(endpointId: string, body: models.PublishStopRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PublishStopResponseApiModel>;
  stopPublishingValues(endpointId: string, body: models.PublishStopRequestApiModel, callback: ServiceCallback<models.PublishStopResponseApiModel>): void;
  stopPublishingValues(endpointId: string, body: models.PublishStopRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PublishStopResponseApiModel>): void;


  /**
   * @summary Get currently published nodes
   *
   * Returns currently published node ids for an endpoint. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The list request
   *
   * @param {string} [body.continuationToken] Continuation token or null to start
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PublishedItemListResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getFirstListOfPublishedNodesWithHttpOperationResponse(endpointId: string, body: models.PublishedItemListRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PublishedItemListResponseApiModel>>;

  /**
   * @summary Get currently published nodes
   *
   * Returns currently published node ids for an endpoint. The endpoint must be
   * activated and connected and the module client and server must trust each
   * other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {object} body The list request
   *
   * @param {string} [body.continuationToken] Continuation token or null to start
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PublishedItemListResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PublishedItemListResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PublishedItemListResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getFirstListOfPublishedNodes(endpointId: string, body: models.PublishedItemListRequestApiModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PublishedItemListResponseApiModel>;
  getFirstListOfPublishedNodes(endpointId: string, body: models.PublishedItemListRequestApiModel, callback: ServiceCallback<models.PublishedItemListResponseApiModel>): void;
  getFirstListOfPublishedNodes(endpointId: string, body: models.PublishedItemListRequestApiModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PublishedItemListResponseApiModel>): void;


  /**
   * @summary Get next set of published nodes
   *
   * Returns next set of currently published node ids for an endpoint. The
   * endpoint must be activated and connected and the module client and server
   * must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {string} continuationToken The continuation token to continue with
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PublishedItemListResponseApiModel>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getNextListOfPublishedNodesWithHttpOperationResponse(endpointId: string, continuationToken: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PublishedItemListResponseApiModel>>;

  /**
   * @summary Get next set of published nodes
   *
   * Returns next set of currently published node ids for an endpoint. The
   * endpoint must be activated and connected and the module client and server
   * must trust each other.
   *
   * @param {string} endpointId The identifier of the activated endpoint.
   *
   * @param {string} continuationToken The continuation token to continue with
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PublishedItemListResponseApiModel} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PublishedItemListResponseApiModel} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PublishedItemListResponseApiModel} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getNextListOfPublishedNodes(endpointId: string, continuationToken: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PublishedItemListResponseApiModel>;
  getNextListOfPublishedNodes(endpointId: string, continuationToken: string, callback: ServiceCallback<models.PublishedItemListResponseApiModel>): void;
  getNextListOfPublishedNodes(endpointId: string, continuationToken: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PublishedItemListResponseApiModel>): void;
}

export { AzureOpcPublisherClient, models as AzureOpcPublisherModels };
