/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Read processed historic data
 *
 */
class ReadProcessedValuesDetailsApiModel {
  /**
   * Create a ReadProcessedValuesDetailsApiModel.
   * @property {date} [startTime] Start time to read from.
   * @property {date} [endTime] End time to read until
   * @property {number} [processingInterval] Interval to process
   * @property {string} [aggregateTypeId] The aggregate type node ids
   * @property {object} [aggregateConfiguration] A configuration for the
   * aggregate
   * @property {boolean} [aggregateConfiguration.useServerCapabilitiesDefaults]
   * Whether to use the default server caps
   * @property {boolean} [aggregateConfiguration.treatUncertainAsBad] Whether
   * to treat uncertain as bad
   * @property {number} [aggregateConfiguration.percentDataBad] Percent of data
   * that is bad
   * @property {number} [aggregateConfiguration.percentDataGood] Percent of
   * data that is good
   * @property {boolean} [aggregateConfiguration.useSlopedExtrapolation]
   * Whether to use sloped extrapolation.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ReadProcessedValuesDetailsApiModel
   *
   * @returns {object} metadata of ReadProcessedValuesDetailsApiModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ReadProcessedValuesDetailsApiModel',
      type: {
        name: 'Composite',
        className: 'ReadProcessedValuesDetailsApiModel',
        modelProperties: {
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          processingInterval: {
            required: false,
            serializedName: 'processingInterval',
            type: {
              name: 'Number'
            }
          },
          aggregateTypeId: {
            required: false,
            serializedName: 'aggregateTypeId',
            type: {
              name: 'String'
            }
          },
          aggregateConfiguration: {
            required: false,
            serializedName: 'aggregateConfiguration',
            type: {
              name: 'Composite',
              className: 'AggregateConfigApiModel'
            }
          }
        }
      }
    };
  }
}

module.exports = ReadProcessedValuesDetailsApiModel;
