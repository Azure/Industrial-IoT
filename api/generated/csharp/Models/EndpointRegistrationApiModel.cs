// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Registry.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Endpoint registration model
    /// </summary>
    public partial class EndpointRegistrationApiModel
    {
        /// <summary>
        /// Initializes a new instance of the EndpointRegistrationApiModel
        /// class.
        /// </summary>
        public EndpointRegistrationApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointRegistrationApiModel
        /// class.
        /// </summary>
        /// <param name="id">Registered identifier of the endpoint</param>
        /// <param name="endpoint">Endpoint information of the
        /// registration</param>
        /// <param name="endpointUrl">Original endpoint url of the
        /// endpoint</param>
        /// <param name="siteId">Registered site of the endpoint</param>
        /// <param name="supervisorId">Supervisor that registered the
        /// endpoint.</param>
        /// <param name="securityLevel">Security level of the endpoint</param>
        /// <param name="authenticationMethods">Supported authentication
        /// methods that can be selected to
        /// obtain a credential and used to interact with the endpoint.</param>
        public EndpointRegistrationApiModel(string id, EndpointApiModel endpoint, string endpointUrl = default(string), string siteId = default(string), string supervisorId = default(string), int? securityLevel = default(int?), IList<AuthenticationMethodApiModel> authenticationMethods = default(IList<AuthenticationMethodApiModel>))
        {
            Id = id;
            EndpointUrl = endpointUrl;
            SiteId = siteId;
            SupervisorId = supervisorId;
            Endpoint = endpoint;
            SecurityLevel = securityLevel;
            AuthenticationMethods = authenticationMethods;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets registered identifier of the endpoint
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets original endpoint url of the endpoint
        /// </summary>
        [JsonProperty(PropertyName = "endpointUrl")]
        public string EndpointUrl { get; set; }

        /// <summary>
        /// Gets or sets registered site of the endpoint
        /// </summary>
        [JsonProperty(PropertyName = "siteId")]
        public string SiteId { get; set; }

        /// <summary>
        /// Gets or sets supervisor that registered the endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "supervisorId")]
        public string SupervisorId { get; set; }

        /// <summary>
        /// Gets or sets endpoint information of the registration
        /// </summary>
        [JsonProperty(PropertyName = "endpoint")]
        public EndpointApiModel Endpoint { get; set; }

        /// <summary>
        /// Gets or sets security level of the endpoint
        /// </summary>
        [JsonProperty(PropertyName = "securityLevel")]
        public int? SecurityLevel { get; set; }

        /// <summary>
        /// Gets or sets supported authentication methods that can be selected
        /// to
        /// obtain a credential and used to interact with the endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "authenticationMethods")]
        public IList<AuthenticationMethodApiModel> AuthenticationMethods { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Endpoint == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Endpoint");
            }
            if (Endpoint != null)
            {
                Endpoint.Validate();
            }
            if (AuthenticationMethods != null)
            {
                foreach (var element in AuthenticationMethods)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
