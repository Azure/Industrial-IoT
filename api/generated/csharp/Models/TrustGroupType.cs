// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Vault.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TrustGroupType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TrustGroupType
    {
        [EnumMember(Value = "ApplicationInstanceCertificate")]
        ApplicationInstanceCertificate,
        [EnumMember(Value = "HttpsCertificate")]
        HttpsCertificate,
        [EnumMember(Value = "UserCredentialCertificate")]
        UserCredentialCertificate
    }
    internal static class TrustGroupTypeEnumExtension
    {
        internal static string ToSerializedValue(this TrustGroupType? value)
        {
            return value == null ? null : ((TrustGroupType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TrustGroupType value)
        {
            switch( value )
            {
                case TrustGroupType.ApplicationInstanceCertificate:
                    return "ApplicationInstanceCertificate";
                case TrustGroupType.HttpsCertificate:
                    return "HttpsCertificate";
                case TrustGroupType.UserCredentialCertificate:
                    return "UserCredentialCertificate";
            }
            return null;
        }

        internal static TrustGroupType? ParseTrustGroupType(this string value)
        {
            switch( value )
            {
                case "ApplicationInstanceCertificate":
                    return TrustGroupType.ApplicationInstanceCertificate;
                case "HttpsCertificate":
                    return TrustGroupType.HttpsCertificate;
                case "UserCredentialCertificate":
                    return TrustGroupType.UserCredentialCertificate;
            }
            return null;
        }
    }
}
