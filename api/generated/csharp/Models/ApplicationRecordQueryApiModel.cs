// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Registry.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Query by id
    /// </summary>
    public partial class ApplicationRecordQueryApiModel
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationRecordQueryApiModel
        /// class.
        /// </summary>
        public ApplicationRecordQueryApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationRecordQueryApiModel
        /// class.
        /// </summary>
        /// <param name="startingRecordId">Starting record id</param>
        /// <param name="maxRecordsToReturn">Max records to return</param>
        /// <param name="applicationName">Application name</param>
        /// <param name="applicationUri">Application uri</param>
        /// <param name="applicationType">Application type. Possible values
        /// include: 'Server', 'Client', 'ClientAndServer',
        /// 'DiscoveryServer'</param>
        /// <param name="productUri">Product uri</param>
        /// <param name="serverCapabilities">Server capabilities</param>
        public ApplicationRecordQueryApiModel(int? startingRecordId = default(int?), int? maxRecordsToReturn = default(int?), string applicationName = default(string), string applicationUri = default(string), ApplicationType? applicationType = default(ApplicationType?), string productUri = default(string), IList<string> serverCapabilities = default(IList<string>))
        {
            StartingRecordId = startingRecordId;
            MaxRecordsToReturn = maxRecordsToReturn;
            ApplicationName = applicationName;
            ApplicationUri = applicationUri;
            ApplicationType = applicationType;
            ProductUri = productUri;
            ServerCapabilities = serverCapabilities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets starting record id
        /// </summary>
        [JsonProperty(PropertyName = "startingRecordId")]
        public int? StartingRecordId { get; set; }

        /// <summary>
        /// Gets or sets max records to return
        /// </summary>
        [JsonProperty(PropertyName = "maxRecordsToReturn")]
        public int? MaxRecordsToReturn { get; set; }

        /// <summary>
        /// Gets or sets application name
        /// </summary>
        [JsonProperty(PropertyName = "applicationName")]
        public string ApplicationName { get; set; }

        /// <summary>
        /// Gets or sets application uri
        /// </summary>
        [JsonProperty(PropertyName = "applicationUri")]
        public string ApplicationUri { get; set; }

        /// <summary>
        /// Gets or sets application type. Possible values include: 'Server',
        /// 'Client', 'ClientAndServer', 'DiscoveryServer'
        /// </summary>
        [JsonProperty(PropertyName = "applicationType")]
        public ApplicationType? ApplicationType { get; set; }

        /// <summary>
        /// Gets or sets product uri
        /// </summary>
        [JsonProperty(PropertyName = "productUri")]
        public string ProductUri { get; set; }

        /// <summary>
        /// Gets or sets server capabilities
        /// </summary>
        [JsonProperty(PropertyName = "serverCapabilities")]
        public IList<string> ServerCapabilities { get; set; }

    }
}
