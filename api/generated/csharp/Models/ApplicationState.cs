// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Registry.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ApplicationState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ApplicationState
    {
        [EnumMember(Value = "New")]
        New,
        [EnumMember(Value = "Approved")]
        Approved,
        [EnumMember(Value = "Rejected")]
        Rejected
    }
    internal static class ApplicationStateEnumExtension
    {
        internal static string ToSerializedValue(this ApplicationState? value)
        {
            return value == null ? null : ((ApplicationState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ApplicationState value)
        {
            switch( value )
            {
                case ApplicationState.New:
                    return "New";
                case ApplicationState.Approved:
                    return "Approved";
                case ApplicationState.Rejected:
                    return "Rejected";
            }
            return null;
        }

        internal static ApplicationState? ParseApplicationState(this string value)
        {
            switch( value )
            {
                case "New":
                    return ApplicationState.New;
                case "Approved":
                    return ApplicationState.Approved;
                case "Rejected":
                    return ApplicationState.Rejected;
            }
            return null;
        }
    }
}
