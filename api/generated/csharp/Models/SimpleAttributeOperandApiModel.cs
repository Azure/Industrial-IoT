// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.History.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Simple attribute operand model
    /// </summary>
    public partial class SimpleAttributeOperandApiModel
    {
        /// <summary>
        /// Initializes a new instance of the SimpleAttributeOperandApiModel
        /// class.
        /// </summary>
        public SimpleAttributeOperandApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SimpleAttributeOperandApiModel
        /// class.
        /// </summary>
        /// <param name="nodeId">Type definition node id if operand is
        /// simple or full attribute operand.</param>
        /// <param name="browsePath">Browse path of attribute operand</param>
        /// <param name="attributeId">Possible values include: 'NodeClass',
        /// 'BrowseName', 'DisplayName', 'Description', 'WriteMask',
        /// 'UserWriteMask', 'IsAbstract', 'Symmetric', 'InverseName',
        /// 'ContainsNoLoops', 'EventNotifier', 'Value', 'DataType',
        /// 'ValueRank', 'ArrayDimensions', 'AccessLevel', 'UserAccessLevel',
        /// 'MinimumSamplingInterval', 'Historizing', 'Executable',
        /// 'UserExecutable', 'DataTypeDefinition', 'RolePermissions',
        /// 'UserRolePermissions', 'AccessRestrictions'</param>
        /// <param name="indexRange">Index range of attribute operand</param>
        public SimpleAttributeOperandApiModel(string nodeId = default(string), IList<string> browsePath = default(IList<string>), NodeAttribute? attributeId = default(NodeAttribute?), string indexRange = default(string))
        {
            NodeId = nodeId;
            BrowsePath = browsePath;
            AttributeId = attributeId;
            IndexRange = indexRange;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type definition node id if operand is
        /// simple or full attribute operand.
        /// </summary>
        [JsonProperty(PropertyName = "nodeId")]
        public string NodeId { get; set; }

        /// <summary>
        /// Gets or sets browse path of attribute operand
        /// </summary>
        [JsonProperty(PropertyName = "browsePath")]
        public IList<string> BrowsePath { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NodeClass', 'BrowseName',
        /// 'DisplayName', 'Description', 'WriteMask', 'UserWriteMask',
        /// 'IsAbstract', 'Symmetric', 'InverseName', 'ContainsNoLoops',
        /// 'EventNotifier', 'Value', 'DataType', 'ValueRank',
        /// 'ArrayDimensions', 'AccessLevel', 'UserAccessLevel',
        /// 'MinimumSamplingInterval', 'Historizing', 'Executable',
        /// 'UserExecutable', 'DataTypeDefinition', 'RolePermissions',
        /// 'UserRolePermissions', 'AccessRestrictions'
        /// </summary>
        [JsonProperty(PropertyName = "attributeId")]
        public NodeAttribute? AttributeId { get; set; }

        /// <summary>
        /// Gets or sets index range of attribute operand
        /// </summary>
        [JsonProperty(PropertyName = "indexRange")]
        public string IndexRange { get; set; }

    }
}
