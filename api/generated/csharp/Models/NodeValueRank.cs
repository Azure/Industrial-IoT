// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Twin.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for NodeValueRank.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum NodeValueRank
    {
        [EnumMember(Value = "OneOrMoreDimensions")]
        OneOrMoreDimensions,
        [EnumMember(Value = "OneDimension")]
        OneDimension,
        [EnumMember(Value = "TwoDimensions")]
        TwoDimensions,
        [EnumMember(Value = "ScalarOrOneDimension")]
        ScalarOrOneDimension,
        [EnumMember(Value = "Any")]
        Any,
        [EnumMember(Value = "Scalar")]
        Scalar
    }
    internal static class NodeValueRankEnumExtension
    {
        internal static string ToSerializedValue(this NodeValueRank? value)
        {
            return value == null ? null : ((NodeValueRank)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this NodeValueRank value)
        {
            switch( value )
            {
                case NodeValueRank.OneOrMoreDimensions:
                    return "OneOrMoreDimensions";
                case NodeValueRank.OneDimension:
                    return "OneDimension";
                case NodeValueRank.TwoDimensions:
                    return "TwoDimensions";
                case NodeValueRank.ScalarOrOneDimension:
                    return "ScalarOrOneDimension";
                case NodeValueRank.Any:
                    return "Any";
                case NodeValueRank.Scalar:
                    return "Scalar";
            }
            return null;
        }

        internal static NodeValueRank? ParseNodeValueRank(this string value)
        {
            switch( value )
            {
                case "OneOrMoreDimensions":
                    return NodeValueRank.OneOrMoreDimensions;
                case "OneDimension":
                    return NodeValueRank.OneDimension;
                case "TwoDimensions":
                    return NodeValueRank.TwoDimensions;
                case "ScalarOrOneDimension":
                    return NodeValueRank.ScalarOrOneDimension;
                case "Any":
                    return NodeValueRank.Any;
                case "Scalar":
                    return NodeValueRank.Scalar;
            }
            return null;
        }
    }
}
