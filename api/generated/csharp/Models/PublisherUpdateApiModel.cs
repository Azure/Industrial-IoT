// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Registry.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Publisher registration update request
    /// </summary>
    public partial class PublisherUpdateApiModel
    {
        /// <summary>
        /// Initializes a new instance of the PublisherUpdateApiModel class.
        /// </summary>
        public PublisherUpdateApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PublisherUpdateApiModel class.
        /// </summary>
        /// <param name="siteId">Site of the publisher</param>
        /// <param name="configuration">Publisher discovery
        /// configuration</param>
        /// <param name="logLevel">Current log level. Possible values include:
        /// 'Error', 'Information', 'Debug', 'Verbose'</param>
        public PublisherUpdateApiModel(string siteId = default(string), PublisherConfigApiModel configuration = default(PublisherConfigApiModel), TraceLogLevel? logLevel = default(TraceLogLevel?))
        {
            SiteId = siteId;
            Configuration = configuration;
            LogLevel = logLevel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets site of the publisher
        /// </summary>
        [JsonProperty(PropertyName = "siteId")]
        public string SiteId { get; set; }

        /// <summary>
        /// Gets or sets publisher discovery configuration
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public PublisherConfigApiModel Configuration { get; set; }

        /// <summary>
        /// Gets or sets current log level. Possible values include: 'Error',
        /// 'Information', 'Debug', 'Verbose'
        /// </summary>
        [JsonProperty(PropertyName = "logLevel")]
        public TraceLogLevel? LogLevel { get; set; }

    }
}
