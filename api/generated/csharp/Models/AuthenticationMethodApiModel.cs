// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Registry.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Authentication Method model
    /// </summary>
    public partial class AuthenticationMethodApiModel
    {
        /// <summary>
        /// Initializes a new instance of the AuthenticationMethodApiModel
        /// class.
        /// </summary>
        public AuthenticationMethodApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AuthenticationMethodApiModel
        /// class.
        /// </summary>
        /// <param name="id">Authentication method id</param>
        /// <param name="credentialType">Type of credential. Possible values
        /// include: 'None', 'UserName', 'X509Certificate', 'JwtToken'</param>
        /// <param name="securityPolicy">Security policy to use when passing
        /// credential.</param>
        /// <param name="configuration">Method specific configuration</param>
        public AuthenticationMethodApiModel(string id, CredentialType? credentialType = default(CredentialType?), string securityPolicy = default(string), object configuration = default(object))
        {
            Id = id;
            CredentialType = credentialType;
            SecurityPolicy = securityPolicy;
            Configuration = configuration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets authentication method id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets type of credential. Possible values include: 'None',
        /// 'UserName', 'X509Certificate', 'JwtToken'
        /// </summary>
        [JsonProperty(PropertyName = "credentialType")]
        public CredentialType? CredentialType { get; set; }

        /// <summary>
        /// Gets or sets security policy to use when passing credential.
        /// </summary>
        [JsonProperty(PropertyName = "securityPolicy")]
        public string SecurityPolicy { get; set; }

        /// <summary>
        /// Gets or sets method specific configuration
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public object Configuration { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
