// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Vault.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for PrivateKeyType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PrivateKeyType
    {
        [EnumMember(Value = "RSA")]
        RSA,
        [EnumMember(Value = "ECC")]
        ECC,
        [EnumMember(Value = "AES")]
        AES
    }
    internal static class PrivateKeyTypeEnumExtension
    {
        internal static string ToSerializedValue(this PrivateKeyType? value)
        {
            return value == null ? null : ((PrivateKeyType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this PrivateKeyType value)
        {
            switch( value )
            {
                case PrivateKeyType.RSA:
                    return "RSA";
                case PrivateKeyType.ECC:
                    return "ECC";
                case PrivateKeyType.AES:
                    return "AES";
            }
            return null;
        }

        internal static PrivateKeyType? ParsePrivateKeyType(this string value)
        {
            switch( value )
            {
                case "RSA":
                    return PrivateKeyType.RSA;
                case "ECC":
                    return PrivateKeyType.ECC;
                case "AES":
                    return PrivateKeyType.AES;
            }
            return null;
        }
    }
}
