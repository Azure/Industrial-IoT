// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Registry.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Endpoint Activation Filter model
    /// </summary>
    public partial class EndpointActivationFilterApiModel
    {
        /// <summary>
        /// Initializes a new instance of the EndpointActivationFilterApiModel
        /// class.
        /// </summary>
        public EndpointActivationFilterApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointActivationFilterApiModel
        /// class.
        /// </summary>
        /// <param name="trustLists">Certificate trust list identifiers to use
        /// for
        /// activation, if null, all certificates are
        /// trusted.  If empty list, no certificates are
        /// trusted which is equal to no filter.</param>
        /// <param name="securityPolicies">Endpoint security policies to filter
        /// against.
        /// If set to null, all policies are in scope.</param>
        /// <param name="securityMode">Possible values include: 'Best', 'Sign',
        /// 'SignAndEncrypt', 'None'</param>
        public EndpointActivationFilterApiModel(IList<string> trustLists = default(IList<string>), IList<string> securityPolicies = default(IList<string>), SecurityMode? securityMode = default(SecurityMode?))
        {
            TrustLists = trustLists;
            SecurityPolicies = securityPolicies;
            SecurityMode = securityMode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets certificate trust list identifiers to use for
        /// activation, if null, all certificates are
        /// trusted.  If empty list, no certificates are
        /// trusted which is equal to no filter.
        /// </summary>
        [JsonProperty(PropertyName = "trustLists")]
        public IList<string> TrustLists { get; set; }

        /// <summary>
        /// Gets or sets endpoint security policies to filter against.
        /// If set to null, all policies are in scope.
        /// </summary>
        [JsonProperty(PropertyName = "securityPolicies")]
        public IList<string> SecurityPolicies { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Best', 'Sign',
        /// 'SignAndEncrypt', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "securityMode")]
        public SecurityMode? SecurityMode { get; set; }

    }
}
