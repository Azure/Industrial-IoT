// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Twin.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Browse view model
    /// </summary>
    public partial class BrowseViewApiModel
    {
        /// <summary>
        /// Initializes a new instance of the BrowseViewApiModel class.
        /// </summary>
        public BrowseViewApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BrowseViewApiModel class.
        /// </summary>
        /// <param name="viewId">Node of the view to browse</param>
        /// <param name="version">Browses specific version of the view.</param>
        /// <param name="timestamp">Browses at or before this
        /// timestamp.</param>
        public BrowseViewApiModel(string viewId, int? version = default(int?), System.DateTime? timestamp = default(System.DateTime?))
        {
            ViewId = viewId;
            Version = version;
            Timestamp = timestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets node of the view to browse
        /// </summary>
        [JsonProperty(PropertyName = "viewId")]
        public string ViewId { get; set; }

        /// <summary>
        /// Gets or sets browses specific version of the view.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public int? Version { get; set; }

        /// <summary>
        /// Gets or sets browses at or before this timestamp.
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ViewId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ViewId");
            }
        }
    }
}
