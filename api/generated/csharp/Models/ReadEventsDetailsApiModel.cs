// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.History.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Read event data
    /// </summary>
    public partial class ReadEventsDetailsApiModel
    {
        /// <summary>
        /// Initializes a new instance of the ReadEventsDetailsApiModel class.
        /// </summary>
        public ReadEventsDetailsApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReadEventsDetailsApiModel class.
        /// </summary>
        /// <param name="startTime">Start time to read from</param>
        /// <param name="endTime">End time to read to</param>
        /// <param name="numEvents">Number of events to read</param>
        /// <param name="filter">The filter to use to select the event
        /// fields</param>
        public ReadEventsDetailsApiModel(System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), int? numEvents = default(int?), object filter = default(object))
        {
            StartTime = startTime;
            EndTime = endTime;
            NumEvents = numEvents;
            Filter = filter;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets start time to read from
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets end time to read to
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or sets number of events to read
        /// </summary>
        [JsonProperty(PropertyName = "numEvents")]
        public int? NumEvents { get; set; }

        /// <summary>
        /// Gets or sets the filter to use to select the event fields
        /// </summary>
        [JsonProperty(PropertyName = "filter")]
        public object Filter { get; set; }

    }
}
