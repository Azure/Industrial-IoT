// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Registry.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Default publisher agent configuration
    /// </summary>
    public partial class PublisherConfigApiModel
    {
        /// <summary>
        /// Initializes a new instance of the PublisherConfigApiModel class.
        /// </summary>
        public PublisherConfigApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PublisherConfigApiModel class.
        /// </summary>
        /// <param name="capabilities">Capabilities</param>
        /// <param name="jobCheckInterval">Interval to check job</param>
        /// <param name="heartbeatInterval">Heartbeat interval</param>
        /// <param name="maxWorkers">Parallel jobs</param>
        /// <param name="jobOrchestratorUrl">Job orchestrator endpoint
        /// url</param>
        public PublisherConfigApiModel(IDictionary<string, string> capabilities = default(IDictionary<string, string>), string jobCheckInterval = default(string), string heartbeatInterval = default(string), int? maxWorkers = default(int?), string jobOrchestratorUrl = default(string))
        {
            Capabilities = capabilities;
            JobCheckInterval = jobCheckInterval;
            HeartbeatInterval = heartbeatInterval;
            MaxWorkers = maxWorkers;
            JobOrchestratorUrl = jobOrchestratorUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets capabilities
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IDictionary<string, string> Capabilities { get; set; }

        /// <summary>
        /// Gets or sets interval to check job
        /// </summary>
        [JsonProperty(PropertyName = "jobCheckInterval")]
        public string JobCheckInterval { get; set; }

        /// <summary>
        /// Gets or sets heartbeat interval
        /// </summary>
        [JsonProperty(PropertyName = "heartbeatInterval")]
        public string HeartbeatInterval { get; set; }

        /// <summary>
        /// Gets or sets parallel jobs
        /// </summary>
        [JsonProperty(PropertyName = "maxWorkers")]
        public int? MaxWorkers { get; set; }

        /// <summary>
        /// Gets or sets job orchestrator endpoint url
        /// </summary>
        [JsonProperty(PropertyName = "jobOrchestratorUrl")]
        public string JobOrchestratorUrl { get; set; }

    }
}
