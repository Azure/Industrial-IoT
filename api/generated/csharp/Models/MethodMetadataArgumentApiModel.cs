// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Twin.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Method argument metadata model
    /// </summary>
    public partial class MethodMetadataArgumentApiModel
    {
        /// <summary>
        /// Initializes a new instance of the MethodMetadataArgumentApiModel
        /// class.
        /// </summary>
        public MethodMetadataArgumentApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MethodMetadataArgumentApiModel
        /// class.
        /// </summary>
        /// <param name="name">Argument name</param>
        /// <param name="description">Optional description</param>
        /// <param name="defaultValue">Default value</param>
        /// <param name="valueRank">Possible values include:
        /// 'OneOrMoreDimensions', 'OneDimension', 'TwoDimensions',
        /// 'ScalarOrOneDimension', 'Any', 'Scalar'</param>
        /// <param name="arrayDimensions">Optional, array dimension</param>
        public MethodMetadataArgumentApiModel(string name = default(string), string description = default(string), NodeApiModel type = default(NodeApiModel), object defaultValue = default(object), NodeValueRank? valueRank = default(NodeValueRank?), IList<int?> arrayDimensions = default(IList<int?>))
        {
            Name = name;
            Description = description;
            Type = type;
            DefaultValue = defaultValue;
            ValueRank = valueRank;
            ArrayDimensions = arrayDimensions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets argument name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets optional description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public NodeApiModel Type { get; set; }

        /// <summary>
        /// Gets or sets default value
        /// </summary>
        [JsonProperty(PropertyName = "defaultValue")]
        public object DefaultValue { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'OneOrMoreDimensions',
        /// 'OneDimension', 'TwoDimensions', 'ScalarOrOneDimension', 'Any',
        /// 'Scalar'
        /// </summary>
        [JsonProperty(PropertyName = "valueRank")]
        public NodeValueRank? ValueRank { get; set; }

        /// <summary>
        /// Gets or sets optional, array dimension
        /// </summary>
        [JsonProperty(PropertyName = "arrayDimensions")]
        public IList<int?> ArrayDimensions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type != null)
            {
                Type.Validate();
            }
        }
    }
}
