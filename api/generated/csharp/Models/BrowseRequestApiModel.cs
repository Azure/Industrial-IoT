// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Twin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Browse request model
    /// </summary>
    public partial class BrowseRequestApiModel
    {
        /// <summary>
        /// Initializes a new instance of the BrowseRequestApiModel class.
        /// </summary>
        public BrowseRequestApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BrowseRequestApiModel class.
        /// </summary>
        /// <param name="nodeId">Node to browse.
        /// (default: RootFolder).</param>
        /// <param name="direction">Possible values include: 'Forward',
        /// 'Backward', 'Both'</param>
        /// <param name="referenceTypeId">Reference types to browse.
        /// (default: hierarchical).</param>
        /// <param name="noSubtypes">Whether to include subtypes of the
        /// reference type.
        /// (default is false)</param>
        /// <param name="maxReferencesToReturn">Max number of references to
        /// return. There might
        /// be less returned as this is up to the client
        /// restrictions.  Set to 0 to return no references
        /// or target nodes.
        /// (default is decided by client e.g. 60)</param>
        /// <param name="targetNodesOnly">Whether to collapse all references
        /// into a set of
        /// unique target nodes and not show reference
        /// information.
        /// (default is false)</param>
        /// <param name="readVariableValues">Whether to read variable values on
        /// target nodes.
        /// (default is false)</param>
        public BrowseRequestApiModel(string nodeId = default(string), BrowseDirection? direction = default(BrowseDirection?), BrowseViewApiModel view = default(BrowseViewApiModel), string referenceTypeId = default(string), bool? noSubtypes = default(bool?), int? maxReferencesToReturn = default(int?), bool? targetNodesOnly = default(bool?), bool? readVariableValues = default(bool?), RequestHeaderApiModel header = default(RequestHeaderApiModel))
        {
            NodeId = nodeId;
            Direction = direction;
            View = view;
            ReferenceTypeId = referenceTypeId;
            NoSubtypes = noSubtypes;
            MaxReferencesToReturn = maxReferencesToReturn;
            TargetNodesOnly = targetNodesOnly;
            ReadVariableValues = readVariableValues;
            Header = header;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets node to browse.
        /// (default: RootFolder).
        /// </summary>
        [JsonProperty(PropertyName = "nodeId")]
        public string NodeId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Forward', 'Backward', 'Both'
        /// </summary>
        [JsonProperty(PropertyName = "direction")]
        public BrowseDirection? Direction { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "view")]
        public BrowseViewApiModel View { get; set; }

        /// <summary>
        /// Gets or sets reference types to browse.
        /// (default: hierarchical).
        /// </summary>
        [JsonProperty(PropertyName = "referenceTypeId")]
        public string ReferenceTypeId { get; set; }

        /// <summary>
        /// Gets or sets whether to include subtypes of the reference type.
        /// (default is false)
        /// </summary>
        [JsonProperty(PropertyName = "noSubtypes")]
        public bool? NoSubtypes { get; set; }

        /// <summary>
        /// Gets or sets max number of references to return. There might
        /// be less returned as this is up to the client
        /// restrictions.  Set to 0 to return no references
        /// or target nodes.
        /// (default is decided by client e.g. 60)
        /// </summary>
        [JsonProperty(PropertyName = "maxReferencesToReturn")]
        public int? MaxReferencesToReturn { get; set; }

        /// <summary>
        /// Gets or sets whether to collapse all references into a set of
        /// unique target nodes and not show reference
        /// information.
        /// (default is false)
        /// </summary>
        [JsonProperty(PropertyName = "targetNodesOnly")]
        public bool? TargetNodesOnly { get; set; }

        /// <summary>
        /// Gets or sets whether to read variable values on target nodes.
        /// (default is false)
        /// </summary>
        [JsonProperty(PropertyName = "readVariableValues")]
        public bool? ReadVariableValues { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "header")]
        public RequestHeaderApiModel Header { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (View != null)
            {
                View.Validate();
            }
        }
    }
}
