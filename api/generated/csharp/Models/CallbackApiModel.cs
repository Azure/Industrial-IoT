// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Registry.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A registered callback
    /// </summary>
    public partial class CallbackApiModel
    {
        /// <summary>
        /// Initializes a new instance of the CallbackApiModel class.
        /// </summary>
        public CallbackApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CallbackApiModel class.
        /// </summary>
        /// <param name="uri">Uri to call - should use https scheme in which
        /// case security is enforced.</param>
        /// <param name="method">Http Method to use for callback. Possible
        /// values include: 'Get', 'Post', 'Put', 'Delete'</param>
        /// <param name="authenticationHeader">Authentication header to add or
        /// null if not needed</param>
        public CallbackApiModel(string uri = default(string), CallbackMethodType? method = default(CallbackMethodType?), string authenticationHeader = default(string))
        {
            Uri = uri;
            Method = method;
            AuthenticationHeader = authenticationHeader;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets uri to call - should use https scheme in which
        /// case security is enforced.
        /// </summary>
        [JsonProperty(PropertyName = "uri")]
        public string Uri { get; set; }

        /// <summary>
        /// Gets or sets http Method to use for callback. Possible values
        /// include: 'Get', 'Post', 'Put', 'Delete'
        /// </summary>
        [JsonProperty(PropertyName = "method")]
        public CallbackMethodType? Method { get; set; }

        /// <summary>
        /// Gets or sets authentication header to add or null if not needed
        /// </summary>
        [JsonProperty(PropertyName = "authenticationHeader")]
        public string AuthenticationHeader { get; set; }

    }
}
