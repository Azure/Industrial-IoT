// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.History
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for AzureOpcHistoryClient.
    /// </summary>
    public static partial class AzureOpcHistoryClientExtensions
    {
            /// <summary>
            /// Delete value history at specified times
            /// </summary>
            /// <remarks>
            /// Delete value history using historic access. The endpoint must be activated
            /// and connected and the module client and server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryDeleteValuesAtTimes(this IAzureOpcHistoryClient operations, string endpointId, DeleteValuesAtTimesDetailsApiModelHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryDeleteValuesAtTimesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete value history at specified times
            /// </summary>
            /// <remarks>
            /// Delete value history using historic access. The endpoint must be activated
            /// and connected and the module client and server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryDeleteValuesAtTimesAsync(this IAzureOpcHistoryClient operations, string endpointId, DeleteValuesAtTimesDetailsApiModelHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryDeleteValuesAtTimesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete historic values
            /// </summary>
            /// <remarks>
            /// Delete historic values using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryDeleteValues(this IAzureOpcHistoryClient operations, string endpointId, DeleteValuesDetailsApiModelHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryDeleteValuesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete historic values
            /// </summary>
            /// <remarks>
            /// Delete historic values using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryDeleteValuesAsync(this IAzureOpcHistoryClient operations, string endpointId, DeleteValuesDetailsApiModelHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryDeleteValuesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete historic values
            /// </summary>
            /// <remarks>
            /// Delete historic values using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryDeleteModifiedValues(this IAzureOpcHistoryClient operations, string endpointId, DeleteModifiedValuesDetailsApiModelHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryDeleteModifiedValuesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete historic values
            /// </summary>
            /// <remarks>
            /// Delete historic values using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryDeleteModifiedValuesAsync(this IAzureOpcHistoryClient operations, string endpointId, DeleteModifiedValuesDetailsApiModelHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryDeleteModifiedValuesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete historic events
            /// </summary>
            /// <remarks>
            /// Delete historic events using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryDeleteEvents(this IAzureOpcHistoryClient operations, string endpointId, DeleteEventsDetailsApiModelHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryDeleteEventsAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete historic events
            /// </summary>
            /// <remarks>
            /// Delete historic events using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryDeleteEventsAsync(this IAzureOpcHistoryClient operations, string endpointId, DeleteEventsDetailsApiModelHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryDeleteEventsWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read history using json details
            /// </summary>
            /// <remarks>
            /// Read node history if available using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            public static JTokenHistoryReadResponseApiModel HistoryReadRaw(this IAzureOpcHistoryClient operations, string endpointId, JTokenHistoryReadRequestApiModel body)
            {
                return operations.HistoryReadRawAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read history using json details
            /// </summary>
            /// <remarks>
            /// Read node history if available using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JTokenHistoryReadResponseApiModel> HistoryReadRawAsync(this IAzureOpcHistoryClient operations, string endpointId, JTokenHistoryReadRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadRawWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read next batch of history as json
            /// </summary>
            /// <remarks>
            /// Read next batch of node history values using historic access. The endpoint
            /// must be activated and connected and the module client and server must trust
            /// each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read next request
            /// </param>
            public static JTokenHistoryReadNextResponseApiModel HistoryReadRawNext(this IAzureOpcHistoryClient operations, string endpointId, HistoryReadNextRequestApiModel body)
            {
                return operations.HistoryReadRawNextAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read next batch of history as json
            /// </summary>
            /// <remarks>
            /// Read next batch of node history values using historic access. The endpoint
            /// must be activated and connected and the module client and server must trust
            /// each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read next request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JTokenHistoryReadNextResponseApiModel> HistoryReadRawNextAsync(this IAzureOpcHistoryClient operations, string endpointId, HistoryReadNextRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadRawNextWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update node history using raw json
            /// </summary>
            /// <remarks>
            /// Update node history using historic access. The endpoint must be activated
            /// and connected and the module client and server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryUpdateRaw(this IAzureOpcHistoryClient operations, string endpointId, JTokenHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryUpdateRawAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update node history using raw json
            /// </summary>
            /// <remarks>
            /// Update node history using historic access. The endpoint must be activated
            /// and connected and the module client and server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history update request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryUpdateRawAsync(this IAzureOpcHistoryClient operations, string endpointId, JTokenHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryUpdateRawWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Insert historic values
            /// </summary>
            /// <remarks>
            /// Insert historic values using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history insert request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryInsertValues(this IAzureOpcHistoryClient operations, string endpointId, InsertValuesDetailsApiModelHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryInsertValuesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Insert historic values
            /// </summary>
            /// <remarks>
            /// Insert historic values using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history insert request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryInsertValuesAsync(this IAzureOpcHistoryClient operations, string endpointId, InsertValuesDetailsApiModelHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryInsertValuesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Insert historic events
            /// </summary>
            /// <remarks>
            /// Insert historic events using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history insert request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryInsertEvents(this IAzureOpcHistoryClient operations, string endpointId, InsertEventsDetailsApiModelHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryInsertEventsAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Insert historic events
            /// </summary>
            /// <remarks>
            /// Insert historic events using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history insert request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryInsertEventsAsync(this IAzureOpcHistoryClient operations, string endpointId, InsertEventsDetailsApiModelHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryInsertEventsWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read historic events
            /// </summary>
            /// <remarks>
            /// Read historic events of a node if available using historic access. The
            /// endpoint must be activated and connected and the module client and server
            /// must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            public static HistoricEventApiModelHistoryReadResponseApiModel HistoryReadEvents(this IAzureOpcHistoryClient operations, string endpointId, ReadEventsDetailsApiModelHistoryReadRequestApiModel body)
            {
                return operations.HistoryReadEventsAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read historic events
            /// </summary>
            /// <remarks>
            /// Read historic events of a node if available using historic access. The
            /// endpoint must be activated and connected and the module client and server
            /// must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoricEventApiModelHistoryReadResponseApiModel> HistoryReadEventsAsync(this IAzureOpcHistoryClient operations, string endpointId, ReadEventsDetailsApiModelHistoryReadRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadEventsWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read next batch of historic events
            /// </summary>
            /// <remarks>
            /// Read next batch of historic events of a node using historic access. The
            /// endpoint must be activated and connected and the module client and server
            /// must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read next request
            /// </param>
            public static HistoricEventApiModelHistoryReadNextResponseApiModel HistoryReadEventsNext(this IAzureOpcHistoryClient operations, string endpointId, HistoryReadNextRequestApiModel body)
            {
                return operations.HistoryReadEventsNextAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read next batch of historic events
            /// </summary>
            /// <remarks>
            /// Read next batch of historic events of a node using historic access. The
            /// endpoint must be activated and connected and the module client and server
            /// must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read next request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoricEventApiModelHistoryReadNextResponseApiModel> HistoryReadEventsNextAsync(this IAzureOpcHistoryClient operations, string endpointId, HistoryReadNextRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadEventsNextWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read historic processed values at specified times
            /// </summary>
            /// <remarks>
            /// Read processed history values of a node if available using historic access.
            /// The endpoint must be activated and connected and the module client and
            /// server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            public static HistoricValueApiModelHistoryReadResponseApiModel HistoryReadValues(this IAzureOpcHistoryClient operations, string endpointId, ReadValuesDetailsApiModelHistoryReadRequestApiModel body)
            {
                return operations.HistoryReadValuesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read historic processed values at specified times
            /// </summary>
            /// <remarks>
            /// Read processed history values of a node if available using historic access.
            /// The endpoint must be activated and connected and the module client and
            /// server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoricValueApiModelHistoryReadResponseApiModel> HistoryReadValuesAsync(this IAzureOpcHistoryClient operations, string endpointId, ReadValuesDetailsApiModelHistoryReadRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadValuesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read historic values at specified times
            /// </summary>
            /// <remarks>
            /// Read historic values of a node if available using historic access. The
            /// endpoint must be activated and connected and the module client and server
            /// must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            public static HistoricValueApiModelHistoryReadResponseApiModel HistoryReadValuesAtTimes(this IAzureOpcHistoryClient operations, string endpointId, ReadValuesAtTimesDetailsApiModelHistoryReadRequestApiModel body)
            {
                return operations.HistoryReadValuesAtTimesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read historic values at specified times
            /// </summary>
            /// <remarks>
            /// Read historic values of a node if available using historic access. The
            /// endpoint must be activated and connected and the module client and server
            /// must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoricValueApiModelHistoryReadResponseApiModel> HistoryReadValuesAtTimesAsync(this IAzureOpcHistoryClient operations, string endpointId, ReadValuesAtTimesDetailsApiModelHistoryReadRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadValuesAtTimesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read historic processed values at specified times
            /// </summary>
            /// <remarks>
            /// Read processed history values of a node if available using historic access.
            /// The endpoint must be activated and connected and the module client and
            /// server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            public static HistoricValueApiModelHistoryReadResponseApiModel HistoryReadProcessedValues(this IAzureOpcHistoryClient operations, string endpointId, ReadProcessedValuesDetailsApiModelHistoryReadRequestApiModel body)
            {
                return operations.HistoryReadProcessedValuesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read historic processed values at specified times
            /// </summary>
            /// <remarks>
            /// Read processed history values of a node if available using historic access.
            /// The endpoint must be activated and connected and the module client and
            /// server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoricValueApiModelHistoryReadResponseApiModel> HistoryReadProcessedValuesAsync(this IAzureOpcHistoryClient operations, string endpointId, ReadProcessedValuesDetailsApiModelHistoryReadRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadProcessedValuesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read historic modified values at specified times
            /// </summary>
            /// <remarks>
            /// Read processed history values of a node if available using historic access.
            /// The endpoint must be activated and connected and the module client and
            /// server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            public static HistoricValueApiModelHistoryReadResponseApiModel HistoryReadModifiedValues(this IAzureOpcHistoryClient operations, string endpointId, ReadModifiedValuesDetailsApiModelHistoryReadRequestApiModel body)
            {
                return operations.HistoryReadModifiedValuesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read historic modified values at specified times
            /// </summary>
            /// <remarks>
            /// Read processed history values of a node if available using historic access.
            /// The endpoint must be activated and connected and the module client and
            /// server must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoricValueApiModelHistoryReadResponseApiModel> HistoryReadModifiedValuesAsync(this IAzureOpcHistoryClient operations, string endpointId, ReadModifiedValuesDetailsApiModelHistoryReadRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadModifiedValuesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Read next batch of historic values
            /// </summary>
            /// <remarks>
            /// Read next batch of historic values of a node using historic access. The
            /// endpoint must be activated and connected and the module client and server
            /// must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read next request
            /// </param>
            public static HistoricValueApiModelHistoryReadNextResponseApiModel HistoryReadValueNext(this IAzureOpcHistoryClient operations, string endpointId, HistoryReadNextRequestApiModel body)
            {
                return operations.HistoryReadValueNextAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Read next batch of historic values
            /// </summary>
            /// <remarks>
            /// Read next batch of historic values of a node using historic access. The
            /// endpoint must be activated and connected and the module client and server
            /// must trust each other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history read next request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoricValueApiModelHistoryReadNextResponseApiModel> HistoryReadValueNextAsync(this IAzureOpcHistoryClient operations, string endpointId, HistoryReadNextRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReadValueNextWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Replace historic values
            /// </summary>
            /// <remarks>
            /// Replace historic values using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history replace request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryReplaceValues(this IAzureOpcHistoryClient operations, string endpointId, ReplaceValuesDetailsApiModelHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryReplaceValuesAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Replace historic values
            /// </summary>
            /// <remarks>
            /// Replace historic values using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history replace request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryReplaceValuesAsync(this IAzureOpcHistoryClient operations, string endpointId, ReplaceValuesDetailsApiModelHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReplaceValuesWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Replace historic events
            /// </summary>
            /// <remarks>
            /// Replace historic events using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history replace request
            /// </param>
            public static HistoryUpdateResponseApiModel HistoryReplaceEvents(this IAzureOpcHistoryClient operations, string endpointId, ReplaceEventsDetailsApiModelHistoryUpdateRequestApiModel body)
            {
                return operations.HistoryReplaceEventsAsync(endpointId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Replace historic events
            /// </summary>
            /// <remarks>
            /// Replace historic events using historic access. The endpoint must be
            /// activated and connected and the module client and server must trust each
            /// other.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointId'>
            /// The identifier of the activated endpoint.
            /// </param>
            /// <param name='body'>
            /// The history replace request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HistoryUpdateResponseApiModel> HistoryReplaceEventsAsync(this IAzureOpcHistoryClient operations, string endpointId, ReplaceEventsDetailsApiModelHistoryUpdateRequestApiModel body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HistoryReplaceEventsWithHttpMessagesAsync(endpointId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
