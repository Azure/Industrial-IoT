// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Twin
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Azure Industrial IoT OPC UA Twin Service
    /// </summary>
    public partial interface IAzureOpcTwinClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Browse node references
        /// </summary>
        /// <remarks>
        /// Browse a node on the specified endpoint. The endpoint must be
        /// activated and connected and the module client and server must trust
        /// each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The browse request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BrowseResponseApiModel>> BrowseWithHttpMessagesAsync(string endpointId, BrowseRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Browse set of unique target nodes
        /// </summary>
        /// <remarks>
        /// Browse the set of unique hierarchically referenced target nodes on
        /// the endpoint. The endpoint must be activated and connected and the
        /// module client and server must trust each other. The root node id to
        /// browse from can be provided as part of the query parameters. If it
        /// is not provided, the RootFolder node is browsed. Note that this is
        /// the same as the POST method with the model containing the node id
        /// and the targetNodesOnly flag set to true.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='nodeId'>
        /// The node to browse or omit to browse the root node (i=84)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BrowseResponseApiModel>> GetSetOfUniqueNodesWithHttpMessagesAsync(string endpointId, string nodeId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Browse next set of references
        /// </summary>
        /// <remarks>
        /// Browse next set of references on the endpoint. The endpoint must be
        /// activated and connected and the module client and server must trust
        /// each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The request body with continuation token.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BrowseNextResponseApiModel>> BrowseNextWithHttpMessagesAsync(string endpointId, BrowseNextRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Browse next set of unique target nodes
        /// </summary>
        /// <remarks>
        /// Browse the next set of unique hierarchically referenced target
        /// nodes on the endpoint. The endpoint must be activated and connected
        /// and the module client and server must trust each other. Note that
        /// this is the same as the POST method with the model containing the
        /// continuation token and the targetNodesOnly flag set to true.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='continuationToken'>
        /// Continuation token from GetSetOfUniqueNodes operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BrowseNextResponseApiModel>> GetNextSetOfUniqueNodesWithHttpMessagesAsync(string endpointId, string continuationToken, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Browse using a browse path
        /// </summary>
        /// <remarks>
        /// Browse using a path from the specified node id. This call uses
        /// TranslateBrowsePathsToNodeIds service under the hood. The endpoint
        /// must be activated and connected and the module client and server
        /// must trust each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The browse path request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BrowsePathResponseApiModel>> BrowseUsingPathWithHttpMessagesAsync(string endpointId, BrowsePathRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get method meta data
        /// </summary>
        /// <remarks>
        /// Return method meta data to support a user interface displaying
        /// forms to input and output arguments. The endpoint must be activated
        /// and connected and the module client and server must trust each
        /// other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The method metadata request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MethodMetadataResponseApiModel>> GetCallMetadataWithHttpMessagesAsync(string endpointId, MethodMetadataRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Call a method
        /// </summary>
        /// <remarks>
        /// Invoke method node with specified input arguments. The endpoint
        /// must be activated and connected and the module client and server
        /// must trust each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The method call request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MethodCallResponseApiModel>> CallMethodWithHttpMessagesAsync(string endpointId, MethodCallRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Read variable value
        /// </summary>
        /// <remarks>
        /// Read a variable node's value. The endpoint must be activated and
        /// connected and the module client and server must trust each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The read value request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ValueReadResponseApiModel>> ReadValueWithHttpMessagesAsync(string endpointId, ValueReadRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get variable value
        /// </summary>
        /// <remarks>
        /// Get a variable node's value using its node id. The endpoint must be
        /// activated and connected and the module client and server must trust
        /// each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='nodeId'>
        /// The node to read
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ValueReadResponseApiModel>> GetValueWithHttpMessagesAsync(string endpointId, string nodeId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Read node attributes
        /// </summary>
        /// <remarks>
        /// Read attributes of a node. The endpoint must be activated and
        /// connected and the module client and server must trust each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The read request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ReadResponseApiModel>> ReadAttributesWithHttpMessagesAsync(string endpointId, ReadRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Write variable value
        /// </summary>
        /// <remarks>
        /// Write variable node's value. The endpoint must be activated and
        /// connected and the module client and server must trust each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The write value request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ValueWriteResponseApiModel>> WriteValueWithHttpMessagesAsync(string endpointId, ValueWriteRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Write node attributes
        /// </summary>
        /// <remarks>
        /// Write any attribute of a node. The endpoint must be activated and
        /// connected and the module client and server must trust each other.
        /// </remarks>
        /// <param name='endpointId'>
        /// The identifier of the activated endpoint.
        /// </param>
        /// <param name='body'>
        /// The batch write request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<WriteResponseApiModel>> WriteAttributesWithHttpMessagesAsync(string endpointId, WriteRequestApiModel body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
