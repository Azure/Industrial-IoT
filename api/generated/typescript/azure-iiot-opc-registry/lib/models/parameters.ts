/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const activated: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "activated"
  ],
  mapper: {
    serializedName: "activated",
    type: {
      name: "Boolean"
    }
  }
};
export const applicationId0: msRest.OperationURLParameter = {
  parameterPath: "applicationId",
  mapper: {
    required: true,
    serializedName: "applicationId",
    type: {
      name: "String"
    }
  }
};
export const applicationId1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "applicationId"
  ],
  mapper: {
    serializedName: "applicationId",
    type: {
      name: "String"
    }
  }
};
export const certificate: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificate"
  ],
  mapper: {
    serializedName: "certificate",
    type: {
      name: "ByteArray"
    }
  }
};
export const connected: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "connected"
  ],
  mapper: {
    serializedName: "connected",
    type: {
      name: "Boolean"
    }
  }
};
export const continuationToken: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "continuationToken"
  ],
  mapper: {
    serializedName: "continuationToken",
    type: {
      name: "String"
    }
  }
};
export const discovererId0: msRest.OperationURLParameter = {
  parameterPath: "discovererId",
  mapper: {
    required: true,
    serializedName: "discovererId",
    type: {
      name: "String"
    }
  }
};
export const discovererId1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "discovererId"
  ],
  mapper: {
    serializedName: "discovererId",
    type: {
      name: "String"
    }
  }
};
export const discovery: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "discovery"
  ],
  mapper: {
    serializedName: "discovery",
    type: {
      name: "Enum",
      allowedValues: [
        "Off",
        "Local",
        "Network",
        "Fast",
        "Scan"
      ]
    }
  }
};
export const endpointId: msRest.OperationURLParameter = {
  parameterPath: "endpointId",
  mapper: {
    required: true,
    serializedName: "endpointId",
    type: {
      name: "String"
    }
  }
};
export const endpointState: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "endpointState"
  ],
  mapper: {
    serializedName: "endpointState",
    type: {
      name: "Enum",
      allowedValues: [
        "Connecting",
        "NotReachable",
        "Busy",
        "NoTrust",
        "CertificateInvalid",
        "Ready",
        "Error"
      ]
    }
  }
};
export const gatewayId: msRest.OperationURLParameter = {
  parameterPath: "gatewayId",
  mapper: {
    required: true,
    serializedName: "GatewayId",
    type: {
      name: "String"
    }
  }
};
export const includeNotSeenSince: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeNotSeenSince"
  ],
  mapper: {
    serializedName: "includeNotSeenSince",
    type: {
      name: "Boolean"
    }
  }
};
export const mode: msRest.OperationQueryParameter = {
  parameterPath: "mode",
  mapper: {
    required: true,
    serializedName: "mode",
    type: {
      name: "Enum",
      allowedValues: [
        "Off",
        "Local",
        "Network",
        "Fast",
        "Scan"
      ]
    }
  }
};
export const notSeenFor: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "notSeenFor"
  ],
  mapper: {
    serializedName: "notSeenFor",
    type: {
      name: "String"
    }
  }
};
export const onlyServerState: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "onlyServerState"
  ],
  mapper: {
    serializedName: "onlyServerState",
    type: {
      name: "Boolean"
    }
  }
};
export const pageSize: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "pageSize"
  ],
  mapper: {
    serializedName: "pageSize",
    type: {
      name: "Number"
    }
  }
};
export const publisherId: msRest.OperationURLParameter = {
  parameterPath: "publisherId",
  mapper: {
    required: true,
    serializedName: "publisherId",
    type: {
      name: "String"
    }
  }
};
export const requestId: msRest.OperationURLParameter = {
  parameterPath: "requestId",
  mapper: {
    required: true,
    serializedName: "requestId",
    type: {
      name: "String"
    }
  }
};
export const securityMode: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "securityMode"
  ],
  mapper: {
    serializedName: "securityMode",
    type: {
      name: "Enum",
      allowedValues: [
        "Best",
        "Sign",
        "SignAndEncrypt",
        "None"
      ]
    }
  }
};
export const securityPolicy: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "securityPolicy"
  ],
  mapper: {
    serializedName: "securityPolicy",
    type: {
      name: "String"
    }
  }
};
export const siteId: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "siteId"
  ],
  mapper: {
    serializedName: "siteId",
    type: {
      name: "String"
    }
  }
};
export const siteOrGatewayId: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "siteOrGatewayId"
  ],
  mapper: {
    serializedName: "siteOrGatewayId",
    type: {
      name: "String"
    }
  }
};
export const supervisorId0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "supervisorId"
  ],
  mapper: {
    serializedName: "supervisorId",
    type: {
      name: "String"
    }
  }
};
export const supervisorId1: msRest.OperationURLParameter = {
  parameterPath: "supervisorId",
  mapper: {
    required: true,
    serializedName: "supervisorId",
    type: {
      name: "String"
    }
  }
};
export const url: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "url"
  ],
  mapper: {
    serializedName: "url",
    type: {
      name: "String"
    }
  }
};
export const userId: msRest.OperationURLParameter = {
  parameterPath: "userId",
  mapper: {
    required: true,
    serializedName: "userId",
    type: {
      name: "String"
    }
  }
};
