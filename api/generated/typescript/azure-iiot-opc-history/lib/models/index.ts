/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing DeleteValuesAtTimesDetailsApiModel.
 * Deletes data at times
 *
 */
export interface DeleteValuesAtTimesDetailsApiModel {
  /**
   * @member {Date[] | string[]} reqTimes The timestamps to delete
   */
  reqTimes: Date[] | string[];
}

/**
 * @interface
 * An interface representing CredentialApiModel.
 * Credential model
 *
 */
export interface CredentialApiModel {
  /**
   * @member {CredentialType} [type] Possible values include: 'None',
   * 'UserName', 'X509Certificate', 'JwtToken'
   */
  type?: CredentialType;
  /**
   * @member {any} [value] Value to pass to server
   */
  value?: any;
}

/**
 * @interface
 * An interface representing DiagnosticsApiModel.
 * Diagnostics configuration
 *
 */
export interface DiagnosticsApiModel {
  /**
   * @member {DiagnosticsLevel} [level] Possible values include: 'None',
   * 'Status', 'Operations', 'Diagnostics', 'Verbose'
   */
  level?: DiagnosticsLevel;
  /**
   * @member {string} [auditId] Client audit log entry.
   * (default: client generated)
   */
  auditId?: string;
  /**
   * @member {Date} [timeStamp] Timestamp of request.
   * (default: client generated)
   */
  timeStamp?: Date;
}

/**
 * @interface
 * An interface representing RequestHeaderApiModel.
 * Request header model
 *
 */
export interface RequestHeaderApiModel {
  /**
   * @member {CredentialApiModel} [elevation]
   */
  elevation?: CredentialApiModel;
  /**
   * @member {string[]} [locales] Optional list of locales in preference order.
   */
  locales?: string[];
  /**
   * @member {DiagnosticsApiModel} [diagnostics]
   */
  diagnostics?: DiagnosticsApiModel;
}

/**
 * @interface
 * An interface representing DeleteValuesAtTimesDetailsApiModelHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface DeleteValuesAtTimesDetailsApiModelHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {DeleteValuesAtTimesDetailsApiModel} details
   */
  details: DeleteValuesAtTimesDetailsApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ServiceResultApiModel.
 * Service result
 *
 */
export interface ServiceResultApiModel {
  /**
   * @member {number} [statusCode] Error code - if null operation succeeded.
   */
  statusCode?: number;
  /**
   * @member {string} [errorMessage] Error message in case of error or null.
   */
  errorMessage?: string;
  /**
   * @member {any} [diagnostics] Additional diagnostics information
   */
  diagnostics?: any;
}

/**
 * @interface
 * An interface representing HistoryUpdateResponseApiModel.
 * History update results
 *
 */
export interface HistoryUpdateResponseApiModel {
  /**
   * @member {ServiceResultApiModel[]} [results] List of results from the
   * update operation
   */
  results?: ServiceResultApiModel[];
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing DeleteValuesDetailsApiModel.
 * Delete raw modified data
 *
 */
export interface DeleteValuesDetailsApiModel {
  /**
   * @member {Date} [startTime] Start time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time to delete until
   */
  endTime?: Date;
}

/**
 * @interface
 * An interface representing DeleteValuesDetailsApiModelHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface DeleteValuesDetailsApiModelHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {DeleteValuesDetailsApiModel} details
   */
  details: DeleteValuesDetailsApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing DeleteModifiedValuesDetailsApiModel.
 * Delete raw modified data
 *
 */
export interface DeleteModifiedValuesDetailsApiModel {
  /**
   * @member {Date} [startTime] Start time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time to delete until
   */
  endTime?: Date;
}

/**
 * @interface
 * An interface representing DeleteModifiedValuesDetailsApiModelHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface DeleteModifiedValuesDetailsApiModelHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {DeleteModifiedValuesDetailsApiModel} details
   */
  details: DeleteModifiedValuesDetailsApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing DeleteEventsDetailsApiModel.
 * The events to delete
 *
 */
export interface DeleteEventsDetailsApiModel {
  /**
   * @member {Uint8Array[]} eventIds Events to delete
   */
  eventIds: Uint8Array[];
}

/**
 * @interface
 * An interface representing DeleteEventsDetailsApiModelHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface DeleteEventsDetailsApiModelHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {DeleteEventsDetailsApiModel} details
   */
  details: DeleteEventsDetailsApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing JTokenHistoryReadRequestApiModel.
 * Request node history read
 *
 */
export interface JTokenHistoryReadRequestApiModel {
  /**
   * @member {string} [nodeId] Node to read from (mandatory)
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {any} [details] The HistoryReadDetailsType extension object
   * encoded in json and containing the tunneled
   * Historian reader request.
   */
  details?: any;
  /**
   * @member {string} [indexRange] Index range to read, e.g. 1:2,0:1 for 2
   * slices
   * out of a matrix or 0:1 for the first item in
   * an array, string or bytestring.
   * See 7.22 of part 4: NumericRange.
   */
  indexRange?: string;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing JTokenHistoryReadResponseApiModel.
 * History read results
 *
 */
export interface JTokenHistoryReadResponseApiModel {
  /**
   * @member {any} [history] History as json encoded extension object
   */
  history?: any;
  /**
   * @member {string} [continuationToken] Continuation token if more results
   * pending.
   */
  continuationToken?: string;
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing HistoryReadNextRequestApiModel.
 * Request node history read continuation
 *
 */
export interface HistoryReadNextRequestApiModel {
  /**
   * @member {string} continuationToken Continuation token to continue reading
   * more
   * results.
   */
  continuationToken: string;
  /**
   * @member {boolean} [abort] Abort reading after this read. Default value:
   * false .
   */
  abort?: boolean;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing JTokenHistoryReadNextResponseApiModel.
 * History read continuation result
 *
 */
export interface JTokenHistoryReadNextResponseApiModel {
  /**
   * @member {any} [history] History as json encoded extension object
   */
  history?: any;
  /**
   * @member {string} [continuationToken] Continuation token if more results
   * pending.
   */
  continuationToken?: string;
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing JTokenHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface JTokenHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {any} details The HistoryUpdateDetailsType extension object
   * encoded as json Variant and containing the tunneled
   * update request for the Historian server. The value
   * is updated at edge using above node address.
   */
  details: any;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ModificationInfoApiModel.
 * Modification information
 *
 */
export interface ModificationInfoApiModel {
  /**
   * @member {Date} [modificationTime] Modification time
   */
  modificationTime?: Date;
  /**
   * @member {HistoryUpdateOperation} [updateType] Possible values include:
   * 'Insert', 'Replace', 'Update', 'Delete'
   */
  updateType?: HistoryUpdateOperation;
  /**
   * @member {string} [userName] User who made the change
   */
  userName?: string;
}

/**
 * @interface
 * An interface representing HistoricValueApiModel.
 * Historic data
 *
 */
export interface HistoricValueApiModel {
  /**
   * @member {any} [value] ,
   * The value of data value.
   */
  value?: any;
  /**
   * @member {number} [statusCode] The status code associated with the value.
   */
  statusCode?: number;
  /**
   * @member {Date} [sourceTimestamp] The source timestamp associated with the
   * value.
   */
  sourceTimestamp?: Date;
  /**
   * @member {number} [sourcePicoseconds] Additional resolution for the source
   * timestamp.
   */
  sourcePicoseconds?: number;
  /**
   * @member {Date} [serverTimestamp] The server timestamp associated with the
   * value.
   */
  serverTimestamp?: Date;
  /**
   * @member {number} [serverPicoseconds] Additional resolution for the server
   * timestamp.
   */
  serverPicoseconds?: number;
  /**
   * @member {ModificationInfoApiModel} [modificationInfo]
   */
  modificationInfo?: ModificationInfoApiModel;
}

/**
 * @interface
 * An interface representing InsertValuesDetailsApiModel.
 * Insert historic data
 *
 */
export interface InsertValuesDetailsApiModel {
  /**
   * @member {HistoricValueApiModel[]} values Values to insert
   */
  values: HistoricValueApiModel[];
}

/**
 * @interface
 * An interface representing InsertValuesDetailsApiModelHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface InsertValuesDetailsApiModelHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {InsertValuesDetailsApiModel} details
   */
  details: InsertValuesDetailsApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing SimpleAttributeOperandApiModel.
 * Simple attribute operand model
 *
 */
export interface SimpleAttributeOperandApiModel {
  /**
   * @member {string} [nodeId] Type definition node id if operand is
   * simple or full attribute operand.
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] Browse path of attribute operand
   */
  browsePath?: string[];
  /**
   * @member {NodeAttribute} [attributeId] Possible values include:
   * 'NodeClass', 'BrowseName', 'DisplayName', 'Description', 'WriteMask',
   * 'UserWriteMask', 'IsAbstract', 'Symmetric', 'InverseName',
   * 'ContainsNoLoops', 'EventNotifier', 'Value', 'DataType', 'ValueRank',
   * 'ArrayDimensions', 'AccessLevel', 'UserAccessLevel',
   * 'MinimumSamplingInterval', 'Historizing', 'Executable', 'UserExecutable',
   * 'DataTypeDefinition', 'RolePermissions', 'UserRolePermissions',
   * 'AccessRestrictions'
   */
  attributeId?: NodeAttribute;
  /**
   * @member {string} [indexRange] Index range of attribute operand
   */
  indexRange?: string;
}

/**
 * @interface
 * An interface representing FilterOperandApiModel.
 * Filter operand
 *
 */
export interface FilterOperandApiModel {
  /**
   * @member {number} [index] Element reference in the outer list if
   * operand is an element operand
   */
  index?: number;
  /**
   * @member {any} [value] Variant value if operand is a literal
   */
  value?: any;
  /**
   * @member {string} [nodeId] Type definition node id if operand is
   * simple or full attribute operand.
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] Browse path of attribute operand
   */
  browsePath?: string[];
  /**
   * @member {NodeAttribute} [attributeId] Possible values include:
   * 'NodeClass', 'BrowseName', 'DisplayName', 'Description', 'WriteMask',
   * 'UserWriteMask', 'IsAbstract', 'Symmetric', 'InverseName',
   * 'ContainsNoLoops', 'EventNotifier', 'Value', 'DataType', 'ValueRank',
   * 'ArrayDimensions', 'AccessLevel', 'UserAccessLevel',
   * 'MinimumSamplingInterval', 'Historizing', 'Executable', 'UserExecutable',
   * 'DataTypeDefinition', 'RolePermissions', 'UserRolePermissions',
   * 'AccessRestrictions'
   */
  attributeId?: NodeAttribute;
  /**
   * @member {string} [indexRange] Index range of attribute operand
   */
  indexRange?: string;
  /**
   * @member {string} [alias] Optional alias to refer to it makeing it a
   * full blown attribute operand
   */
  alias?: string;
}

/**
 * @interface
 * An interface representing ContentFilterElementApiModel.
 * An expression element in the filter ast
 *
 */
export interface ContentFilterElementApiModel {
  /**
   * @member {FilterOperatorType} [filterOperator] Possible values include:
   * 'Equals', 'IsNull', 'GreaterThan', 'LessThan', 'GreaterThanOrEqual',
   * 'LessThanOrEqual', 'Like', 'Not', 'Between', 'InList', 'And', 'Or',
   * 'Cast', 'InView', 'OfType', 'RelatedTo', 'BitwiseAnd', 'BitwiseOr'
   */
  filterOperator?: FilterOperatorType;
  /**
   * @member {FilterOperandApiModel[]} [filterOperands] The operands in the
   * element for the operator
   */
  filterOperands?: FilterOperandApiModel[];
}

/**
 * @interface
 * An interface representing ContentFilterApiModel.
 * Content filter
 *
 */
export interface ContentFilterApiModel {
  /**
   * @member {ContentFilterElementApiModel[]} [elements] The flat list of
   * elements in the filter AST
   */
  elements?: ContentFilterElementApiModel[];
}

/**
 * @interface
 * An interface representing EventFilterApiModel.
 * Event filter
 *
 */
export interface EventFilterApiModel {
  /**
   * @member {SimpleAttributeOperandApiModel[]} [selectClauses] Select
   * statements
   */
  selectClauses?: SimpleAttributeOperandApiModel[];
  /**
   * @member {ContentFilterApiModel} [whereClause]
   */
  whereClause?: ContentFilterApiModel;
}

/**
 * @interface
 * An interface representing HistoricEventApiModel.
 * Historic event
 *
 */
export interface HistoricEventApiModel {
  /**
   * @member {any[]} [eventFields] The selected fields of the event
   */
  eventFields?: any[];
}

/**
 * @interface
 * An interface representing InsertEventsDetailsApiModel.
 * Insert historic events
 *
 */
export interface InsertEventsDetailsApiModel {
  /**
   * @member {EventFilterApiModel} [filter]
   */
  filter?: EventFilterApiModel;
  /**
   * @member {HistoricEventApiModel[]} events The new events to insert
   */
  events: HistoricEventApiModel[];
}

/**
 * @interface
 * An interface representing InsertEventsDetailsApiModelHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface InsertEventsDetailsApiModelHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {InsertEventsDetailsApiModel} details
   */
  details: InsertEventsDetailsApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ReadEventsDetailsApiModel.
 * Read event data
 *
 */
export interface ReadEventsDetailsApiModel {
  /**
   * @member {Date} [startTime] Start time to read from
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time to read to
   */
  endTime?: Date;
  /**
   * @member {number} [numEvents] Number of events to read
   */
  numEvents?: number;
  /**
   * @member {EventFilterApiModel} [filter]
   */
  filter?: EventFilterApiModel;
}

/**
 * @interface
 * An interface representing ReadEventsDetailsApiModelHistoryReadRequestApiModel.
 * Request node history read
 *
 */
export interface ReadEventsDetailsApiModelHistoryReadRequestApiModel {
  /**
   * @member {string} [nodeId] Node to read from (mandatory)
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {ReadEventsDetailsApiModel} [details]
   */
  details?: ReadEventsDetailsApiModel;
  /**
   * @member {string} [indexRange] Index range to read, e.g. 1:2,0:1 for 2
   * slices
   * out of a matrix or 0:1 for the first item in
   * an array, string or bytestring.
   * See 7.22 of part 4: NumericRange.
   */
  indexRange?: string;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ReadValuesDetailsApiModel.
 * Read historic values
 *
 */
export interface ReadValuesDetailsApiModel {
  /**
   * @member {Date} [startTime] Beginning of period to read. Set to null
   * if no specific start time is specified.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End of period to read. Set to null if no
   * specific end time is specified.
   */
  endTime?: Date;
  /**
   * @member {number} [numValues] The maximum number of values returned for any
   * Node
   * over the time range. If only one time is specified,
   * the time range shall extend to return this number
   * of values. 0 or null indicates that there is no
   * maximum.
   */
  numValues?: number;
  /**
   * @member {boolean} [returnBounds] Whether to return the bounding values or
   * not.
   */
  returnBounds?: boolean;
}

/**
 * @interface
 * An interface representing ReadValuesDetailsApiModelHistoryReadRequestApiModel.
 * Request node history read
 *
 */
export interface ReadValuesDetailsApiModelHistoryReadRequestApiModel {
  /**
   * @member {string} [nodeId] Node to read from (mandatory)
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {ReadValuesDetailsApiModel} [details]
   */
  details?: ReadValuesDetailsApiModel;
  /**
   * @member {string} [indexRange] Index range to read, e.g. 1:2,0:1 for 2
   * slices
   * out of a matrix or 0:1 for the first item in
   * an array, string or bytestring.
   * See 7.22 of part 4: NumericRange.
   */
  indexRange?: string;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ReadValuesAtTimesDetailsApiModel.
 * Read data at specified times
 *
 */
export interface ReadValuesAtTimesDetailsApiModel {
  /**
   * @member {Date[] | string[]} reqTimes Requested datums
   */
  reqTimes: Date[] | string[];
  /**
   * @member {boolean} [useSimpleBounds] Whether to use simple bounds
   */
  useSimpleBounds?: boolean;
}

/**
 * @interface
 * An interface representing ReadValuesAtTimesDetailsApiModelHistoryReadRequestApiModel.
 * Request node history read
 *
 */
export interface ReadValuesAtTimesDetailsApiModelHistoryReadRequestApiModel {
  /**
   * @member {string} [nodeId] Node to read from (mandatory)
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {ReadValuesAtTimesDetailsApiModel} [details]
   */
  details?: ReadValuesAtTimesDetailsApiModel;
  /**
   * @member {string} [indexRange] Index range to read, e.g. 1:2,0:1 for 2
   * slices
   * out of a matrix or 0:1 for the first item in
   * an array, string or bytestring.
   * See 7.22 of part 4: NumericRange.
   */
  indexRange?: string;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing AggregateConfigurationApiModel.
 * Aggregate configuration
 *
 */
export interface AggregateConfigurationApiModel {
  /**
   * @member {boolean} [useServerCapabilitiesDefaults] Whether to use the
   * default server caps
   */
  useServerCapabilitiesDefaults?: boolean;
  /**
   * @member {boolean} [treatUncertainAsBad] Whether to treat uncertain as bad
   */
  treatUncertainAsBad?: boolean;
  /**
   * @member {number} [percentDataBad] Percent of data that is bad
   */
  percentDataBad?: number;
  /**
   * @member {number} [percentDataGood] Percent of data that is good
   */
  percentDataGood?: number;
  /**
   * @member {boolean} [useSlopedExtrapolation] Whether to use sloped
   * extrapolation.
   */
  useSlopedExtrapolation?: boolean;
}

/**
 * @interface
 * An interface representing ReadProcessedValuesDetailsApiModel.
 * Read processed historic data
 *
 */
export interface ReadProcessedValuesDetailsApiModel {
  /**
   * @member {Date} [startTime] Start time to read from.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time to read until
   */
  endTime?: Date;
  /**
   * @member {number} [processingInterval] Interval to process
   */
  processingInterval?: number;
  /**
   * @member {string} [aggregateTypeId] The aggregate type node ids
   */
  aggregateTypeId?: string;
  /**
   * @member {AggregateConfigurationApiModel} [aggregateConfiguration]
   */
  aggregateConfiguration?: AggregateConfigurationApiModel;
}

/**
 * @interface
 * An interface representing ReadProcessedValuesDetailsApiModelHistoryReadRequestApiModel.
 * Request node history read
 *
 */
export interface ReadProcessedValuesDetailsApiModelHistoryReadRequestApiModel {
  /**
   * @member {string} [nodeId] Node to read from (mandatory)
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {ReadProcessedValuesDetailsApiModel} [details]
   */
  details?: ReadProcessedValuesDetailsApiModel;
  /**
   * @member {string} [indexRange] Index range to read, e.g. 1:2,0:1 for 2
   * slices
   * out of a matrix or 0:1 for the first item in
   * an array, string or bytestring.
   * See 7.22 of part 4: NumericRange.
   */
  indexRange?: string;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ReadModifiedValuesDetailsApiModel.
 * Read modified data
 *
 */
export interface ReadModifiedValuesDetailsApiModel {
  /**
   * @member {Date} [startTime] The start time to read from
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] The end time to read to
   */
  endTime?: Date;
  /**
   * @member {number} [numValues] The number of values to read
   */
  numValues?: number;
}

/**
 * @interface
 * An interface representing ReadModifiedValuesDetailsApiModelHistoryReadRequestApiModel.
 * Request node history read
 *
 */
export interface ReadModifiedValuesDetailsApiModelHistoryReadRequestApiModel {
  /**
   * @member {string} [nodeId] Node to read from (mandatory)
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {ReadModifiedValuesDetailsApiModel} [details]
   */
  details?: ReadModifiedValuesDetailsApiModel;
  /**
   * @member {string} [indexRange] Index range to read, e.g. 1:2,0:1 for 2
   * slices
   * out of a matrix or 0:1 for the first item in
   * an array, string or bytestring.
   * See 7.22 of part 4: NumericRange.
   */
  indexRange?: string;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ReplaceValuesDetailsApiModel.
 * Replace historic data
 *
 */
export interface ReplaceValuesDetailsApiModel {
  /**
   * @member {HistoricValueApiModel[]} values Values to replace
   */
  values: HistoricValueApiModel[];
}

/**
 * @interface
 * An interface representing ReplaceValuesDetailsApiModelHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface ReplaceValuesDetailsApiModelHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {ReplaceValuesDetailsApiModel} details
   */
  details: ReplaceValuesDetailsApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ReplaceEventsDetailsApiModel.
 * Replace historic events
 *
 */
export interface ReplaceEventsDetailsApiModel {
  /**
   * @member {EventFilterApiModel} [filter]
   */
  filter?: EventFilterApiModel;
  /**
   * @member {HistoricEventApiModel[]} events The events to replace
   */
  events: HistoricEventApiModel[];
}

/**
 * @interface
 * An interface representing ReplaceEventsDetailsApiModelHistoryUpdateRequestApiModel.
 * Request node history update
 *
 */
export interface ReplaceEventsDetailsApiModelHistoryUpdateRequestApiModel {
  /**
   * @member {string} [nodeId] Node to update
   */
  nodeId?: string;
  /**
   * @member {string[]} [browsePath] An optional path from NodeId instance to
   * the actual node.
   */
  browsePath?: string[];
  /**
   * @member {ReplaceEventsDetailsApiModel} details
   */
  details: ReplaceEventsDetailsApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing StatusResponseApiModel.
 * Status response model
 *
 */
export interface StatusResponseApiModel {
  /**
   * @member {string} [name] Name of this service
   */
  name?: string;
  /**
   * @member {string} [status] Operational status
   */
  status?: string;
  /**
   * @member {string} [currentTime] Current time
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentTime?: string;
  /**
   * @member {string} [startTime] Start time of service
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: string;
  /**
   * @member {number} [upTime] Up time of service
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly upTime?: number;
  /**
   * @member {string} [uid] Value generated at bootstrap by each instance of
   * the service and
   * used to correlate logs coming from the same instance. The value
   * changes every time the service starts.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly uid?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] A property bag
   * with details about the service
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [dependencies] A property bag
   * with details about the internal dependencies
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dependencies?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [metadata] **NOTE: This
   * property will not be serialized. It can only be populated by the server.**
   */
  readonly metadata?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing HistoricEventApiModelHistoryReadResponseApiModel.
 * History read results
 *
 */
export interface HistoricEventApiModelHistoryReadResponseApiModel {
  /**
   * @member {HistoricEventApiModel[]} [history] History as json encoded
   * extension object
   */
  history?: HistoricEventApiModel[];
  /**
   * @member {string} [continuationToken] Continuation token if more results
   * pending.
   */
  continuationToken?: string;
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing HistoricEventApiModelHistoryReadNextResponseApiModel.
 * History read continuation result
 *
 */
export interface HistoricEventApiModelHistoryReadNextResponseApiModel {
  /**
   * @member {HistoricEventApiModel[]} [history] History as json encoded
   * extension object
   */
  history?: HistoricEventApiModel[];
  /**
   * @member {string} [continuationToken] Continuation token if more results
   * pending.
   */
  continuationToken?: string;
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing HistoricValueApiModelHistoryReadResponseApiModel.
 * History read results
 *
 */
export interface HistoricValueApiModelHistoryReadResponseApiModel {
  /**
   * @member {HistoricValueApiModel[]} [history] History as json encoded
   * extension object
   */
  history?: HistoricValueApiModel[];
  /**
   * @member {string} [continuationToken] Continuation token if more results
   * pending.
   */
  continuationToken?: string;
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing HistoricValueApiModelHistoryReadNextResponseApiModel.
 * History read continuation result
 *
 */
export interface HistoricValueApiModelHistoryReadNextResponseApiModel {
  /**
   * @member {HistoricValueApiModel[]} [history] History as json encoded
   * extension object
   */
  history?: HistoricValueApiModel[];
  /**
   * @member {string} [continuationToken] Continuation token if more results
   * pending.
   */
  continuationToken?: string;
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing AzureOpcHistoryClientOptions.
 * @extends ServiceClientOptions
 */
export interface AzureOpcHistoryClientOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * Defines values for CredentialType.
 * Possible values include: 'None', 'UserName', 'X509Certificate', 'JwtToken'
 * @readonly
 * @enum {string}
 */
export type CredentialType = 'None' | 'UserName' | 'X509Certificate' | 'JwtToken';

/**
 * Defines values for DiagnosticsLevel.
 * Possible values include: 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
 * @readonly
 * @enum {string}
 */
export type DiagnosticsLevel = 'None' | 'Status' | 'Operations' | 'Diagnostics' | 'Verbose';

/**
 * Defines values for HistoryUpdateOperation.
 * Possible values include: 'Insert', 'Replace', 'Update', 'Delete'
 * @readonly
 * @enum {string}
 */
export type HistoryUpdateOperation = 'Insert' | 'Replace' | 'Update' | 'Delete';

/**
 * Defines values for NodeAttribute.
 * Possible values include: 'NodeClass', 'BrowseName', 'DisplayName', 'Description', 'WriteMask',
 * 'UserWriteMask', 'IsAbstract', 'Symmetric', 'InverseName', 'ContainsNoLoops', 'EventNotifier',
 * 'Value', 'DataType', 'ValueRank', 'ArrayDimensions', 'AccessLevel', 'UserAccessLevel',
 * 'MinimumSamplingInterval', 'Historizing', 'Executable', 'UserExecutable', 'DataTypeDefinition',
 * 'RolePermissions', 'UserRolePermissions', 'AccessRestrictions'
 * @readonly
 * @enum {string}
 */
export type NodeAttribute = 'NodeClass' | 'BrowseName' | 'DisplayName' | 'Description' | 'WriteMask' | 'UserWriteMask' | 'IsAbstract' | 'Symmetric' | 'InverseName' | 'ContainsNoLoops' | 'EventNotifier' | 'Value' | 'DataType' | 'ValueRank' | 'ArrayDimensions' | 'AccessLevel' | 'UserAccessLevel' | 'MinimumSamplingInterval' | 'Historizing' | 'Executable' | 'UserExecutable' | 'DataTypeDefinition' | 'RolePermissions' | 'UserRolePermissions' | 'AccessRestrictions';

/**
 * Defines values for FilterOperatorType.
 * Possible values include: 'Equals', 'IsNull', 'GreaterThan', 'LessThan', 'GreaterThanOrEqual',
 * 'LessThanOrEqual', 'Like', 'Not', 'Between', 'InList', 'And', 'Or', 'Cast', 'InView', 'OfType',
 * 'RelatedTo', 'BitwiseAnd', 'BitwiseOr'
 * @readonly
 * @enum {string}
 */
export type FilterOperatorType = 'Equals' | 'IsNull' | 'GreaterThan' | 'LessThan' | 'GreaterThanOrEqual' | 'LessThanOrEqual' | 'Like' | 'Not' | 'Between' | 'InList' | 'And' | 'Or' | 'Cast' | 'InView' | 'OfType' | 'RelatedTo' | 'BitwiseAnd' | 'BitwiseOr';

/**
 * Contains response data for the historyDeleteValuesAtTimes operation.
 */
export type HistoryDeleteValuesAtTimesResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the historyDeleteValues operation.
 */
export type HistoryDeleteValuesResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the historyDeleteModifiedValues operation.
 */
export type HistoryDeleteModifiedValuesResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the historyDeleteEvents operation.
 */
export type HistoryDeleteEventsResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadRaw operation.
 */
export type HistoryReadRawResponse = JTokenHistoryReadResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JTokenHistoryReadResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadRawNext operation.
 */
export type HistoryReadRawNextResponse = JTokenHistoryReadNextResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JTokenHistoryReadNextResponseApiModel;
    };
};

/**
 * Contains response data for the historyUpdateRaw operation.
 */
export type HistoryUpdateRawResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the historyInsertValues operation.
 */
export type HistoryInsertValuesResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the historyInsertEvents operation.
 */
export type HistoryInsertEventsResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadEvents operation.
 */
export type HistoryReadEventsResponse = HistoricEventApiModelHistoryReadResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoricEventApiModelHistoryReadResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadEventsNext operation.
 */
export type HistoryReadEventsNextResponse = HistoricEventApiModelHistoryReadNextResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoricEventApiModelHistoryReadNextResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadValues operation.
 */
export type HistoryReadValuesResponse = HistoricValueApiModelHistoryReadResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoricValueApiModelHistoryReadResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadValuesAtTimes operation.
 */
export type HistoryReadValuesAtTimesResponse = HistoricValueApiModelHistoryReadResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoricValueApiModelHistoryReadResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadProcessedValues operation.
 */
export type HistoryReadProcessedValuesResponse = HistoricValueApiModelHistoryReadResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoricValueApiModelHistoryReadResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadModifiedValues operation.
 */
export type HistoryReadModifiedValuesResponse = HistoricValueApiModelHistoryReadResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoricValueApiModelHistoryReadResponseApiModel;
    };
};

/**
 * Contains response data for the historyReadValueNext operation.
 */
export type HistoryReadValueNextResponse = HistoricValueApiModelHistoryReadNextResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoricValueApiModelHistoryReadNextResponseApiModel;
    };
};

/**
 * Contains response data for the historyReplaceValues operation.
 */
export type HistoryReplaceValuesResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the historyReplaceEvents operation.
 */
export type HistoryReplaceEventsResponse = HistoryUpdateResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HistoryUpdateResponseApiModel;
    };
};

/**
 * Contains response data for the getStatus operation.
 */
export type GetStatusResponse = StatusResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StatusResponseApiModel;
    };
};
