/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing PublishedItemApiModel.
 * A monitored and published item
 *
 */
export interface PublishedItemApiModel {
  /**
   * @member {string} nodeId Node to monitor
   */
  nodeId: string;
  /**
   * @member {string} [publishingInterval] Publishing interval to use
   */
  publishingInterval?: string;
  /**
   * @member {string} [samplingInterval] Sampling interval to use
   */
  samplingInterval?: string;
}

/**
 * @interface
 * An interface representing CredentialApiModel.
 * Credential model
 *
 */
export interface CredentialApiModel {
  /**
   * @member {CredentialType} [type] Possible values include: 'None',
   * 'UserName', 'X509Certificate', 'JwtToken'
   */
  type?: CredentialType;
  /**
   * @member {any} [value] Value to pass to server
   */
  value?: any;
}

/**
 * @interface
 * An interface representing DiagnosticsApiModel.
 * Diagnostics configuration
 *
 */
export interface DiagnosticsApiModel {
  /**
   * @member {DiagnosticsLevel} [level] Possible values include: 'None',
   * 'Status', 'Operations', 'Diagnostics', 'Verbose'
   */
  level?: DiagnosticsLevel;
  /**
   * @member {string} [auditId] Client audit log entry.
   * (default: client generated)
   */
  auditId?: string;
  /**
   * @member {Date} [timeStamp] Timestamp of request.
   * (default: client generated)
   */
  timeStamp?: Date;
}

/**
 * @interface
 * An interface representing RequestHeaderApiModel.
 * Request header model
 *
 */
export interface RequestHeaderApiModel {
  /**
   * @member {CredentialApiModel} [elevation]
   */
  elevation?: CredentialApiModel;
  /**
   * @member {string[]} [locales] Optional list of locales in preference order.
   */
  locales?: string[];
  /**
   * @member {DiagnosticsApiModel} [diagnostics]
   */
  diagnostics?: DiagnosticsApiModel;
}

/**
 * @interface
 * An interface representing PublishStartRequestApiModel.
 * Publish request
 *
 */
export interface PublishStartRequestApiModel {
  /**
   * @member {PublishedItemApiModel} item
   */
  item: PublishedItemApiModel;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing ServiceResultApiModel.
 * Service result
 *
 */
export interface ServiceResultApiModel {
  /**
   * @member {number} [statusCode] Error code - if null operation succeeded.
   */
  statusCode?: number;
  /**
   * @member {string} [errorMessage] Error message in case of error or null.
   */
  errorMessage?: string;
  /**
   * @member {any} [diagnostics] Additional diagnostics information
   */
  diagnostics?: any;
}

/**
 * @interface
 * An interface representing PublishStartResponseApiModel.
 * Result of publish request
 *
 */
export interface PublishStartResponseApiModel {
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing PublishStopRequestApiModel.
 * Unpublish request
 *
 */
export interface PublishStopRequestApiModel {
  /**
   * @member {string} nodeId Node of published item to unpublish
   */
  nodeId: string;
  /**
   * @member {RequestHeaderApiModel} [header]
   */
  header?: RequestHeaderApiModel;
}

/**
 * @interface
 * An interface representing PublishStopResponseApiModel.
 * Result of unpublish request
 *
 */
export interface PublishStopResponseApiModel {
  /**
   * @member {ServiceResultApiModel} [errorInfo]
   */
  errorInfo?: ServiceResultApiModel;
}

/**
 * @interface
 * An interface representing PublishedItemListRequestApiModel.
 * Request list of published items
 *
 */
export interface PublishedItemListRequestApiModel {
  /**
   * @member {string} [continuationToken] Continuation token or null to start
   */
  continuationToken?: string;
}

/**
 * @interface
 * An interface representing PublishedItemListResponseApiModel.
 * List of published nodes
 *
 */
export interface PublishedItemListResponseApiModel {
  /**
   * @member {PublishedItemApiModel[]} [items] Monitored items
   */
  items?: PublishedItemApiModel[];
  /**
   * @member {string} [continuationToken] Continuation or null if final
   */
  continuationToken?: string;
}

/**
 * @interface
 * An interface representing StatusResponseApiModel.
 * Status response model
 *
 */
export interface StatusResponseApiModel {
  /**
   * @member {string} [name] Name of this service
   */
  name?: string;
  /**
   * @member {string} [status] Operational status
   */
  status?: string;
  /**
   * @member {string} [currentTime] Current time
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentTime?: string;
  /**
   * @member {string} [startTime] Start time of service
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: string;
  /**
   * @member {number} [upTime] Up time of service
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly upTime?: number;
  /**
   * @member {string} [uid] Value generated at bootstrap by each instance of
   * the service and
   * used to correlate logs coming from the same instance. The value
   * changes every time the service starts.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly uid?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] A property bag
   * with details about the service
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [dependencies] A property bag
   * with details about the internal dependencies
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dependencies?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [metadata] **NOTE: This
   * property will not be serialized. It can only be populated by the server.**
   */
  readonly metadata?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AzureOpcPublisherClientOptions.
 * @extends ServiceClientOptions
 */
export interface AzureOpcPublisherClientOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing AzureOpcPublisherClientSubscribeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AzureOpcPublisherClientSubscribeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [body] The user id that will receive publisher samples.
   */
  body?: string;
}

/**
 * Defines values for CredentialType.
 * Possible values include: 'None', 'UserName', 'X509Certificate', 'JwtToken'
 * @readonly
 * @enum {string}
 */
export type CredentialType = 'None' | 'UserName' | 'X509Certificate' | 'JwtToken';

/**
 * Defines values for DiagnosticsLevel.
 * Possible values include: 'None', 'Status', 'Operations', 'Diagnostics', 'Verbose'
 * @readonly
 * @enum {string}
 */
export type DiagnosticsLevel = 'None' | 'Status' | 'Operations' | 'Diagnostics' | 'Verbose';

/**
 * Contains response data for the startPublishingValues operation.
 */
export type StartPublishingValuesResponse = PublishStartResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishStartResponseApiModel;
    };
};

/**
 * Contains response data for the stopPublishingValues operation.
 */
export type StopPublishingValuesResponse = PublishStopResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishStopResponseApiModel;
    };
};

/**
 * Contains response data for the getFirstListOfPublishedNodes operation.
 */
export type GetFirstListOfPublishedNodesResponse = PublishedItemListResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishedItemListResponseApiModel;
    };
};

/**
 * Contains response data for the getNextListOfPublishedNodes operation.
 */
export type GetNextListOfPublishedNodesResponse = PublishedItemListResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishedItemListResponseApiModel;
    };
};

/**
 * Contains response data for the getStatus operation.
 */
export type GetStatusResponse = StatusResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StatusResponseApiModel;
    };
};
