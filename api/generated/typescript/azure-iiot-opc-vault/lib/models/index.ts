/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing X509CertificateApiModel.
 * Certificate model
 *
 */
export interface X509CertificateApiModel {
  /**
   * @member {string} [subject] Subject
   */
  subject?: string;
  /**
   * @member {string} [thumbprint] Thumbprint
   */
  thumbprint?: string;
  /**
   * @member {string} [serialNumber] Serial number
   */
  serialNumber?: string;
  /**
   * @member {Date} [notBeforeUtc] Not before validity
   */
  notBeforeUtc?: Date;
  /**
   * @member {Date} [notAfterUtc] Not after validity
   */
  notAfterUtc?: Date;
  /**
   * @member {any} [certificate] Raw data
   */
  certificate?: any;
}

/**
 * @interface
 * An interface representing X509CertificateChainApiModel.
 * Certificate chain
 *
 */
export interface X509CertificateChainApiModel {
  /**
   * @member {X509CertificateApiModel[]} [chain] Chain
   */
  chain?: X509CertificateApiModel[];
}

/**
 * @interface
 * An interface representing X509CrlApiModel.
 * A X509 certificate revocation list.
 *
 */
export interface X509CrlApiModel {
  /**
   * @member {string} [issuer] The Issuer name of the revocation list.
   */
  issuer?: string;
  /**
   * @member {any} [crl] The certificate revocation list.
   */
  crl?: any;
}

/**
 * @interface
 * An interface representing X509CrlChainApiModel.
 * Crl chain model
 *
 */
export interface X509CrlChainApiModel {
  /**
   * @member {X509CrlApiModel[]} [chain] Chain
   */
  chain?: X509CrlApiModel[];
}

/**
 * @interface
 * An interface representing NotFoundResult.
 */
export interface NotFoundResult {
  /**
   * @member {number} [statusCode] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly statusCode?: number;
}

/**
 * @interface
 * An interface representing StartSigningRequestApiModel.
 * Signing request
 *
 */
export interface StartSigningRequestApiModel {
  /**
   * @member {string} [entityId] Id of entity to sign a certificate for
   */
  entityId?: string;
  /**
   * @member {string} [groupId] Certificate group id
   */
  groupId?: string;
  /**
   * @member {any} [certificateRequest] Request
   */
  certificateRequest?: any;
}

/**
 * @interface
 * An interface representing StartSigningRequestResponseApiModel.
 * Signing request response
 *
 */
export interface StartSigningRequestResponseApiModel {
  /**
   * @member {string} [requestId] Request id
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing VaultOperationContextApiModel.
 * Vault operation log model
 *
 */
export interface VaultOperationContextApiModel {
  /**
   * @member {string} [authorityId] User
   */
  authorityId?: string;
  /**
   * @member {Date} [time] Operation time
   */
  time?: Date;
}

/**
 * @interface
 * An interface representing CertificateRequestRecordApiModel.
 * Certificate request record model
 *
 */
export interface CertificateRequestRecordApiModel {
  /**
   * @member {string} [requestId] Request id
   */
  requestId?: string;
  /**
   * @member {string} [entityId] Application id
   */
  entityId?: string;
  /**
   * @member {string} [groupId] Trust group
   */
  groupId?: string;
  /**
   * @member {CertificateRequestState} [state] Possible values include: 'New',
   * 'Approved', 'Rejected', 'Failure', 'Completed', 'Accepted'
   */
  state?: CertificateRequestState;
  /**
   * @member {CertificateRequestType} [type] Possible values include:
   * 'SigningRequest', 'KeyPairRequest'
   */
  type?: CertificateRequestType;
  /**
   * @member {any} [errorInfo] Error diagnostics
   */
  errorInfo?: any;
  /**
   * @member {VaultOperationContextApiModel} [submitted]
   */
  submitted?: VaultOperationContextApiModel;
  /**
   * @member {VaultOperationContextApiModel} [approved]
   */
  approved?: VaultOperationContextApiModel;
  /**
   * @member {VaultOperationContextApiModel} [accepted]
   */
  accepted?: VaultOperationContextApiModel;
}

/**
 * @interface
 * An interface representing FinishSigningRequestResponseApiModel.
 * Finish request results
 *
 */
export interface FinishSigningRequestResponseApiModel {
  /**
   * @member {CertificateRequestRecordApiModel} [request]
   */
  request?: CertificateRequestRecordApiModel;
  /**
   * @member {X509CertificateApiModel} [certificate]
   */
  certificate?: X509CertificateApiModel;
}

/**
 * @interface
 * An interface representing StartNewKeyPairRequestApiModel.
 * New key pair request
 *
 */
export interface StartNewKeyPairRequestApiModel {
  /**
   * @member {string} [entityId] Entity id
   */
  entityId?: string;
  /**
   * @member {string} [groupId] Certificate group
   */
  groupId?: string;
  /**
   * @member {TrustGroupType} [certificateType] Possible values include:
   * 'ApplicationInstanceCertificate', 'HttpsCertificate',
   * 'UserCredentialCertificate'
   */
  certificateType?: TrustGroupType;
  /**
   * @member {string} [subjectName] Subject name
   */
  subjectName?: string;
  /**
   * @member {string[]} [domainNames] Domain names
   */
  domainNames?: string[];
}

/**
 * @interface
 * An interface representing StartNewKeyPairRequestResponseApiModel.
 * New key pair response
 *
 */
export interface StartNewKeyPairRequestResponseApiModel {
  /**
   * @member {string} [requestId] Request id
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing PrivateKeyApiModel.
 * Private key
 *
 */
export interface PrivateKeyApiModel {
  /**
   * @member {PrivateKeyType} [kty] Possible values include: 'RSA', 'ECC',
   * 'AES'
   */
  kty?: PrivateKeyType;
  /**
   * @member {Uint8Array} [n] RSA modulus.
   */
  n?: Uint8Array;
  /**
   * @member {Uint8Array} [e] RSA public exponent, in Base64.
   */
  e?: Uint8Array;
  /**
   * @member {Uint8Array} [dp] RSA Private Key Parameter
   */
  dp?: Uint8Array;
  /**
   * @member {Uint8Array} [dq] RSA Private Key Parameter
   */
  dq?: Uint8Array;
  /**
   * @member {Uint8Array} [qi] RSA Private Key Parameter
   */
  qi?: Uint8Array;
  /**
   * @member {Uint8Array} [p] RSA secret prime
   */
  p?: Uint8Array;
  /**
   * @member {Uint8Array} [q] RSA secret prime, with p < q
   */
  q?: Uint8Array;
  /**
   * @member {string} [crv]
   */
  crv?: string;
  /**
   * @member {Uint8Array} [x] X coordinate for the Elliptic Curve point.
   */
  x?: Uint8Array;
  /**
   * @member {Uint8Array} [y] Y coordinate for the Elliptic Curve point.
   */
  y?: Uint8Array;
  /**
   * @member {Uint8Array} [d] RSA private exponent or ECC private key.
   */
  d?: Uint8Array;
  /**
   * @member {Uint8Array} [k] Symmetric key
   */
  k?: Uint8Array;
  /**
   * @member {Uint8Array} [keyHsm]
   */
  keyHsm?: Uint8Array;
}

/**
 * @interface
 * An interface representing FinishNewKeyPairRequestResponseApiModel.
 * Finish request results
 *
 */
export interface FinishNewKeyPairRequestResponseApiModel {
  /**
   * @member {CertificateRequestRecordApiModel} [request]
   */
  request?: CertificateRequestRecordApiModel;
  /**
   * @member {X509CertificateApiModel} [certificate]
   */
  certificate?: X509CertificateApiModel;
  /**
   * @member {PrivateKeyApiModel} [privateKey]
   */
  privateKey?: PrivateKeyApiModel;
}

/**
 * @interface
 * An interface representing CertificateRequestQueryRequestApiModel.
 * Certificate request query model
 *
 */
export interface CertificateRequestQueryRequestApiModel {
  /**
   * @member {string} [entityId] The entity id to filter with
   */
  entityId?: string;
  /**
   * @member {CertificateRequestState} [state] Possible values include: 'New',
   * 'Approved', 'Rejected', 'Failure', 'Completed', 'Accepted'
   */
  state?: CertificateRequestState;
}

/**
 * @interface
 * An interface representing CertificateRequestQueryResponseApiModel.
 * Response model
 *
 */
export interface CertificateRequestQueryResponseApiModel {
  /**
   * @member {CertificateRequestRecordApiModel[]} [requests] The query result.
   */
  requests?: CertificateRequestRecordApiModel[];
  /**
   * @member {string} [nextPageLink] Link to the next page of results.
   */
  nextPageLink?: string;
}

/**
 * @interface
 * An interface representing TrustGroupApiModel.
 * Trust group model
 *
 */
export interface TrustGroupApiModel {
  /**
   * @member {string} [name] The name of the trust group.
   */
  name?: string;
  /**
   * @member {string} [parentId] The identifer of the parent trust group.
   */
  parentId?: string;
  /**
   * @member {TrustGroupType} [type] Possible values include:
   * 'ApplicationInstanceCertificate', 'HttpsCertificate',
   * 'UserCredentialCertificate'
   */
  type?: TrustGroupType;
  /**
   * @member {string} [subjectName] The subject name of the group as
   * distinguished name.
   */
  subjectName?: string;
  /**
   * @member {string} [lifetime] The lifetime of the trust group certificate.
   */
  lifetime?: string;
  /**
   * @member {number} [keySize] The trust group certificate key size in bits.
   */
  keySize?: number;
  /**
   * @member {SignatureAlgorithm} [signatureAlgorithm] Possible values include:
   * 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss', 'Rsa512Pss'
   */
  signatureAlgorithm?: SignatureAlgorithm;
  /**
   * @member {string} [issuedLifetime] The issued certificate lifetime in
   * months.
   */
  issuedLifetime?: string;
  /**
   * @member {number} [issuedKeySize] The issued certificate key size in bits.
   */
  issuedKeySize?: number;
  /**
   * @member {SignatureAlgorithm} [issuedSignatureAlgorithm] Possible values
   * include: 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss',
   * 'Rsa512Pss'
   */
  issuedSignatureAlgorithm?: SignatureAlgorithm;
}

/**
 * @interface
 * An interface representing TrustGroupRegistrationApiModel.
 * Trust group registration model
 *
 */
export interface TrustGroupRegistrationApiModel {
  /**
   * @member {string} [id] The registered id of the trust group
   */
  id?: string;
  /**
   * @member {TrustGroupApiModel} [group]
   */
  group?: TrustGroupApiModel;
}

/**
 * @interface
 * An interface representing TrustGroupRegistrationListApiModel.
 * Trust group registration collection model
 *
 */
export interface TrustGroupRegistrationListApiModel {
  /**
   * @member {TrustGroupRegistrationApiModel[]} [registrations] Group
   * registrations
   */
  registrations?: TrustGroupRegistrationApiModel[];
  /**
   * @member {string} [nextPageLink] Next link
   */
  nextPageLink?: string;
}

/**
 * @interface
 * An interface representing TrustGroupRegistrationRequestApiModel.
 * Trust group registration request model
 *
 */
export interface TrustGroupRegistrationRequestApiModel {
  /**
   * @member {string} [name] The new name of the trust group
   */
  name?: string;
  /**
   * @member {string} [parentId] The identifer of the parent trust group.
   */
  parentId?: string;
  /**
   * @member {string} [subjectName] The subject name of the group as
   * distinguished name.
   */
  subjectName?: string;
  /**
   * @member {string} [issuedLifetime] The lifetime of certificates issued in
   * the group.
   */
  issuedLifetime?: string;
  /**
   * @member {number} [issuedKeySize] The issued certificate key size in bits.
   */
  issuedKeySize?: number;
  /**
   * @member {SignatureAlgorithm} [issuedSignatureAlgorithm] Possible values
   * include: 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss',
   * 'Rsa512Pss'
   */
  issuedSignatureAlgorithm?: SignatureAlgorithm;
}

/**
 * @interface
 * An interface representing TrustGroupRegistrationResponseApiModel.
 * Trust group registration response model
 *
 */
export interface TrustGroupRegistrationResponseApiModel {
  /**
   * @member {string} [id] The id of the trust group
   */
  id?: string;
}

/**
 * @interface
 * An interface representing TrustGroupUpdateRequestApiModel.
 * Trust group update model
 *
 */
export interface TrustGroupUpdateRequestApiModel {
  /**
   * @member {string} [name] The name of the trust group
   */
  name?: string;
  /**
   * @member {string} [issuedLifetime] The issued certificate lifetime.
   */
  issuedLifetime?: string;
  /**
   * @member {number} [issuedKeySize] The issued certificate key size in bits.
   */
  issuedKeySize?: number;
  /**
   * @member {SignatureAlgorithm} [issuedSignatureAlgorithm] Possible values
   * include: 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss',
   * 'Rsa512Pss'
   */
  issuedSignatureAlgorithm?: SignatureAlgorithm;
}

/**
 * @interface
 * An interface representing TrustGroupRootCreateRequestApiModel.
 * Trust group root registration model
 *
 */
export interface TrustGroupRootCreateRequestApiModel {
  /**
   * @member {string} [name] The new name of the trust group root
   */
  name?: string;
  /**
   * @member {TrustGroupType} [type] Possible values include:
   * 'ApplicationInstanceCertificate', 'HttpsCertificate',
   * 'UserCredentialCertificate'
   */
  type?: TrustGroupType;
  /**
   * @member {string} [subjectName] The subject name of the group as
   * distinguished name.
   */
  subjectName?: string;
  /**
   * @member {string} [lifetime] The lifetime of the trust group root
   * certificate.
   */
  lifetime?: string;
  /**
   * @member {number} [keySize] The certificate key size in bits.
   */
  keySize?: number;
  /**
   * @member {SignatureAlgorithm} [signatureAlgorithm] Possible values include:
   * 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss', 'Rsa512Pss'
   */
  signatureAlgorithm?: SignatureAlgorithm;
  /**
   * @member {string} [issuedLifetime] The issued certificate lifetime.
   */
  issuedLifetime?: string;
  /**
   * @member {number} [issuedKeySize] The issued certificate key size in bits.
   */
  issuedKeySize?: number;
  /**
   * @member {SignatureAlgorithm} [issuedSignatureAlgorithm] Possible values
   * include: 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss',
   * 'Rsa512Pss'
   */
  issuedSignatureAlgorithm?: SignatureAlgorithm;
}

/**
 * @interface
 * An interface representing X509CertificateListApiModel.
 * Certificate list
 *
 */
export interface X509CertificateListApiModel {
  /**
   * @member {X509CertificateApiModel[]} [certificates] Certificates
   */
  certificates?: X509CertificateApiModel[];
  /**
   * @member {string} [nextPageLink] Next link
   */
  nextPageLink?: string;
}

/**
 * @interface
 * An interface representing AzureOpcVaultClientOptions.
 * @extends ServiceClientOptions
 */
export interface AzureOpcVaultClientOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing AzureOpcVaultClientQueryRequestsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AzureOpcVaultClientQueryRequestsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [pageSize] optional, the maximum number of result per
   * page
   */
  pageSize?: number;
  /**
   * @member {CertificateRequestQueryRequestApiModel} [body] optional, query
   * filter
   */
  body?: CertificateRequestQueryRequestApiModel;
}

/**
 * @interface
 * An interface representing AzureOpcVaultClientListRequestsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AzureOpcVaultClientListRequestsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [nextPageLink] optional, link to next page
   */
  nextPageLink?: string;
  /**
   * @member {number} [pageSize] optional, the maximum number of result per
   * page
   */
  pageSize?: number;
}

/**
 * @interface
 * An interface representing AzureOpcVaultClientListGroupsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AzureOpcVaultClientListGroupsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [nextPageLink] optional, link to next page
   */
  nextPageLink?: string;
  /**
   * @member {number} [pageSize] optional, the maximum number of result per
   * page
   */
  pageSize?: number;
}

/**
 * @interface
 * An interface representing AzureOpcVaultClientListTrustedCertificatesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AzureOpcVaultClientListTrustedCertificatesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [nextPageLink] optional, link to next page
   */
  nextPageLink?: string;
  /**
   * @member {number} [pageSize] optional, the maximum number of result per
   * page
   */
  pageSize?: number;
}

/**
 * Defines values for CertificateRequestState.
 * Possible values include: 'New', 'Approved', 'Rejected', 'Failure', 'Completed', 'Accepted'
 * @readonly
 * @enum {string}
 */
export type CertificateRequestState = 'New' | 'Approved' | 'Rejected' | 'Failure' | 'Completed' | 'Accepted';

/**
 * Defines values for CertificateRequestType.
 * Possible values include: 'SigningRequest', 'KeyPairRequest'
 * @readonly
 * @enum {string}
 */
export type CertificateRequestType = 'SigningRequest' | 'KeyPairRequest';

/**
 * Defines values for TrustGroupType.
 * Possible values include: 'ApplicationInstanceCertificate', 'HttpsCertificate',
 * 'UserCredentialCertificate'
 * @readonly
 * @enum {string}
 */
export type TrustGroupType = 'ApplicationInstanceCertificate' | 'HttpsCertificate' | 'UserCredentialCertificate';

/**
 * Defines values for PrivateKeyType.
 * Possible values include: 'RSA', 'ECC', 'AES'
 * @readonly
 * @enum {string}
 */
export type PrivateKeyType = 'RSA' | 'ECC' | 'AES';

/**
 * Defines values for SignatureAlgorithm.
 * Possible values include: 'Rsa256', 'Rsa384', 'Rsa512', 'Rsa256Pss', 'Rsa384Pss', 'Rsa512Pss'
 * @readonly
 * @enum {string}
 */
export type SignatureAlgorithm = 'Rsa256' | 'Rsa384' | 'Rsa512' | 'Rsa256Pss' | 'Rsa384Pss' | 'Rsa512Pss';

/**
 * Contains response data for the getIssuerCertificateChain operation.
 */
export type GetIssuerCertificateChainResponse = X509CertificateChainApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: X509CertificateChainApiModel;
    };
};

/**
 * Contains response data for the getIssuerCrlChain operation.
 */
export type GetIssuerCrlChainResponse = X509CrlChainApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: X509CrlChainApiModel;
    };
};

/**
 * Contains response data for the getIssuerCertificateChain1 operation.
 */
export type GetIssuerCertificateChain1Response = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getIssuerCrlChain1 operation.
 */
export type GetIssuerCrlChain1Response = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the startSigningRequest operation.
 */
export type StartSigningRequestResponse = StartSigningRequestResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StartSigningRequestResponseApiModel;
    };
};

/**
 * Contains response data for the finishSigningRequest operation.
 */
export type FinishSigningRequestResponse = FinishSigningRequestResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FinishSigningRequestResponseApiModel;
    };
};

/**
 * Contains response data for the startNewKeyPairRequest operation.
 */
export type StartNewKeyPairRequestResponse = StartNewKeyPairRequestResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StartNewKeyPairRequestResponseApiModel;
    };
};

/**
 * Contains response data for the finishNewKeyPairRequest operation.
 */
export type FinishNewKeyPairRequestResponse = FinishNewKeyPairRequestResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FinishNewKeyPairRequestResponseApiModel;
    };
};

/**
 * Contains response data for the getRequest operation.
 */
export type GetRequestResponse = CertificateRequestRecordApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateRequestRecordApiModel;
    };
};

/**
 * Contains response data for the queryRequests operation.
 */
export type QueryRequestsResponse = CertificateRequestQueryResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateRequestQueryResponseApiModel;
    };
};

/**
 * Contains response data for the listRequests operation.
 */
export type ListRequestsResponse = CertificateRequestQueryResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateRequestQueryResponseApiModel;
    };
};

/**
 * Contains response data for the listGroups operation.
 */
export type ListGroupsResponse = TrustGroupRegistrationListApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TrustGroupRegistrationListApiModel;
    };
};

/**
 * Contains response data for the createGroup operation.
 */
export type CreateGroupResponse = TrustGroupRegistrationResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TrustGroupRegistrationResponseApiModel;
    };
};

/**
 * Contains response data for the getGroup operation.
 */
export type GetGroupResponse = TrustGroupRegistrationApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TrustGroupRegistrationApiModel;
    };
};

/**
 * Contains response data for the createRoot operation.
 */
export type CreateRootResponse = TrustGroupRegistrationResponseApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TrustGroupRegistrationResponseApiModel;
    };
};

/**
 * Contains response data for the listTrustedCertificates operation.
 */
export type ListTrustedCertificatesResponse = X509CertificateListApiModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: X509CertificateListApiModel;
    };
};
