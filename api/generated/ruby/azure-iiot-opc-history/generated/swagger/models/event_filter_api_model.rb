# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module azure.iiot.opc.history
  module Models
    #
    # Event filter
    #
    class EventFilterApiModel
      # @return [Array<SimpleAttributeOperandApiModel>] Select statements
      attr_accessor :select_clauses

      # @return [ContentFilterApiModel]
      attr_accessor :where_clause


      #
      # Mapper for EventFilterApiModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'EventFilterApiModel',
          type: {
            name: 'Composite',
            class_name: 'EventFilterApiModel',
            model_properties: {
              select_clauses: {
                client_side_validation: true,
                required: false,
                serialized_name: 'selectClauses',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'SimpleAttributeOperandApiModelElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'SimpleAttributeOperandApiModel'
                      }
                  }
                }
              },
              where_clause: {
                client_side_validation: true,
                required: false,
                serialized_name: 'whereClause',
                type: {
                  name: 'Composite',
                  class_name: 'ContentFilterApiModel'
                }
              }
            }
          }
        }
      end
    end
  end
end
