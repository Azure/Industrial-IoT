# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module azure.iiot.opc.registry
  module Models
    #
    # Publisher registration model
    #
    class PublisherApiModel
      # @return [String] Publisher id
      attr_accessor :id

      # @return [String] Site of the publisher
      attr_accessor :site_id

      # @return [Array<Integer>] Publisher public client cert
      attr_accessor :certificate

      # @return [TraceLogLevel] Current log level. Possible values include:
      # 'Error', 'Information', 'Debug', 'Verbose'. Default value:
      # 'Information' .
      attr_accessor :log_level

      # @return [PublisherConfigApiModel] Publisher agent configuration
      attr_accessor :configuration

      # @return [Boolean] Whether the registration is out of sync between
      # client (module) and server (service) (default: false).
      attr_accessor :out_of_sync

      # @return [Boolean] Whether publisher is connected on this registration
      attr_accessor :connected


      #
      # Mapper for PublisherApiModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'PublisherApiModel',
          type: {
            name: 'Composite',
            class_name: 'PublisherApiModel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              site_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'siteId',
                type: {
                  name: 'String'
                }
              },
              certificate: {
                client_side_validation: true,
                required: false,
                serialized_name: 'certificate',
                type: {
                  name: 'ByteArray'
                }
              },
              log_level: {
                client_side_validation: true,
                required: false,
                serialized_name: 'logLevel',
                default_value: 'Information',
                type: {
                  name: 'Enum',
                  module: 'TraceLogLevel'
                }
              },
              configuration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'configuration',
                type: {
                  name: 'Composite',
                  class_name: 'PublisherConfigApiModel'
                }
              },
              out_of_sync: {
                client_side_validation: true,
                required: false,
                serialized_name: 'outOfSync',
                type: {
                  name: 'Boolean'
                }
              },
              connected: {
                client_side_validation: true,
                required: false,
                serialized_name: 'connected',
                type: {
                  name: 'Boolean'
                }
              }
            }
          }
        }
      end
    end
  end
end
