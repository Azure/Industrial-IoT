# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module azure.iiot.opc.registry
  module Models
    #
    # Endpoint query
    #
    class EndpointRegistrationQueryApiModel
      # @return [String] Endoint url for direct server access
      attr_accessor :url

      # @return [Array<Integer>] Certificate of the endpoint
      attr_accessor :certificate

      # @return [SecurityMode] Security Mode. Possible values include: 'Best',
      # 'Sign', 'SignAndEncrypt', 'None'
      attr_accessor :security_mode

      # @return [String] Security policy uri
      attr_accessor :security_policy

      # @return [Boolean] Whether the endpoint was activated
      attr_accessor :activated

      # @return [Boolean] Whether the endpoint is connected on supervisor.
      attr_accessor :connected

      # @return [EndpointConnectivityState] The last state of the the activated
      # endpoint. Possible values include: 'Connecting', 'NotReachable',
      # 'Busy', 'NoTrust', 'CertificateInvalid', 'Ready', 'Error'
      attr_accessor :endpoint_state

      # @return [Boolean] Whether to include endpoints that were soft deleted
      attr_accessor :include_not_seen_since


      #
      # Mapper for EndpointRegistrationQueryApiModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'EndpointRegistrationQueryApiModel',
          type: {
            name: 'Composite',
            class_name: 'EndpointRegistrationQueryApiModel',
            model_properties: {
              url: {
                client_side_validation: true,
                required: false,
                serialized_name: 'url',
                type: {
                  name: 'String'
                }
              },
              certificate: {
                client_side_validation: true,
                required: false,
                serialized_name: 'certificate',
                type: {
                  name: 'ByteArray'
                }
              },
              security_mode: {
                client_side_validation: true,
                required: false,
                serialized_name: 'securityMode',
                type: {
                  name: 'Enum',
                  module: 'SecurityMode'
                }
              },
              security_policy: {
                client_side_validation: true,
                required: false,
                serialized_name: 'securityPolicy',
                type: {
                  name: 'String'
                }
              },
              activated: {
                client_side_validation: true,
                required: false,
                serialized_name: 'activated',
                type: {
                  name: 'Boolean'
                }
              },
              connected: {
                client_side_validation: true,
                required: false,
                serialized_name: 'connected',
                type: {
                  name: 'Boolean'
                }
              },
              endpoint_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'endpointState',
                type: {
                  name: 'Enum',
                  module: 'EndpointConnectivityState'
                }
              },
              include_not_seen_since: {
                client_side_validation: true,
                required: false,
                serialized_name: 'includeNotSeenSince',
                type: {
                  name: 'Boolean'
                }
              }
            }
          }
        }
      end
    end
  end
end
