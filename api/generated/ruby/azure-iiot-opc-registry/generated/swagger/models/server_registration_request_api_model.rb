# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module azure.iiot.opc.registry
  module Models
    #
    # Application registration request
    #
    class ServerRegistrationRequestApiModel
      # @return [String] Discovery url to use for registration
      attr_accessor :discovery_url

      # @return [String] Registration id
      attr_accessor :id

      # @return [EndpointActivationFilterApiModel]
      attr_accessor :activation_filter


      #
      # Mapper for ServerRegistrationRequestApiModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ServerRegistrationRequestApiModel',
          type: {
            name: 'Composite',
            class_name: 'ServerRegistrationRequestApiModel',
            model_properties: {
              discovery_url: {
                client_side_validation: true,
                required: true,
                serialized_name: 'discoveryUrl',
                type: {
                  name: 'String'
                }
              },
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              activation_filter: {
                client_side_validation: true,
                required: false,
                serialized_name: 'activationFilter',
                type: {
                  name: 'Composite',
                  class_name: 'EndpointActivationFilterApiModel'
                }
              }
            }
          }
        }
      end
    end
  end
end
