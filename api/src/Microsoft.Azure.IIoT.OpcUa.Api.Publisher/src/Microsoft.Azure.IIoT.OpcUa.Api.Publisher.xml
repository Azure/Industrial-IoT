<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.IIoT.OpcUa.Api.Publisher</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient">
            <summary>
            Implementation of twin service api.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient.#ctor(Microsoft.Azure.IIoT.Http.IHttpClient,Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherConfig)">
            <summary>
            Create service client
            </summary>
            <param name="httpClient"></param>
            <param name="config"></param>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient.#ctor(Microsoft.Azure.IIoT.Http.IHttpClient,System.String,System.String)">
            <summary>
            Create service client
            </summary>
            <param name="httpClient"></param>
            <param name="serviceUri"></param>
            <param name="resourceId"></param>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient.GetServiceStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient.NodePublishStartAsync(System.String,Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStartRequestApiModel,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient.NodePublishListAsync(System.String,Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemListRequestApiModel,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient.NodePublishStopAsync(System.String,Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStopRequestApiModel,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient.NodePublishSubscribeByEndpointAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Clients.PublisherServiceClient.NodePublishUnsubscribeByEndpointAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.PublisherServiceEvents">
            <summary>
            Publisher service events
            </summary>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.PublisherServiceEvents.#ctor(Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi,Microsoft.Azure.IIoT.Messaging.ICallbackClient)">
            <summary>
            Event client
            </summary>
            <param name="api"></param>
            <param name="client"></param>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.PublisherServiceEvents.NodePublishSubscribeByEndpointAsync(System.String,System.String,System.Func{Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel,System.Threading.Tasks.Task})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.EventTargets">
            <summary>
            Event target constants
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.EventTargets.Nodes">
            <summary>
            Nodes group
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.EventTargets.Endpoints">
            <summary>
            Endpoints group
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.EventTargets.PublisherSampleTarget">
            <summary>
            Discovery progress event targets
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.PublisherServiceApiEx">
            <summary>
            Publisher service api extensions
            </summary>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.PublisherServiceApiEx.NodePublishListAllAsync(Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi,System.String)">
            <summary>
            Get list of published nodes
            </summary>
            <param name="service"></param>
            <param name="endpointId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.PublisherServiceApiEx.NodePublishListAsync(Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi,System.String,System.String)">
            <summary>
            Get list of published nodes
            </summary>
            <param name="service"></param>
            <param name="endpointId"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherConfig">
            <summary>
            Configuration for service
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherConfig.OpcUaPublisherServiceUrl">
            <summary>
            Opc publisher service url
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherConfig.OpcUaPublisherServiceResourceId">
            <summary>
            The publisher service resource id
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi">
            <summary>
            Represents OPC twin service api functions
            </summary>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi.GetServiceStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Returns status of the service
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi.NodePublishStartAsync(System.String,Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStartRequestApiModel,System.Threading.CancellationToken)">
            <summary>
            Start publishing node values
            </summary>
            <param name="endpointId"></param>
            <param name="request"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi.NodePublishStopAsync(System.String,Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStopRequestApiModel,System.Threading.CancellationToken)">
            <summary>
            Start publishing node values
            </summary>
            <param name="endpointId"></param>
            <param name="request"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi.NodePublishListAsync(System.String,Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemListRequestApiModel,System.Threading.CancellationToken)">
            <summary>
            Get all published nodes for endpoint.
            </summary>
            <param name="endpointId"></param>
            <param name="request"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi.NodePublishSubscribeByEndpointAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Subscribe client to receive published samples
            </summary>
            <param name="endpointId"></param>
            <param name="userId"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceApi.NodePublishUnsubscribeByEndpointAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unsubscribe client from receiving samples
            </summary>
            <param name="endpointId"></param>
            <param name="userId"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceEvents">
            <summary>
            Publisher service events
            </summary>
        </member>
        <member name="M:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.IPublisherServiceEvents.NodePublishSubscribeByEndpointAsync(System.String,System.String,System.Func{Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel,System.Threading.Tasks.Task})">
            <summary>
            Subscribe to monitored item messages
            </summary>
            <param name="endpointId"></param>
            <param name="userId"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.CredentialApiModel">
            <summary>
            Credential model
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.CredentialApiModel.Type">
            <summary>
            Type of credential
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.CredentialApiModel.Value">
            <summary>
            Value to pass to server
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.CredentialType">
            <summary>
            Type of credentials to use for authentication
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.CredentialType.None">
            <summary>
            No credentials for anonymous access
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.CredentialType.UserName">
            <summary>
            User name and password as credential
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.CredentialType.X509Certificate">
            <summary>
            Credential is a x509 certificate
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.CredentialType.JwtToken">
            <summary>
            Jwt token as credential
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsApiModel">
            <summary>
            Diagnostics configuration
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsApiModel.Level">
            <summary>
            Requested level of response diagnostics.
            (default: None)
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsApiModel.AuditId">
            <summary>
            Client audit log entry.
            (default: client generated)
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsApiModel.TimeStamp">
            <summary>
            Timestamp of request.
            (default: client generated)
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsLevel">
            <summary>
            Level of diagnostics requested in responses
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsLevel.None">
            <summary>
            Include no diagnostics in response
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsLevel.Status">
            <summary>
            Include only status text as array (default)
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsLevel.Operations">
            <summary>
            Include status and operations trace.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsLevel.Diagnostics">
            <summary>
            Include diagnostics
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.DiagnosticsLevel.Verbose">
            <summary>
            Include full diagnostics trace.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.EndpointApiModel">
            <summary>
            Endpoint model
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.EndpointApiModel.Url">
            <summary>
            Endpoint url to use to connect with
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.EndpointApiModel.AlternativeUrls">
            <summary>
            Alternative endpoint urls that can be used for
            accessing and validating the server
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.EndpointApiModel.SecurityMode">
            <summary>
            Security Mode to use for communication.
            default to best.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.EndpointApiModel.SecurityPolicy">
            <summary>
            Security policy uri to use for communication.
            default to best.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.EndpointApiModel.Certificate">
            <summary>
            Endpoint certificate that was registered.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel">
            <summary>
            Publisher monitored item sample model
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.SubscriptionId">
            <summary>
            Subscription id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.EndpointId">
            <summary>
            Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.DataSetId">
            <summary>
            Dataset id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.NodeId">
            <summary>
            Node id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.TypeId">
            <summary>
            Type id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.Timestamp">
            <summary>
            Sent time stamp
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.SourceTimestamp">
            <summary>
            Source time stamp
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.SourcePicoseconds">
            <summary>
            Source pico
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.ServerTimestamp">
            <summary>
            Server time stamp
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.MonitoredItemMessageApiModel.ServerPicoseconds">
            <summary>
            Server pico
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemApiModel">
            <summary>
            A monitored and published item
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemApiModel.NodeId">
            <summary>
            Node to monitor
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemApiModel.PublishingInterval">
            <summary>
            Publishing interval to use
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemApiModel.SamplingInterval">
            <summary>
            Sampling interval to use
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemListRequestApiModel">
            <summary>
            Request list of published items
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemListRequestApiModel.ContinuationToken">
            <summary>
            Continuation token or null to start
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemListResponseApiModel">
            <summary>
            List of published nodes
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemListResponseApiModel.Items">
            <summary>
            Monitored items
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishedItemListResponseApiModel.ContinuationToken">
            <summary>
            Continuation or null if final
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStartRequestApiModel">
            <summary>
            Publish request
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStartRequestApiModel.Item">
            <summary>
            Item to publish
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStartRequestApiModel.Header">
            <summary>
            Optional request header
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStartResponseApiModel">
            <summary>
            Result of publish request
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStartResponseApiModel.ErrorInfo">
            <summary>
            Service result in case of error
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStopRequestApiModel">
            <summary>
            Unpublish request
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStopRequestApiModel.NodeId">
            <summary>
            Node of published item to unpublish
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStopRequestApiModel.Header">
            <summary>
            Optional request header
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStopResponseApiModel">
            <summary>
            Result of publish stop request
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.PublishStopResponseApiModel.ErrorInfo">
            <summary>
            Service result in case of error
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.RequestHeaderApiModel">
            <summary>
            Request header model
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.RequestHeaderApiModel.Elevation">
            <summary>
            Optional User elevation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.RequestHeaderApiModel.Locales">
            <summary>
            Optional list of locales in preference order.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.RequestHeaderApiModel.Diagnostics">
            <summary>
            Optional diagnostics configuration
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.SecurityMode">
            <summary>
            Security mode of endpoint
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.SecurityMode.Best">
            <summary>
            Best
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.SecurityMode.Sign">
            <summary>
            Sign
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.SecurityMode.SignAndEncrypt">
            <summary>
            Sign and Encrypt
            </summary>
        </member>
        <member name="F:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.SecurityMode.None">
            <summary>
            No security
            </summary>
        </member>
        <member name="T:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.ServiceResultApiModel">
            <summary>
            Service result
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.ServiceResultApiModel.StatusCode">
            <summary>
            Error code - if null operation succeeded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.ServiceResultApiModel.ErrorMessage">
            <summary>
            Error message in case of error or null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.IIoT.OpcUa.Api.Publisher.Models.ServiceResultApiModel.Diagnostics">
            <summary>
            Additional diagnostics information
            </summary>
        </member>
    </members>
</doc>
