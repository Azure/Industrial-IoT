{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "Opc-History-Service",
    "description": "Azure Industrial IoT OPC UA Historic Access Service"
  },
  "basePath": "/history",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/v2/delete/{endpointId}/values/pick": {
      "post": {
        "tags": [
          "Delete"
        ],
        "summary": "Delete value history at specified times",
        "description": "Delete value history using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryDeleteValuesAtTimes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history update request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[DeleteValuesAtTimesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/delete/{endpointId}/values": {
      "post": {
        "tags": [
          "Delete"
        ],
        "summary": "Delete historic values",
        "description": "Delete historic values using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryDeleteValues",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history update request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[DeleteValuesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/delete/{endpointId}/values/modified": {
      "post": {
        "tags": [
          "Delete"
        ],
        "summary": "Delete historic values",
        "description": "Delete historic values using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryDeleteModifiedValues",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history update request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[DeleteModifiedValuesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/delete/{endpointId}/events": {
      "post": {
        "tags": [
          "Delete"
        ],
        "summary": "Delete historic events",
        "description": "Delete historic events using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryDeleteEvents",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history update request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[DeleteEventsDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/history/read/{endpointId}": {
      "post": {
        "tags": [
          "History"
        ],
        "summary": "Read history using json details",
        "description": "Read node history if available using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadRaw",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadRequestApiModel[JToken]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadResponseApiModel[JToken]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/history/read/{endpointId}/next": {
      "post": {
        "tags": [
          "History"
        ],
        "summary": "Read next batch of history as json",
        "description": "Read next batch of node history values using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadRawNext",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read next request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadNextRequestApiModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadNextResponseApiModel[JToken]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/history/update/{endpointId}": {
      "post": {
        "tags": [
          "History"
        ],
        "summary": "Update node history using raw json",
        "description": "Update node history using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryUpdateRaw",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history update request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[JToken]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/insert/{endpointId}/values": {
      "post": {
        "tags": [
          "Insert"
        ],
        "summary": "Insert historic values",
        "description": "Insert historic values using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryInsertValues",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history insert request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[InsertValuesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/insert/{endpointId}/events": {
      "post": {
        "tags": [
          "Insert"
        ],
        "summary": "Insert historic events",
        "description": "Insert historic events using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryInsertEvents",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history insert request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[InsertEventsDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/read/{endpointId}/events": {
      "post": {
        "tags": [
          "Read"
        ],
        "summary": "Read historic events",
        "description": "Read historic events of a node if available using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadEvents",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadRequestApiModel[ReadEventsDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadResponseApiModel[HistoricEventApiModel[]]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/read/{endpointId}/events/next": {
      "post": {
        "tags": [
          "Read"
        ],
        "summary": "Read next batch of historic events",
        "description": "Read next batch of historic events of a node using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadEventsNext",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read next request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadNextRequestApiModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadNextResponseApiModel[HistoricEventApiModel[]]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/read/{endpointId}/values": {
      "post": {
        "tags": [
          "Read"
        ],
        "summary": "Read historic processed values at specified times",
        "description": "Read processed history values of a node if available using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadValues",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadRequestApiModel[ReadValuesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadResponseApiModel[HistoricValueApiModel[]]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/read/{endpointId}/values/pick": {
      "post": {
        "tags": [
          "Read"
        ],
        "summary": "Read historic values at specified times",
        "description": "Read historic values of a node if available using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadValuesAtTimes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadRequestApiModel[ReadValuesAtTimesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadResponseApiModel[HistoricValueApiModel[]]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/read/{endpointId}/values/processed": {
      "post": {
        "tags": [
          "Read"
        ],
        "summary": "Read historic processed values at specified times",
        "description": "Read processed history values of a node if available using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadProcessedValues",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadRequestApiModel[ReadProcessedValuesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadResponseApiModel[HistoricValueApiModel[]]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/read/{endpointId}/values/modified": {
      "post": {
        "tags": [
          "Read"
        ],
        "summary": "Read historic modified values at specified times",
        "description": "Read processed history values of a node if available using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadModifiedValues",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadRequestApiModel[ReadModifiedValuesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadResponseApiModel[HistoricValueApiModel[]]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/read/{endpointId}/values/next": {
      "post": {
        "tags": [
          "Read"
        ],
        "summary": "Read next batch of historic values",
        "description": "Read next batch of historic values of a node using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReadValueNext",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history read next request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryReadNextRequestApiModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryReadNextResponseApiModel[HistoricValueApiModel[]]"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/replace/{endpointId}/values": {
      "post": {
        "tags": [
          "Replace"
        ],
        "summary": "Replace historic values",
        "description": "Replace historic values using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReplaceValues",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history replace request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[ReplaceValuesDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/replace/{endpointId}/events": {
      "post": {
        "tags": [
          "Replace"
        ],
        "summary": "Replace historic events",
        "description": "Replace historic events using historic access.\r\nThe endpoint must be activated and connected and the module client\r\nand server must trust each other.",
        "operationId": "HistoryReplaceEvents",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the activated endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The history replace request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryUpdateRequestApiModel[ReplaceEventsDetailsApiModel]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HistoryUpdateResponseApiModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication"
            ]
          }
        ]
      }
    },
    "/v2/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Return the service status in the form of the service status\r\napi model.",
        "operationId": "GetStatus",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StatusResponseApiModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "HistoryUpdateRequestApiModel[DeleteValuesAtTimesDetailsApiModel]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/DeleteValuesAtTimesDetailsApiModel",
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address."
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "DeleteValuesAtTimesDetailsApiModel": {
      "description": "Deletes data at times",
      "required": [
        "reqTimes"
      ],
      "type": "object",
      "properties": {
        "reqTimes": {
          "description": "The timestamps to delete",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        }
      }
    },
    "RequestHeaderApiModel": {
      "description": "Request header model",
      "type": "object",
      "properties": {
        "elevation": {
          "$ref": "#/definitions/CredentialApiModel",
          "description": "Optional User elevation"
        },
        "locales": {
          "description": "Optional list of locales in preference order.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "diagnostics": {
          "$ref": "#/definitions/DiagnosticsApiModel",
          "description": "Optional diagnostics configuration"
        }
      }
    },
    "CredentialApiModel": {
      "description": "Credential model",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of credential",
          "default": "None",
          "enum": [
            "None",
            "UserName",
            "X509Certificate",
            "JwtToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CredentialType",
            "modelAsString": false
          }
        },
        "value": {
          "description": "Value to pass to server",
          "type": "object"
        }
      }
    },
    "DiagnosticsApiModel": {
      "description": "Diagnostics configuration",
      "type": "object",
      "properties": {
        "level": {
          "description": "Requested level of response diagnostics.\r\n(default: Status)",
          "enum": [
            "None",
            "Status",
            "Operations",
            "Diagnostics",
            "Verbose"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DiagnosticsLevel",
            "modelAsString": false
          }
        },
        "auditId": {
          "description": "Client audit log entry.\r\n(default: client generated)",
          "type": "string"
        },
        "timeStamp": {
          "format": "date-time",
          "description": "Timestamp of request.\r\n(default: client generated)",
          "type": "string"
        }
      }
    },
    "HistoryUpdateResponseApiModel": {
      "description": "History update results",
      "type": "object",
      "properties": {
        "results": {
          "description": "List of results from the update operation",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceResultApiModel"
          }
        },
        "errorInfo": {
          "$ref": "#/definitions/ServiceResultApiModel",
          "description": "Service result in case of service call error"
        }
      }
    },
    "ServiceResultApiModel": {
      "description": "Service result",
      "type": "object",
      "properties": {
        "statusCode": {
          "format": "int32",
          "description": "Error code - if null operation succeeded.",
          "type": "integer"
        },
        "errorMessage": {
          "description": "Error message in case of error or null.",
          "type": "string"
        },
        "diagnostics": {
          "description": "Additional diagnostics information",
          "type": "object"
        }
      }
    },
    "HistoryUpdateRequestApiModel[DeleteValuesDetailsApiModel]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/DeleteValuesDetailsApiModel",
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address."
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "DeleteValuesDetailsApiModel": {
      "description": "Delete raw modified data",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time to delete until",
          "type": "string"
        }
      }
    },
    "HistoryUpdateRequestApiModel[DeleteModifiedValuesDetailsApiModel]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/DeleteModifiedValuesDetailsApiModel",
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address."
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "DeleteModifiedValuesDetailsApiModel": {
      "description": "Delete raw modified data",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time to delete until",
          "type": "string"
        }
      }
    },
    "HistoryUpdateRequestApiModel[DeleteEventsDetailsApiModel]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/DeleteEventsDetailsApiModel",
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address."
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "DeleteEventsDetailsApiModel": {
      "description": "The events to delete",
      "required": [
        "eventIds"
      ],
      "type": "object",
      "properties": {
        "eventIds": {
          "description": "Events to delete",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "byte",
            "type": "string"
          }
        }
      }
    },
    "HistoryReadRequestApiModel[JToken]": {
      "description": "Request node history read",
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to read from (mandatory)",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "description": "The HistoryReadDetailsType extension object\r\nencoded in json and containing the tunneled\r\nHistorian reader request.",
          "type": "object"
        },
        "indexRange": {
          "description": "Index range to read, e.g. 1:2,0:1 for 2 slices\r\nout of a matrix or 0:1 for the first item in\r\nan array, string or bytestring.\r\nSee 7.22 of part 4: NumericRange.",
          "type": "string"
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "HistoryReadResponseApiModel[JToken]": {
      "description": "History read results",
      "type": "object",
      "properties": {
        "history": {
          "description": "History as json encoded extension object",
          "type": "object"
        },
        "continuationToken": {
          "description": "Continuation token if more results pending.",
          "type": "string"
        },
        "errorInfo": {
          "$ref": "#/definitions/ServiceResultApiModel",
          "description": "Service result in case of error"
        }
      }
    },
    "HistoryReadNextRequestApiModel": {
      "description": "Request node history read continuation",
      "required": [
        "continuationToken"
      ],
      "type": "object",
      "properties": {
        "continuationToken": {
          "description": "Continuation token to continue reading more\r\nresults.",
          "type": "string"
        },
        "abort": {
          "description": "Abort reading after this read",
          "default": false,
          "type": "boolean"
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "HistoryReadNextResponseApiModel[JToken]": {
      "description": "History read continuation result",
      "type": "object",
      "properties": {
        "history": {
          "description": "History as json encoded extension object",
          "type": "object"
        },
        "continuationToken": {
          "description": "Continuation token if more results pending.",
          "type": "string"
        },
        "errorInfo": {
          "$ref": "#/definitions/ServiceResultApiModel",
          "description": "Service result in case of error"
        }
      }
    },
    "HistoryUpdateRequestApiModel[JToken]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address.",
          "type": "object"
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "HistoryUpdateRequestApiModel[InsertValuesDetailsApiModel]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/InsertValuesDetailsApiModel",
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address."
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "InsertValuesDetailsApiModel": {
      "description": "Insert historic data",
      "required": [
        "values"
      ],
      "type": "object",
      "properties": {
        "values": {
          "description": "Values to insert",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricValueApiModel"
          }
        }
      }
    },
    "HistoricValueApiModel": {
      "description": "Historic data",
      "type": "object",
      "properties": {
        "value": {
          "description": ",\r\n            The value of data value.",
          "type": "object"
        },
        "statusCode": {
          "format": "int32",
          "description": "The status code associated with the value.",
          "type": "integer"
        },
        "sourceTimestamp": {
          "format": "date-time",
          "description": "The source timestamp associated with the value.",
          "type": "string"
        },
        "sourcePicoseconds": {
          "format": "int32",
          "description": "Additional resolution for the source timestamp.",
          "type": "integer"
        },
        "serverTimestamp": {
          "format": "date-time",
          "description": "The server timestamp associated with the value.",
          "type": "string"
        },
        "serverPicoseconds": {
          "format": "int32",
          "description": "Additional resolution for the server timestamp.",
          "type": "integer"
        },
        "modificationInfo": {
          "$ref": "#/definitions/ModificationInfoApiModel",
          "description": "modification information when reading modifications."
        }
      }
    },
    "ModificationInfoApiModel": {
      "description": "Modification information",
      "type": "object",
      "properties": {
        "modificationTime": {
          "format": "date-time",
          "description": "Modification time",
          "type": "string"
        },
        "updateType": {
          "description": "Operation",
          "enum": [
            "Insert",
            "Replace",
            "Update",
            "Delete"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HistoryUpdateOperation",
            "modelAsString": false
          }
        },
        "userName": {
          "description": "User who made the change",
          "type": "string"
        }
      }
    },
    "HistoryUpdateRequestApiModel[InsertEventsDetailsApiModel]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/InsertEventsDetailsApiModel",
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address."
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "InsertEventsDetailsApiModel": {
      "description": "Insert historic events",
      "required": [
        "events"
      ],
      "type": "object",
      "properties": {
        "filter": {
          "description": "The filter to use to select the events",
          "type": "object"
        },
        "events": {
          "description": "The new events to insert",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricEventApiModel"
          }
        }
      }
    },
    "HistoricEventApiModel": {
      "description": "Historic event",
      "type": "object",
      "properties": {
        "eventFields": {
          "description": "The selected fields of the event",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "HistoryReadRequestApiModel[ReadEventsDetailsApiModel]": {
      "description": "Request node history read",
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to read from (mandatory)",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/ReadEventsDetailsApiModel",
          "description": "The HistoryReadDetailsType extension object\r\nencoded in json and containing the tunneled\r\nHistorian reader request."
        },
        "indexRange": {
          "description": "Index range to read, e.g. 1:2,0:1 for 2 slices\r\nout of a matrix or 0:1 for the first item in\r\nan array, string or bytestring.\r\nSee 7.22 of part 4: NumericRange.",
          "type": "string"
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "ReadEventsDetailsApiModel": {
      "description": "Read event data",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time to read from",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time to read to",
          "type": "string"
        },
        "numEvents": {
          "format": "int32",
          "description": "Number of events to read",
          "type": "integer"
        },
        "filter": {
          "description": "The filter to use to select the event fields",
          "type": "object"
        }
      }
    },
    "HistoryReadResponseApiModel[HistoricEventApiModel[]]": {
      "description": "History read results",
      "type": "object",
      "properties": {
        "history": {
          "description": "History as json encoded extension object",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricEventApiModel"
          }
        },
        "continuationToken": {
          "description": "Continuation token if more results pending.",
          "type": "string"
        },
        "errorInfo": {
          "$ref": "#/definitions/ServiceResultApiModel",
          "description": "Service result in case of error"
        }
      }
    },
    "HistoryReadNextResponseApiModel[HistoricEventApiModel[]]": {
      "description": "History read continuation result",
      "type": "object",
      "properties": {
        "history": {
          "description": "History as json encoded extension object",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricEventApiModel"
          }
        },
        "continuationToken": {
          "description": "Continuation token if more results pending.",
          "type": "string"
        },
        "errorInfo": {
          "$ref": "#/definitions/ServiceResultApiModel",
          "description": "Service result in case of error"
        }
      }
    },
    "HistoryReadRequestApiModel[ReadValuesDetailsApiModel]": {
      "description": "Request node history read",
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to read from (mandatory)",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/ReadValuesDetailsApiModel",
          "description": "The HistoryReadDetailsType extension object\r\nencoded in json and containing the tunneled\r\nHistorian reader request."
        },
        "indexRange": {
          "description": "Index range to read, e.g. 1:2,0:1 for 2 slices\r\nout of a matrix or 0:1 for the first item in\r\nan array, string or bytestring.\r\nSee 7.22 of part 4: NumericRange.",
          "type": "string"
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "ReadValuesDetailsApiModel": {
      "description": "Read historic values",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Beginning of period to read. Set to null\r\nif no specific start time is specified.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End of period to read. Set to null if no\r\nspecific end time is specified.",
          "type": "string"
        },
        "numValues": {
          "format": "int32",
          "description": "The maximum number of values returned for any Node\r\nover the time range. If only one time is specified,\r\nthe time range shall extend to return this number\r\nof values. 0 or null indicates that there is no\r\nmaximum.",
          "type": "integer"
        },
        "returnBounds": {
          "description": "Whether to return the bounding values or not.",
          "type": "boolean"
        }
      }
    },
    "HistoryReadResponseApiModel[HistoricValueApiModel[]]": {
      "description": "History read results",
      "type": "object",
      "properties": {
        "history": {
          "description": "History as json encoded extension object",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricValueApiModel"
          }
        },
        "continuationToken": {
          "description": "Continuation token if more results pending.",
          "type": "string"
        },
        "errorInfo": {
          "$ref": "#/definitions/ServiceResultApiModel",
          "description": "Service result in case of error"
        }
      }
    },
    "HistoryReadRequestApiModel[ReadValuesAtTimesDetailsApiModel]": {
      "description": "Request node history read",
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to read from (mandatory)",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/ReadValuesAtTimesDetailsApiModel",
          "description": "The HistoryReadDetailsType extension object\r\nencoded in json and containing the tunneled\r\nHistorian reader request."
        },
        "indexRange": {
          "description": "Index range to read, e.g. 1:2,0:1 for 2 slices\r\nout of a matrix or 0:1 for the first item in\r\nan array, string or bytestring.\r\nSee 7.22 of part 4: NumericRange.",
          "type": "string"
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "ReadValuesAtTimesDetailsApiModel": {
      "description": "Read data at specified times",
      "required": [
        "reqTimes"
      ],
      "type": "object",
      "properties": {
        "reqTimes": {
          "description": "Requested datums",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "useSimpleBounds": {
          "description": "Whether to use simple bounds",
          "type": "boolean"
        }
      }
    },
    "HistoryReadRequestApiModel[ReadProcessedValuesDetailsApiModel]": {
      "description": "Request node history read",
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to read from (mandatory)",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/ReadProcessedValuesDetailsApiModel",
          "description": "The HistoryReadDetailsType extension object\r\nencoded in json and containing the tunneled\r\nHistorian reader request."
        },
        "indexRange": {
          "description": "Index range to read, e.g. 1:2,0:1 for 2 slices\r\nout of a matrix or 0:1 for the first item in\r\nan array, string or bytestring.\r\nSee 7.22 of part 4: NumericRange.",
          "type": "string"
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "ReadProcessedValuesDetailsApiModel": {
      "description": "Read processed historic data",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time to read from.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time to read until",
          "type": "string"
        },
        "processingInterval": {
          "format": "double",
          "description": "Interval to process",
          "type": "number"
        },
        "aggregateTypeId": {
          "description": "The aggregate type node ids",
          "type": "string"
        },
        "aggregateConfiguration": {
          "$ref": "#/definitions/AggregateConfigurationApiModel",
          "description": "A configuration for the aggregate"
        }
      }
    },
    "AggregateConfigurationApiModel": {
      "description": "Aggregate configuration",
      "type": "object",
      "properties": {
        "useServerCapabilitiesDefaults": {
          "description": "Whether to use the default server caps",
          "type": "boolean"
        },
        "treatUncertainAsBad": {
          "description": "Whether to treat uncertain as bad",
          "type": "boolean"
        },
        "percentDataBad": {
          "format": "int32",
          "description": "Percent of data that is bad",
          "type": "integer"
        },
        "percentDataGood": {
          "format": "int32",
          "description": "Percent of data that is good",
          "type": "integer"
        },
        "useSlopedExtrapolation": {
          "description": "Whether to use sloped extrapolation.",
          "type": "boolean"
        }
      }
    },
    "HistoryReadRequestApiModel[ReadModifiedValuesDetailsApiModel]": {
      "description": "Request node history read",
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to read from (mandatory)",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/ReadModifiedValuesDetailsApiModel",
          "description": "The HistoryReadDetailsType extension object\r\nencoded in json and containing the tunneled\r\nHistorian reader request."
        },
        "indexRange": {
          "description": "Index range to read, e.g. 1:2,0:1 for 2 slices\r\nout of a matrix or 0:1 for the first item in\r\nan array, string or bytestring.\r\nSee 7.22 of part 4: NumericRange.",
          "type": "string"
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "ReadModifiedValuesDetailsApiModel": {
      "description": "Read modified data",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "The start time to read from",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time to read to",
          "type": "string"
        },
        "numValues": {
          "format": "int32",
          "description": "The number of values to read",
          "type": "integer"
        }
      }
    },
    "HistoryReadNextResponseApiModel[HistoricValueApiModel[]]": {
      "description": "History read continuation result",
      "type": "object",
      "properties": {
        "history": {
          "description": "History as json encoded extension object",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricValueApiModel"
          }
        },
        "continuationToken": {
          "description": "Continuation token if more results pending.",
          "type": "string"
        },
        "errorInfo": {
          "$ref": "#/definitions/ServiceResultApiModel",
          "description": "Service result in case of error"
        }
      }
    },
    "HistoryUpdateRequestApiModel[ReplaceValuesDetailsApiModel]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/ReplaceValuesDetailsApiModel",
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address."
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "ReplaceValuesDetailsApiModel": {
      "description": "Replace historic data",
      "required": [
        "values"
      ],
      "type": "object",
      "properties": {
        "values": {
          "description": "Values to replace",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricValueApiModel"
          }
        }
      }
    },
    "HistoryUpdateRequestApiModel[ReplaceEventsDetailsApiModel]": {
      "description": "Request node history update",
      "required": [
        "details"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Node to update",
          "type": "string"
        },
        "browsePath": {
          "description": "An optional path from NodeId instance to\r\nthe actual node.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "$ref": "#/definitions/ReplaceEventsDetailsApiModel",
          "description": "The HistoryUpdateDetailsType extension object\r\nencoded as json Variant and containing the tunneled\r\nupdate request for the Historian server. The value\r\nis updated at edge using above node address."
        },
        "header": {
          "$ref": "#/definitions/RequestHeaderApiModel",
          "description": "Optional request header"
        }
      }
    },
    "ReplaceEventsDetailsApiModel": {
      "description": "Replace historic events",
      "required": [
        "events"
      ],
      "type": "object",
      "properties": {
        "filter": {
          "description": "The filter to use to select the events",
          "type": "object"
        },
        "events": {
          "description": "The events to replace",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricEventApiModel"
          }
        }
      }
    },
    "StatusResponseApiModel": {
      "description": "Status response model",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of this service",
          "type": "string"
        },
        "status": {
          "description": "Operational status",
          "type": "string"
        },
        "currentTime": {
          "description": "Current time",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Start time of service",
          "type": "string",
          "readOnly": true
        },
        "upTime": {
          "format": "int64",
          "description": "Up time of service",
          "type": "integer",
          "readOnly": true
        },
        "uid": {
          "description": "Value generated at bootstrap by each instance of the service and\r\nused to correlate logs coming from the same instance. The value\r\nchanges every time the service starts.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "A property bag with details about the service",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "dependencies": {
          "description": "A property bag with details about the internal dependencies",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "$metadata": {
          "description": "Optional meta data.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/6e660ce4-d51a-4585-80c6-58035e212354/oauth2/authorize",
      "scopes": {
        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication": "Access http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication operations"
      },
      "type": "oauth2",
      "description": "Implicit oauth2 token flow."
    }
  },
  "tags": [
    {
      "name": "Delete",
      "description": "Services to delete history"
    },
    {
      "name": "History",
      "description": "History raw access services"
    },
    {
      "name": "Insert",
      "description": "History insert services"
    },
    {
      "name": "Read",
      "description": "Historic access read services"
    },
    {
      "name": "Replace",
      "description": "History replace services"
    },
    {
      "name": "Status",
      "description": "Status checks"
    }
  ]
}