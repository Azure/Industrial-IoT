name: $(Date:yyyyMMdd)$(Rev:rr)

trigger: none
pr: none

variables:
- template: steps/variables.yml

jobs:
- job: build
  condition: ne(variables['UseExisting'], true)
  displayName: 'Build IAI and TestEventProcessor'
  pool:
    name: '$(AgentPool)'
  steps:
  - template: steps/build.yml
    
- job: deployplatform
  condition: eq(dependencies.build.result, 'Succeeded')
  dependsOn: build
  displayName: 'Deploy Platform'
  pool:
    name: '$(AgentPool)'
  steps:
  - template: steps/deployplatform.yml

- job: deploytestresources
  condition: eq(dependencies.deployplatform.result, 'Succeeded')
  dependsOn: deployplatform
  displayName: 'Deploy Test Resources'
  pool:
    name: '$(AgentPool)'
  steps:
  - template: steps/deploytestresources.yml

- job: runtests
  displayName: 'Run End 2 End Tests'
  dependsOn: deploytestresources
  condition: and(or(eq(dependencies.deploytestresources.result, 'Succeeded'), eq(dependencies.deploytestresources.result, 'Skipped')), or(eq(dependencies.deployplatform.result, 'Succeeded'), eq(dependencies.deployplatform.result, 'Skipped')))
  pool:
    name: '$(AgentPool)'
  steps:
  - template: steps/runtests.yml

- job: cleanup
  displayName: Cleanup
  dependsOn: runtests
  condition: and(not(canceled()), eq(variables['Cleanup'], true))
  pool:
    name: '$(AgentPool)'
  steps:
  - template: steps/cleanup.yml
  
