{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": 
  {  
    "networkResourceGroupName": 
    {
      "type": "string",
      "metadata": { "description": "Name of the resource group that the vnet is part of" }
    },
    "networkName": 
    {
      "type": "string",
      "metadata": { "description": "Name of the virtual network IIOT asset is deployed to" }
    },
    "subnetNames":
    {
      "type": "array",
      "defaultValue": ["3-L2-OT-AreaSupervisoryControl"],
      "metadata": { "description": "Name of the subnet IIOT asset is deployed to" }
    },
    "machineNames": 
    {
      "type": "array",
      "defaultValue": ["L2-OPC-UA-server"],
      "metadata": { "description": "Name of the IIOT asset machine name" }
    },
    "machineAdminName": 
    {
      "type": "string",
      "defaultValue": "otadmin",
      "metadata": { "description": "Name of the IIOT asset administrator" }
    },
    "machineAdminSshPublicKey": 
    {
      "type": "string",
      "metadata": { "description": "SSH public key provided as a string to connect to the IIOT asset." }
    },
    "vmSize": 
    {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": { "description": "Size of the Azure virtual machine" }
    }
  },
  "variables": 
  {
    "location": "[resourceGroup().location]"
  },
  "resources": 
  [
    {
      "name": "[concat(parameters('machineNames')[copyIndex()],'-nic-','0')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2018-11-01",
      "dependsOn": [ ],
      "tags": { "displayName": "[concat(parameters('machineNames')[copyIndex()],'-nic-','0')]" },
      "properties": 
      {
        "enableAcceleratedNetworking": false,
        "ipConfigurations": 
	      [
          {
            "name": "[concat('ipconfig', copyIndex())]",
            "properties": 
	          {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[resourceId(subscription().subscriptionId, parameters('networkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('networkName'), parameters('subnetNames')[copyIndex()])]" }
            }
          }
        ]
      },
      "copy": {
                "name": "nicCopy",
                "count": "[length(parameters('machineNames'))]"
            }
    },
    {
      "name": "[parameters('machineNames')[copyIndex()]]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": 
      [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('machineNames')[copyIndex()],'-nic-','0'))]"
      ],
      "tags": 
      {
        "displayName": "[parameters('machineNames')[copyIndex()]]"
      },
      "properties": 
      {
        "hardwareProfile":
        {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile":
        {
          "computerName": "[parameters('machineNames')[copyIndex()]]",
          "adminUsername": "[parameters('machineAdminName')]",
          "customData": "[base64(concat('#cloud-config\n\napt:\n  preserve_sources_list: true\n  sources:\n    msft.list:\n      source: \"deb https://packages.microsoft.com/ubuntu/18.04/multiarch/prod bionic main\"\n      key: |\n        -----BEGIN PGP PUBLIC KEY BLOCK-----\n        Version: GnuPG v1.4.7 (GNU/Linux)\n\n        mQENBFYxWIwBCADAKoZhZlJxGNGWzqV+1OG1xiQeoowKhssGAKvd+buXCGISZJwT\n        LXZqIcIiLP7pqdcZWtE9bSc7yBY2MalDp9Liu0KekywQ6VVX1T72NPf5Ev6x6DLV\n        7aVWsCzUAF+eb7DC9fPuFLEdxmOEYoPjzrQ7cCnSV4JQxAqhU4T6OjbvRazGl3ag\n        OeizPXmRljMtUUttHQZnRhtlzkmwIrUivbfFPD+fEoHJ1+uIdfOzZX8/oKHKLe2j\n        H632kvsNzJFlROVvGLYAk2WRcLu+RjjggixhwiB+Mu/A8Tf4V6b+YppS44q8EvVr\n        M+QvY7LNSOffSO6Slsy9oisGTdfE39nC7pVRABEBAAG0N01pY3Jvc29mdCAoUmVs\n        ZWFzZSBzaWduaW5nKSA8Z3Bnc2VjdXJpdHlAbWljcm9zb2Z0LmNvbT6JATUEEwEC\n        AB8FAlYxWIwCGwMGCwkIBwMCBBUCCAMDFgIBAh4BAheAAAoJEOs+lK2+EinPGpsH\n        /32vKy29Hg51H9dfFJMx0/a/F+5vKeCeVqimvyTM04C+XENNuSbYZ3eRPHGHFLqe\n        MNGxsfb7C7ZxEeW7J/vSzRgHxm7ZvESisUYRFq2sgkJ+HFERNrqfci45bdhmrUsy\n        7SWw9ybxdFOkuQoyKD3tBmiGfONQMlBaOMWdAsic965rvJsd5zYaZZFI1UwTkFXV\n        KJt3bp3Ngn1vEYXwijGTa+FXz6GLHueJwF0I7ug34DgUkAFvAs8Hacr2DRYxL5RJ\n        XdNgj4Jd2/g6T9InmWT0hASljur+dJnzNiNCkbn9KbX7J/qK1IbR8y560yRmFsU+\n        NdCFTW7wY0Fb1fWJ+/KTsC4=\n        =J6gs\n        -----END PGP PUBLIC KEY BLOCK----- \npackages:\n  - moby-engine\n  - moby-cli\nruncmd:\n  - |\n      set -x\n      (\n        docker run -p 54845:54845 -p 54855:54855 -p 1880:1880 --name opcsimulator onderyildirim/opcsimulator:0.1.50.0-amd64\n      ) &\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [{
                "path": "[concat('/home/', parameters('machineAdminName'), '/.ssh/authorized_keys')]",
                "keyData": "[parameters('machineAdminSshPublicKey')]"
              }]
            }
          }
        },
        "storageProfile": 
        {
          "imageReference": 
          {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": 
          {
            "name": "[concat(parameters('machineNames')[copyIndex()],'-disk-','0')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }          
        },
        "networkProfile": 
        {
          "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('machineNames')[copyIndex()],'-nic-','0'))]" } ]
        }
      },
      "copy": {
                "name": "vmCopy",
                "count": "[length(parameters('machineNames'))]"
            }
    }
  ],
  "outputs": {
    "vms": {
      "type": "array",
      "copy": {
        "count": "[length(parameters('machineNames'))]",
        "input": {
          "iiotAssetMachineName": "[reference(parameters('machineNames')[copyIndex()]).osProfile.computerName]",
          "iiotAssetMachinePrivateIPAddress": "[reference(concat(parameters('machineNames')[copyIndex()],'-nic-','0')).ipConfigurations[0].properties.privateIPAddress]",
          "iiotAssetAdminUsername": "[reference(parameters('machineNames')[copyIndex()]).osProfile.adminUsername]"
        }
      }
    }
  }
}
  