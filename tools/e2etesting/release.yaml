# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:rr)

pool:
  name: 'Azure-IoT-Manufacturing'

variables:
- name: 'IAIStorageAccountName'
  value: 'azureiiot'
- name: 'IAIStorageAccountContainerName'
  value: 'binaries'
- name: 'ResourceGroupName'
  value: 'deployment$(Build.BuildNumber)'
- name: 'ApplicationName'
  value: 'deployment$(Build.BuildNumber)'

steps:
- task: PowerShell@2
  displayName: "Download IAI binaries"
  pwsh: true
  inputs:
    targetType: 'filePath'
    filePath: $(System.DefaultWorkingDirectory)\tools\e2etesting\DownloadIAIBinaries.ps1
    workingDirectory: 
    arguments: > # Use this to avoid newline characters in multiline string
      -IAIStorageAccountName "$(IAIStorageAccountName)"
      -IAIStorageAccountContainerName "$(IAIStorageAccountContainerName)"
      -IAIVersion "$(IAIVersion)"

- task: AzureKeyVault@1
  displayName: "Retrieve KeyVault secrets"
  inputs:
    azureSubscription: 'IOT-OPC-WALLS-MSI'
    KeyVaultName: 'automatedtesting'
    SecretsFilter: '*'

- task: AzurePowerShell@4
  displayName: "Replace parameters in appSettings.json (for IAI)"
  inputs:
    azureSubscription: 'IOT-OPC-WALLS-MSI'
    azurePowerShellVersion: 'latestVersion'
    scriptType: filePath
    scriptPath: '$(System.DefaultWorkingDirectory)\tools\e2etesting\ReplaceVariablesInAppSettings.ps1'
    scriptArguments: > # Use this to avoid newline characters in multiline string
      -ClientId "$(IAIClientId)"
      -ClientSecret "$(IAIClientSecret)"
      -ApplicationName "$(ApplicationName)"
      -AppSettingsFilename "$(System.DefaultWorkingDirectory)\tools\e2etesting\appsettings.json"
      -ResourceGroupName "$(ResourceGroupName)"
      -Region "$(Region)"

- task: CmdLine@2
  inputs:
    script: '$(IAILocalFilename)'
    workingDirectory: '$(System.DefaultWorkingDirectory)\tools\e2etesting\'


