#
# Run compliance tooling
#
jobs:
- job: sdl
  timeoutInMinutes: 360
  displayName: SDL Tasks
  pool:
    vmImage: 'windows-2022'
    demands:
    - msbuild
    - npm
  variables:
    Codeql.Enabled: true
    runCodesignValidationInjection: false
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  steps:
  - checkout: self
    clean: true
    persistCredentials: true
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: sdk
      version: 8.0.x
      includePreviewVersions: false
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: PowerShell@2
    displayName: Versioning
    inputs:
      targetType: filePath
      filePath: ./tools/scripts/set-version.ps1
  - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@3
    displayName: 'Credential Scanner'
    inputs:
      toolMajorVersion: V2
      outputFormat: pre
  - task: DotNetCoreCLI@2
    displayName: Build Release
    inputs:
      command: build 
      projects: 'Industrial-IoT.sln'
      # note: /p:SDL=true is used to enable build analyzers
      arguments: '--configuration Release /p:SDL=true'
  - task: RoslynAnalyzers@3
    displayName: 'Run Roslyn Analyzers'
    inputs:
      userProvideBuildInfo: 'auto'
      setupCommandlinePicker: 'vs2022'
    env:
      system_accesstoken: $(System.AccessToken)
    continueOnError: true
  - task: ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
  - task: 'msospo.ospo-extension.8d7f9abb-6896-461d-9e25-4f74ed65ddb2.notice@0'
    displayName: Generate 3rd Party Notices
    inputs:
      outputformat: 'text'
      outputfile: thirdpartynotices.txt
    continueOnError: true
#  - task: Armory@2
#    displayName: 'Run ARMory'
#    inputs:
#      toolVersion: Latest
#      targetFiles: 'f|**\*.json;-|.gdn\**;'
#      targetDirectory: '$(Build.SourcesDirectory)'
#    continueOnError: true
  - task: BinSkim@4
    displayName: 'BinSkim'
    inputs:
      InputType: 'Basic'
      Function: 'analyze'
      TargetPattern: 'guardianGlob'
      AnalyzeTargetGlob: '**/Azure.IIoT.*.dll;**/Azure.IIoT.*.exe'
    continueOnError: true
  - task: PoliCheck@2
    displayName: PoliCheck
    inputs:
      targetType: F
      SOMEnabled: false
      uploadToSOM: true
      workspaceid: f26cefbe-7e7b-436a-8aad-ded8bb5d03e1
    continueOnError: true
  - task: SdtReport@2
    displayName: 'Create Security Analysis Report'
    inputs:
      GdnExportAllTools: false
      GdnExportGdnToolBinSkim: true
      GdnExportGdnToolCredScan: true
      GdnExportGdnToolPoliCheck: false
      GdnExportGdnToolFortifySca: false
      GdnExportGdnToolRoslynAnalyzers: true
    condition: succeededOrFailed()
  - task: PublishSecurityAnalysisLogs@3
    displayName: 'Publish Security Analysis Logs'
    continueOnError: true
    condition: succeededOrFailed()
  - task: PowerShell@2
    displayName: 'Write TSA guardian configuration'
    inputs:
      targetType: 'inline'
      script: |
        $branch = $env:BUILD_SOURCEBRANCHNAME
        if ($branch -ne "main") { $branch = "develop" }
        @{
            codebaseName = "Industrial_IoT_$($branch)"
            serviceTreeId = "59eec07a-6f20-42b9-b41b-d20e0a6322da"
            instanceUrl = "https://msazure.visualstudio.com/defaultcollection"
            projectName = "One"
            areaPath = "One\IoT\Platform and Devices\IoT Devices\Industrial\Community"
            iterationPath = "One\Custom\IoT\Industrial\Backlog"
            notificationAliases = @("azureiiot@microsoft.com")
            allTools = $True
        } | ConvertTo-Json | Out-File -FilePath "$(Build.SourcesDirectory)\.gdntsa" -Force -Encoding utf8
    continueOnError: true
  - task: TSAUpload@2
    displayName: 'TSA upload'
    inputs:
      GdnPublishTsaOnboard: true
      GdnPublishTsaConfigFile: '$(Build.SourcesDirectory)\.gdntsa'
    continueOnError: true
  - task: PostAnalysis@2
    displayName: 'Post Analysis'
    inputs:
      GdnBreakAllTools: false
      GdnBreakGdnToolBinSkim: true
      GdnBreakGdnToolPoliCheck: false
      GdnBreakGdnToolCredScan: true
      GdnExportGdnToolFortifySca: false
      GdnBreakGdnToolRoslynAnalyzers: true
      # GdnBreakPolicyMinSev: Warning
    continueOnError: true
    condition: succeededOrFailed()
