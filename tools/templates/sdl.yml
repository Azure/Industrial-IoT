#
# Run compliance tooling
#
jobs:
- job: sdl
  displayName: SDL Tasks
  pool:
    vmImage: 'windows-2022'
    demands:
    - msbuild
    - npm
  variables:
    runCodesignValidationInjection: false
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  steps:
  - checkout: self
    clean: true
    persistCredentials: true
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: sdk
      version: 6.0.x
      includePreviewVersions: false
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: PowerShell@2
    displayName: Versioning
    inputs:
      targetType: filePath
      filePath: ./tools/scripts/set-version.ps1
  - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
    displayName: 'Credential Scanner'
    inputs:
      toolMajorVersion: V2
  - task: DotNetCoreCLI@2
    displayName: Build Release
    inputs:
      command: build 
      projects: 'Industrial-IoT-No-Samples.sln'
      # note: /p:SDL=true is used to enable build analyzers
      arguments: '--configuration Release /p:SDL=true'
  - task: DotNetCoreCLI@2
    displayName: 'Publish Release'
    inputs:
      command: 'publish'
      arguments: '--configuration Release'
  - task: RoslynAnalyzers@3
    displayName: 'Run Roslyn Analyzers'
    inputs:
      userProvideBuildInfo: 'auto'
    env:
      system_accesstoken: $(System.AccessToken)
    continueOnError: true
  - task: ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
  - task: 'msospo.ospo-extension.8d7f9abb-6896-461d-9e25-4f74ed65ddb2.notice@0'
    displayName: Generate 3rd Party Notices
    inputs:
      outputformat: 'text'
      outputfile: thirdpartynotices.txt
    continueOnError: true
  - task: BinSkim@3
    displayName: 'BinSkim'
    inputs:
      InputType: Basic
      AnalyzeTarget: '*.IIoT.*.dll;*.IIoT.*.exe'
    continueOnError: true
  - task: AutoApplicability@1
    displayName: 'Auto Applicability'
    inputs:
      ExternalRelease: true
      InternalRelease: true
      IsService: true
    continueOnError: true
  - task: VulnerabilityAssessment@0
    displayName: 'Run Vulnerability Assessment'
    continueOnError: true
    condition: succeededOrFailed()
  - task: PoliCheck@1
    displayName: PoliCheck
    inputs:
      targetType: F
      SOMEnabled: false
      uploadToSOM: true
      workspaceid: f26cefbe-7e7b-436a-8aad-ded8bb5d03e1
    continueOnError: true
  - task: SdtReport@1
    displayName: 'Create Security Analysis Report'
    inputs:
      BinSkim: true
      CredScan: true
      PoliCheck: true
      RoslynAnalyzers: true
    continueOnError: true
    condition: succeededOrFailed()
  - task: PostAnalysis@1
    displayName: 'Post Analysis'
    inputs:
      BinSkim: true
      PoliCheck: true
      CredScan: true
      RoslynAnalyzers: true
  - script: |
      if not "%BUILD_SOURCEBRANCHNAME%" == "main" echo ##vso[task.setvariable variable=MY_BRANCH;]develop
          if "%BUILD_SOURCEBRANCHNAME%" == "main" echo ##vso[task.setvariable variable=MY_BRANCH;]main
  - task: TSAUpload@1
    displayName: 'Upload to Stamp'
    inputs:
      tsaVersion: TsaV2
      tsaEnvironment: 'PROD'
      serviceTreeID: '59eec07a-6f20-42b9-b41b-d20e0a6322da'
      codebase: NewOrUpdate
      codeBaseName: 'Industrial_IoT_$(MY_BRANCH)'
      instanceUrlForTsaV2: MSAZURE
      projectNameMSAZURE: One
      areaPath: 'One\IoT\Platform and Devices\IoT Devices\Industrial\Community'
      iterationPath: 'One\Custom\IoT\Industrial\Backlog'
      uploadAPIScan: false
      uploadBinSkim: true
      uploadCredScan: true
      uploadFortifySCA: false
      uploadFxCop: false
      uploadModernCop: false
      uploadPoliCheck: false
      uploadPREfast: false
      uploadRoslyn: true
      uploadTSLint: false
      uploadAsync: true
    continueOnError: true
