#
# Pack nugets for consumption
#
parameters:
  sign: 'False'
jobs:
- job: nuget
  displayName: Pack Nugets
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK for signing'
    inputs:
      packageType: sdk
      version: 2.1.x
      includePreviewVersions: false
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK for building'
    inputs:
      packageType: sdk
      version: 3.1.x
      includePreviewVersions: false
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: PowerShell@2
    displayName: Versioning
    inputs:
      targetType: filePath
      filePath: ./tools/scripts/set-version.ps1
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: 'Industrial-IoT.sln'
      feedsToUse: 'config'
      nugetConfigPath: './NuGet.Config'   
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: 'Industrial-IoT.sln'
      arguments: '--configuration Release'
  - task: AntiMalware@3
    displayName: 'Run Virus scan'
    inputs:
      InputType: 'Basic'
      ScanType: 'CustomScan'
      FileDirPath: '$(Build.StagingDirectory)'
      EnableServices: true
      SupportLogOnError: false
      TreatSignatureUpdateFailureAs: 'Warning'
      SignatureFreshness: 'UpToDate'
      TreatStaleSignatureAs: 'Error'
  - ${{ if eq(parameters.sign, 'True') }}:
    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      displayName: 'Code Signing'
      inputs:
        ConnectedServiceName: 'Code Signing Certificate'
        FolderPath: '$(agent.builddirectory)'
        Pattern: '/**/Microsoft.Azure.IIoT.*.dll'
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: |
          [{
              "keyCode": "CP-230012",
              "operationSetCode": "SigntoolSign",
              "parameters": [
              {
                  "parameterName": "OpusName",
                  "parameterValue": "Microsoft"
              },
              {
                  "parameterName": "OpusInfo",
                  "parameterValue": "http://www.microsoft.com"
              },
              {
                  "parameterName": "FileDigest",
                  "parameterValue": "/fd \"SHA256\""
              },
              {
                  "parameterName": "PageHash",
                  "parameterValue": "/NPH"
              },
              {
                  "parameterName": "TimeStamp",
                  "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              }
              ],
              "toolName": "sign",
              "toolVersion": "1.0"
          },
          {
              "keyCode": "CP-230012",
              "operationSetCode": "SigntoolVerify",
              "parameters": [ ],
              "toolName": "sign",
              "toolVersion": "1.0"
          }]
        MaxConcurrency: 1
        MaxRetryAttempts: 50
        VerboseLogin: true
  - task: DotNetCoreCLI@2
    displayName: Pack
    inputs:
      command: pack
      packagesToPack: 'Industrial-IoT.sln'
      configuration: Release
      configurationToPack: Release
      nobuild: true
  - ${{ if eq(parameters.sign, 'True') }}:
    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      displayName: 'Nuget Signing'
      inputs:
        ConnectedServiceName: 'Code Signing Certificate'
        FolderPath: '$(Build.ArtifactStagingDirectory)'
        Pattern: 'Microsoft.Azure.IIoT.*.nupkg'
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: |
          [{
              "keyCode": "CP-401405",
              "operationSetCode": "NuGetSign",
              "parameters": [],
              "toolName": "sign",
              "toolVersion": "1.0"
          },
          {
              "keyCode": "CP-401405",
              "operationSetCode": "NuGetVerify",
              "parameters": [],
              "toolName": "sign",
              "toolVersion": "1.0"
          }]
        MaxConcurrency: 1
        MaxRetryAttempts: 50
        VerboseLogin: true
  - task: ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact'
    inputs:
      path: $(Build.ArtifactStagingDirectory)
      artifact: 'release__$(NBGV_NugetPackageVersion)'
  - task: NuGetCommand@2
    displayName: Push
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.snupkg'
      nuGetFeedType: external
      publishFeedCredentials: azureiiot-dev
  - task: PublishSymbols@2
    displayName: 'Publish symbols path'
    inputs:
      IndexSources: false
      SymbolServerType: TeamServices
      SymbolsMaximumWaitTime: 10
      SymbolsProduct: azureiiot
      SymbolsVersion: '$(Version_Full)'
    continueOnError: true
