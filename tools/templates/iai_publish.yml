#
# Publish IAI exectables
#
parameters:
  sign: 'False'
jobs:
- job: iai_publish
  displayName: Generate IAI Executables
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  # # This step will rely on existing setup of .Net Core for now.
  # # Once we move all projects to .Net Core 3, we will uncomment this.
  # - task: UseDotNet@2
  #   displayName: 'Install .NET Core SDK'
  #   inputs:
  #     packageType: sdk
  #     version: 3.0.x
  #     includePreviewVersions: false
  #     installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: PowerShell@2
    displayName: Versioning
    inputs:
      targetType: filePath
      filePath: ./tools/scripts/set-version.ps1
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: 'deploy/src/Microsoft.Azure.IIoT.Deployment/Microsoft.Azure.IIoT.Deployment.csproj'
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: 'deploy/src/Microsoft.Azure.IIoT.Deployment/Microsoft.Azure.IIoT.Deployment.csproj'
      arguments: '--configuration Release'
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: false
      projects: 'deploy/src/Microsoft.Azure.IIoT.Deployment/Microsoft.Azure.IIoT.Deployment.csproj'
      arguments: '--runtime win-x64 --configuration Release -p:PublishSingleFile=true --self-contained'
  - task: AntiMalware@3
    displayName: 'Run Virus scan'
    inputs:
      InputType: 'Basic'
      ScanType: 'CustomScan'
      FileDirPath: '$(Build.StagingDirectory)'
      EnableServices: true
      SupportLogOnError: false
      TreatSignatureUpdateFailureAs: 'Warning'
      SignatureFreshness: 'UpToDate'
      TreatStaleSignatureAs: 'Error'
  - ${{ if eq(parameters.sign, 'True') }}:
    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      displayName: 'IAI executable Signing'
      inputs:
        ConnectedServiceName: 'Code Signing Certificate'
        FolderPath: '$(agent.builddirectory)'
        Pattern: '/**/publish/Microsoft.Azure.IIoT.Deployment.exe'
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: |
          [{
              "keyCode": "CP-230012",
              "operationSetCode": "SigntoolSign",
              "parameters": [
              {
                  "parameterName": "OpusName",
                  "parameterValue": "Microsoft"
              },
              {
                  "parameterName": "OpusInfo",
                  "parameterValue": "http://www.microsoft.com"
              },
              {
                  "parameterName": "FileDigest",
                  "parameterValue": "/fd \"SHA256\""
              },
              {
                  "parameterName": "PageHash",
                  "parameterValue": "/NPH"
              },
              {
                  "parameterName": "TimeStamp",
                  "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              }
              ],
              "toolName": "sign",
              "toolVersion": "1.0"
          },
          {
              "keyCode": "CP-230012",
              "operationSetCode": "SigntoolVerify",
              "parameters": [ ],
              "toolName": "sign",
              "toolVersion": "1.0"
          }]
        MaxConcurrency: 1
        MaxRetryAttempts: 50
        VerboseLogin: true
  - task: ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
  - task: PublishPipelineArtifact@1
    displayName: 'Publish IAI Artifacts'
    inputs:
      path: $(Build.ArtifactStagingDirectory)/
      artifact: 'iai_release_$(Version_Full)'
