#
# Build and push images
#
jobs:
- job: containers
  displayName: Build Images
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    skipComponentGovernanceDetection: true
    runCodesignValidationInjection: false
  strategy:
    matrix: 
      linux_arm:
        os: linux
        arch: arm
      linux_arm64:
        os: linux
        arch: arm64
      linux_x64:
        os: linux
        arch: x64
  steps:
  - task: PowerShell@2
    displayName: Versioning
    inputs:
      targetType: filePath
      filePath: ./tools/scripts/set-version.ps1
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: sdk
      version: 7.0.x
      includePreviewVersions: false
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: PowerShell@2
    displayName: Set Namespace
    inputs:
      targetType: filePath
      filePath: ./tools/scripts/set-namespace.ps1
  - task: AzureCLI@1
    displayName: Build
    inputs:
      azureSubscription: azureiiot
      azurePowerShellVersion: 'latestVersion'
      scriptType: 'ps'
      scriptPath: ./tools/scripts/acr-build.ps1
      arguments: >
        -ImageNamespace "$(ImageNamespace)"
        -Arch "$(arch)" 
        -Os "$(os)"
- job: manifest
  displayName: Push Manifests
  pool:
    vmImage: 'windows-latest'
  dependsOn: containers
  variables:
    skipComponentGovernanceDetection: true
    runCodesignValidationInjection: false
  steps:
  - task: PowerShell@2
    displayName: Set Namespace
    inputs:
      targetType: filePath
      filePath: ./tools/scripts/set-namespace.ps1
  - task: AzureCLI@1
    name: Push
    displayName: Push Manifests
    inputs:
      azureSubscription: azureiiot
      azurePowerShellVersion: 'latestVersion'
      scriptType: 'ps'
      scriptPath: ./tools/scripts/acr-push.ps1
      arguments: >
        -ImageNamespace "$(ImageNamespace)"
      