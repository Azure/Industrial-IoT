// ------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All rights reserved.
//  Licensed under the MIT License (MIT). See License.txt in the repo root for license information.
// ------------------------------------------------------------

namespace OpcPublisher_AE_E2E_Tests {
    /// <summary>
    /// Contains constants using for End 2 End testing
    /// </summary>
    internal static partial class TestConstants {
        /// <summary>
        /// Character that need to be used when split value of "PLC_SIMULATION_URLS"
        /// </summary>
        public static char SimulationUrlsSeparator = ';';

        /// <summary>
        /// Name of the test assembly
        /// </summary>
        public const string TestAssemblyName = "OpcPublisher-AE-E2E-Tests";

        /// <summary>
        /// Default timeout of web calls
        /// </summary>
        public const int DefaultTimeoutInMilliseconds = 90 * 1000;

        /// <summary>
        /// Default delay interval in milliseconds
        /// </summary>
        public const int DefaultDelayMilliseconds = 5 * 1000;

        /// <summary>
        /// Maximum timeout for a test case
        /// </summary>
        public const int MaxTestTimeoutMilliseconds = 10 * 60 * 1000;

        /// <summary>
        /// Name of Published Nodes Json used by publisher module
        /// </summary>
        public const string PublishedNodesFilename = "published_nodes.json";

        /// <summary>
        /// Folder to store published_nodes.json file
        /// </summary>
        public const string PublishedNodesFolder = "/mount/opc_publisher";

        /// <summary>
        /// The full name of the publishednodes.json on the Edge
        /// </summary>
        public static readonly string PublishedNodesFullName =
            PublishedNodesFolder.TrimEnd('/') + "/" + PublishedNodesFilename;

        /// <summary>
        /// Default Microsoft Container Registry
        /// </summary>
        public static readonly string MicrosoftContainerRegistry = "mcr.microsoft.com";

        /// <summary>
        /// IoT Hub Event Hubs endpoint consumer group for tests
        /// </summary>
        public const string TestConsumerGroupName = "TestConsumer";

        /// <summary>
        /// Contains constants for OPC PLC
        /// </summary>
        internal static class OpcSimulation {
            /// <summary>
            /// Default port of OPC UA Server endpoint of OPC PLC
            /// </summary>
            public const ushort Port = 50000;

            /// <summary>
            /// Name of Published Nodes Json file generated by OPC PLC, containing information
            /// of provided (simulated) OPC UA Nodes
            /// </summary>
            public const string PublishedNodesFile = "pn.json";

            /// <summary>
            /// The share that is created in the pipeline
            /// </summary>
            public const string FileShareName = "acishare";

            /// <summary>
            /// Where to mount the file share in ACI
            /// </summary>
            public const string AciMountPath = "/app/files";

            /// <summary>
            /// This is the first part of the Azure Storage name that is created in pipeline
            /// </summary>
            public const string AzureStorageNameWithoutSuffix = "e2etestingstorage";

            /// <summary>
            /// Name of Tag in Resource Group
            /// </summary>
            public const string TestingResourcesSuffixName = "TestingResourcesSuffix";
        }

        /// <summary>
        /// Contains names of Environment variables available for tests
        /// </summary>
        internal static class EnvironmentVariablesNames {

            /// <summary>
            /// Tenant name used for authentication of Industrial IoT Platform
            /// </summary>
            public const string PCS_AUTH_TENANT = "PCS_AUTH_TENANT";

            /// <summary>
            /// Client App ID used for authentication of Industrial IoT Platform
            /// </summary>
            public const string PCS_AUTH_CLIENT_APPID = "PCS_AUTH_CLIENT_APPID";

            /// <summary>
            /// Client Secrete used for authentication of Industrial IoT Platform
            /// </summary>
            public const string PCS_AUTH_CLIENT_SECRET = "PCS_AUTH_CLIENT_SECRET";

            /// <summary>
            /// Semicolon separated URLs to load published_nodes.json from OPC-PLCs
            /// </summary>
            public const string PLC_SIMULATION_URLS = "PLC_SIMULATION_URLS";

            /// <summary>
            /// IoTEdge version
            /// </summary>
            public const string IOT_EDGE_VERSION = "IOT_EDGE_VERSION";

            /// <summary>
            /// Nested edge flag
            /// </summary>
            public const string NESTED_EDGE_FLAG = "NESTED_EDGE_FLAG";

            /// <summary>
            /// Nested edge ssh connections
            /// </summary>
            public const string NESTED_EDGE_SSH_CONNECTIONS = "NESTED_EDGE_SSH_CONNECTIONS";

            /// <summary>
            /// Device identity of edge device at IoT Hub
            /// </summary>
            public const string IOT_EDGE_DEVICE_ID = "IOT_EDGE_DEVICE_ID";

            /// <summary>
            /// DNS name of edge device
            /// </summary>
            public const string IOT_EDGE_DEVICE_DNSNAME = "IOT_EDGE_DEVICE_DNSNAME";

            /// <summary>
            /// User name of vm that hosting edge device
            /// </summary>
            public const string IOT_EDGE_VM_USERNAME = "IOT_EDGE_VM_USERNAME";

            /// <summary>
            /// SSH public key of vm that hosting edge device
            /// </summary>
            public const string IOT_EDGE_VM_PUBLICKEY = "IOT_EDGE_VM_PUBLICKEY";

            /// <summary>
            /// SSH private key of vm that hosting edge device
            /// </summary>
            public const string IOT_EDGE_VM_PRIVATEKEY = "IOT_EDGE_VM_PRIVATEKEY";

            /// <summary>
            /// IoT Hub connection string
            /// </summary>
            public const string PCS_IOTHUB_CONNSTRING = "PCS_IOTHUB_CONNSTRING";

            /// <summary>
            /// The connection string of the event-hub compatible endpoint of IoT Hub.
            /// </summary>
            public const string IOTHUB_EVENTHUB_CONNECTIONSTRING = "IOTHUB_EVENTHUB_CONNECTIONSTRING";

            /// <summary>
            /// The connection string of the storage account that will be used for checkpointing (when monitoring IoT Hub)
            /// </summary>
            public const string STORAGEACCOUNT_IOTHUBCHECKPOINT_CONNECTIONSTRING = "STORAGEACCOUNT_IOTHUBCHECKPOINT_CONNECTIONSTRING";

            /// <summary>
            /// Container Registry server
            /// </summary>
            public const string PCS_DOCKER_SERVER = "PCS_DOCKER_SERVER";

            /// <summary>
            /// Container Registry user name
            /// </summary>
            public const string PCS_DOCKER_USER = "PCS_DOCKER_USER";

            /// <summary>
            /// Container Registry password
            /// </summary>
            public const string PCS_DOCKER_PASSWORD = "PCS_DOCKER_PASSWORD";

            /// <summary>
            ///Images namespace
            /// </summary>
            public const string PCS_IMAGES_NAMESPACE = "PCS_IMAGES_NAMESPACE";

            /// <summary>
            /// Images tag
            /// </summary>
            public const string PCS_IMAGES_TAG = "PCS_IMAGES_TAG";

            /// <summary>
            /// Resource group
            /// </summary>
            public const string PCS_RESOURCE_GROUP = "PCS_RESOURCE_GROUP";

            /// <summary>
            /// Subscription Id
            /// </summary>
            public const string PCS_SUBSCRIPTION_ID = "PCS_SUBSCRIPTION_ID";
        }

        /// <summary>
        /// Constants related to xUnit traits
        /// </summary>
        internal static class TraitConstants {
            /// <summary>
            /// The trait name of the Publisher Mode
            /// </summary>
            public const string PublisherModeTraitName = "PublisherMode";

            /// <summary>
            /// The trait value for PublisherMode = AE
            /// </summary>
            public const string PublisherModeTraitValue = "AE";

            /// <summary>
            /// The trait value for PublisherMode = standalone
            /// </summary>
            public const string PublisherModeStandaloneTraitValue = "standaloneX";
        }

        /// <summary>
        /// Direct Method names
        /// </summary>
        internal static class DirectMethodNames {
            /// <summary>
            /// Publish Nodes
            /// </summary>
            public const string PublishNodes = "PublishNodes_V1";

            /// <summary>
            /// Unpublish Nodes
            /// </summary>
            public const string UnpublishNodes = "UnpublishNodes_V1";

            /// <summary>
            /// GetConfiguredNodesOnEndpoint
            /// </summary>
            public const string GetConfiguredNodesOnEndpoint = "GetConfiguredNodesOnEndpoint_V1";

            /// <summary>
            /// GetConfiguredEndpoints
            /// </summary>
            public const string GetConfiguredEndpoints = "GetConfiguredEndpoints_V1";

            /// <summary>
            /// UnpublishAllNodes
            /// </summary>
            public const string UnpublishAllNodes = "UnpublishAllNodes_V1";

            /// <summary>
            /// GetDiagnosticInfo
            /// </summary>
            public const string GetDiagnosticInfo = "GetDiagnosticInfo_V1";

            /// <summary>
            /// AddOrUpdateEndpoints
            /// </summary>
            public const string AddOrUpdateEndpoints = "AddOrUpdateEndpoints_V1";
        }
    }
}
