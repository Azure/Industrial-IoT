# Copyright (c) Microsoft. All rights reserved.

daemon                off;
worker_processes      1;
# error_log           /logs/error.log;
pid                   /logs/nginx.pid;
worker_rlimit_nofile  131072;

events {
    worker_connections 1024;
}

http {
    # Required so that nginx can resolve IPs when working with Docker Compose
    resolver 127.0.0.11 ipv6=off;

    include /etc/nginx/mime.types;
    default_type text/plain;

    index index.html index.htm;

    log_format upstreaminfo '$remote_addr - '
        '[$proxy_add_x_forwarded_for] - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" '
        '$request_length $request_time $upstream_addr $upstream_response_length $upstream_response_time $upstream_status';

    #access_log /logs/access.log  upstreaminfo;
    error_log  /logs/error.log;

    server {
        listen 10443 ssl;
        server_name reverseproxy 127.0.0.1;
        ssl_certificate /app/certs/tls.crt;
        ssl_certificate_key /app/certs/tls.key;
        ssl_protocols TLSv1.2;

        # Disable caching behavior for now
        # TODO: enable cache for static content later
        add_header Cache-Control "no-cache";
        expires 0;

        # when serving any content, include a X-Content-Type-Options: nosniff
        # header along with the Content-Type: header, to disable content-type
        # sniffing on some browsers.
        add_header X-Content-Type-Options "nosniff" always;

        # Don't allow the browser to render the page inside a frame/iframe
        # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
        # If you need [i]frames, use SAMEORIGIN or set an uri with ALLOW-FROM uri
        # See https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
        add_header X-Frame-Options SAMEORIGIN always;

        set $gateway_endpoint           "http://gatewayservice:9040";
        set $twin_endpoint              "http://twinservice:9041";
        set $registry_endpoint          "http://registryservice:9042";
        set $history_endpoint           "http://historyservice:9043";
        set $vault_endpoint             "http://vaultservice:9044";
        set $webui_endpoint             "http://twinwebui:3000";

        location /registry/ {
            rewrite              /registry/(.*) /$1 break;
            proxy_pass           $registry_endpoint;
            proxy_pass_header    Authorization;
			proxy_set_header     x-location registry;
            proxy_buffering      off;
            client_max_body_size 0;
            proxy_read_timeout   3600s;
            proxy_redirect       off;
        }

        location /twin/ {
            rewrite              /twin/(.*) /$1 break;
            proxy_pass           $twin_endpoint;
            proxy_pass_header    Authorization;
			proxy_set_header     x-location twin;
            proxy_buffering      off;
            client_max_body_size 0;
            proxy_read_timeout   3600s;
            proxy_redirect       off;
        }

        location /history/ {
            rewrite              /history/(.*) /$1 break;
            proxy_pass           $history_endpoint;
            proxy_pass_header    Authorization;
			proxy_set_header     x-location history;
            proxy_buffering      off;
            client_max_body_size 0;
            proxy_read_timeout   3600s;
            proxy_redirect       off;
        }

        location /ua/ {
            rewrite              /ua/(.*) /$1 break;
            proxy_pass           $gateway_endpoint;
            proxy_pass_header    Authorization;
			proxy_set_header     x-location gateway;
            proxy_buffering      off;
            client_max_body_size 0;
            proxy_read_timeout   3600s;
            proxy_redirect       off;
        }

        location /vault/ {
            rewrite              /vault/(.*) /$1 break;
            proxy_pass           $vault_endpoint;
            proxy_pass_header    Authorization;
			proxy_set_header     x-location vault;
            proxy_buffering      off;
            client_max_body_size 0;
            proxy_read_timeout   3600s;
            proxy_redirect       off;
        }
 
        location / {
            proxy_pass           $webui_endpoint;
            proxy_pass_header    Authorization;
            proxy_set_header     X-Source external;
            proxy_buffering      off;
            client_max_body_size 0;
            proxy_read_timeout   3600s;
            proxy_redirect       off;
        }
    }
}
