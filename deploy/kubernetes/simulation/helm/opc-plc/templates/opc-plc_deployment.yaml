{{- $simulationLabels := include "simulation.labels" . -}}
{{- $simulationSelectorLabels := include "simulation.selectorLabels" . -}}
{{- $simulationConfigMap := include "simulation.configmap" . -}}
{{- $releaseName := .Release.Name -}}

{{ range $i := until (.Values.simulations | int) }}
{{ $suffix := printf "%s-%06d" $releaseName $i }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opc-plc-{{ $suffix }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- $simulationLabels | nindent 4 }}
    app.kubernetes.io/component: opc-plc-{{ $suffix }}
spec:
  selector:
    matchLabels:
      {{- $simulationSelectorLabels | nindent 6 }}
      app.kubernetes.io/component: opc-plc-{{ $suffix }}
  template:
    metadata:
      labels:
        {{- $simulationSelectorLabels | nindent 8 }}
        app.kubernetes.io/component: opc-plc-{{ $suffix }}
    spec:
      {{- with $.Values.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: opc-plc
        {{- if $.Values.setSecurityContext }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          # OPC PLC runs as root.
          # runAsNonRoot: true
          # readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        {{- end }}
        image: {{ $.Values.image }}:{{ $.Values.tag }}
        imagePullPolicy: {{ $.Values.pullPolicy }}
        ports:
        - containerPort: 4840
        args:
          - "--ph=opc-plc-{{ $suffix }}.{{ $.Release.Namespace }}"
          - "--cdn=opc-plc-{{ $suffix }}.{{ $.Release.Namespace }},opc-plc-{{ $suffix }}"
          - "--nodesfile=/app/nodesfile.json"
          - "--ut"
          {{- if $.Values.autoAcceptUntrustedCertificates }}
          - "--autoaccept"
          {{- end }}
          - "--sn={{ $.Values.slowNodes }}"
          - "--sr=10"
          - "--fn={{ $.Values.fastNodes }}"
          - "--veryfastrate={{ $.Values.fastRate }}"
          - "--gn=5"
          - "--pn=4840"
          {{- if $.Values.openTelemetry.endpointUri }}
          - "--otlpee={{ $.Values.openTelemetry.endpointUri }}"
          - "--otlpei={{ $.Values.openTelemetry.exportIntervalSeconds }}"
          - "--otlpep={{ $.Values.openTelemetry.exportProtocol }}"
          {{- end }}
          - "--maxsessioncount={{ $.Values.maxSessionCount }}"
          - "--maxsubscriptioncount={{ $.Values.maxSubscriptionCount }}"
          - "--maxqueuedrequestcount={{ $.Values.maxQueuedRequestCount }}"
          - "--ses"
          - "--alm"
          - "--at=FlatDirectory"
          - "--drurs"
          # Check if additionalArgs are defined and have arguments for the current instance
          {{- if and (hasKey $.Values "additionalArgs") (not (empty $.Values.additionalArgs)) (index $.Values.additionalArgs $i) }}
          # Add additional arguments for the current instance
          {{- range (index $.Values.additionalArgs $i) }}
          - {{ . }}
          {{- end }}
          {{- end }}
        volumeMounts:
          - name: opc-plc-config-{{ $suffix }}
            mountPath: /app/nodesfile.json
            subPath: nodesfile.json
          - name: opc-ua-opc-plc-default-application-cert-{{ $suffix }}
            mountPath: /app/pki/own/
          - name: opc-ua-opc-plc-default-trusted-cert-{{ $suffix }}
            mountPath: /app/pki/trusted/
{{ if $.Values.resources }}
        resources:
{{ toYaml $.Values.resources | indent 10 }}
{{- end }}
      volumes:
        - name: opc-plc-config-{{ $suffix }}
          configMap:
            name: {{ $simulationConfigMap }}
        - name: opc-ua-opc-plc-default-application-cert-{{ $suffix }}
          secret:
            secretName: opc-ua-opc-plc-default-application-cert-{{ $suffix }}
        - name: opc-ua-opc-plc-default-trusted-cert-{{ $suffix }}
          # fallback to trust the own certificate secret. this contain the CA certificate when used.
          secret:
            secretName: opc-ua-opc-plc-default-application-cert-{{ $suffix }}
---
{{ end }}
