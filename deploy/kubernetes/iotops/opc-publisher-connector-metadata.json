{
    "aioConnectorMetadataSchemaVersion": "1.0-preview",
    "name": "OpcPublisher",
    "description": "OPC Publisher Connector",
    "version": "2.9",
    "maintainer": "iiotadmin@microsoft.com",
    "vendor": "Microsoft",
    "imageConfigurationSettings": {
        "imageName": "{{ImageName}}",
        "tag": "1.0.0"
    },
    "supportedArchitectures": [
        "linux/amd64"
    ],
    "sourceCode": {
        "language": ".NET",
        "languageVersion": ".NET 9.0",
        "sdks": {
            "mqttPackageVersion": "1.0.0",
            "servicesPackageVersion": "1.0.0",
            "connectorPackageVersion": "1.0.0"
        }
    },
    "resourceRequirements": {
        "requests": {
            "cpu": "500m",
            "memory": "256Mi"
        },
        "limits": {
            "cpu": "1000m",
            "memory": "512Mi"
        }
    },
    "aioMetadata": {
        "minVersion": "1.2.*",
        "maxVersion": "1.*.*"
    },
    "connectorConfigurationSchema": {
        "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "$id": "https://contoso.com/connectorConfig.schema.json",
            "title": "Connector Configuration Schema",
            "description": "The JSON schema for the connector additional configuration field",
            "type": "object",
            "properties": {
                "SomeConnectorConfiguration": {
                    "description": "Some configurable value that is relevant to the connector as a whole",
                    "type": "integer"
                },
                "SomeOtherConnectorConfiguration": {
                    "properties": {
                        "SomeEndpointConfiguration": {
                            "description": "Some other configurable value that is relevant to the connector as a whole",
                            "type": "integer"
                        }
                    }
                }
            }
        }
    },
    "inboundEndpoints": [
        {
            "endpointType": "Microsoft.OpcPublisher",
            "version": "2.9",
            "asset": {
                "configurationSchemas": {
                    "datasetConfigurationSchema": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "DataSetEventModel",
                        "description": "Dataset and event default and resource additional configuration model. Inherits all properties from PublishedNodesEntryModel and adds mapped properties for samplingInterval, publishingInterval, keyFrameCount, and StartInstance.",
                        "type": "object",
                        "properties": {
                            "publishingInterval": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 4294967295,
                                "examples": [
                                    100,
                                    1000,
                                    5000
                                ],
                                "description": "The publishing interval in milliseconds for this dataset writer. Controls how frequently data is published.",
                                "errorMessage": {
                                    "type": "Must be an integer in milliseconds or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed maximum supported interval (4294967295ms)"
                                }
                            },
                            "samplingInterval": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 4294967295,
                                "examples": [
                                    100,
                                    500,
                                    1000
                                ],
                                "description": "Default sampling interval in milliseconds for all data points in the dataset. Controls how frequently data is read from nodes.",
                                "errorMessage": {
                                    "type": "Must be an integer in milliseconds or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed maximum supported interval (4294967295ms)"
                                }
                            },
                            "MessageEncoding": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "Json",
                                    "Avro"
                                ],
                                "default": "Json",
                                "examples": [
                                    "Json",
                                    "Avro"
                                ],
                                "description": "The encoding format to use for messages. Json (human-readable), Avro (raw format).",
                                "errorMessage": {
                                    "enum": "Must be one of: Json, Uadp, Binary"
                                }
                            },
                            "keyFrameCount": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 1,
                                "maximum": 1000,
                                "examples": [
                                    1,
                                    10,
                                    100
                                ],
                                "description": "Controls key frame insertion frequency in the message stream. Higher values reduce bandwidth but increase latency for new subscribers.",
                                "errorMessage": {
                                    "type": "Must be an integer or omitted",
                                    "minimum": "Must be at least 1",
                                    "maximum": "Must not exceed 1000"
                                }
                            },
                            "Priority": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 255,
                                "examples": [
                                    0,
                                    100,
                                    255
                                ],
                                "description": "Priority of the writer subscription (0-255). Higher values indicate higher priority for resource allocation and processing.",
                                "errorMessage": {
                                    "type": "Must be an integer or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed 255"
                                }
                            },
                            "DataSetClassId": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "uuid",
                                "description": "The optional dataset class id as it shall appear in dataset messages and dataset metadata."
                            },
                            "DataSetDescription": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The optional description of the dataset."
                            },
                            "DataSetExtensionFields": {
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "description": "Optional key-value pairs inserted into key frame and metadata messages in the same data set.",
                                "additionalProperties": true
                            },
                            "DefaultHeartbeatInterval": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 4294967295,
                                "examples": [
                                    60000,
                                    300000
                                ],
                                "description": "The interval in milliseconds at which to publish heartbeat messages.",
                                "errorMessage": {
                                    "type": "Must be an integer in milliseconds or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed maximum supported interval (4294967295ms)"
                                }
                            },
                            "DefaultHeartbeatBehavior": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "WatchChange",
                                    "Periodically",
                                    "None"
                                ],
                                "default": "WatchChange",
                                "examples": [
                                    "WatchChange",
                                    "Periodically",
                                    "None"
                                ],
                                "description": "Configures how heartbeat messages are handled for all nodes. WatchChange (on value changes), Periodically (fixed intervals), or None (disabled).",
                                "errorMessage": {
                                    "enum": "Must be one of: WatchChange, Periodically, None"
                                }
                            },
                            "SendKeepAliveDataSetMessages": {
                                "type": "boolean",
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls whether to send keep alive messages for this dataset. Enable to maintain connection health monitoring.",
                                "errorMessage": {
                                    "type": "Must be a boolean value"
                                }
                            },
                            "MaxKeepAliveCount": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 1000,
                                "examples": [
                                    3,
                                    10,
                                    20
                                ],
                                "description": "Defines how many publishing timer expirations to wait before sending a keep-alive message. Larger values reduce traffic but increase detection time.",
                                "errorMessage": {
                                    "type": "Must be an integer or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed 1000"
                                }
                            },
                            "DataSetWriterWatchdogBehavior": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "Restart",
                                    "Halt",
                                    "Continue"
                                ],
                                "default": "Restart",
                                "examples": [
                                    "Restart",
                                    "Halt",
                                    "Continue"
                                ],
                                "description": "Defines what action to take when the watchdog timer triggers. Restart (reinitialize writer), Halt (stop publishing), or Continue (keep running).",
                                "errorMessage": {
                                    "enum": "Must be one of: Restart, Halt, Continue"
                                }
                            },
                            "OpcNodeWatchdogCondition": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "NoData",
                                    "Error",
                                    "Any"
                                ],
                                "default": "NoData",
                                "examples": [
                                    "NoData",
                                    "Error",
                                    "Any"
                                ],
                                "description": "Specifies the condition that triggers the watchdog behavior. NoData (no updates received), Error (error occurs), or Any (either condition).",
                                "errorMessage": {
                                    "enum": "Must be one of: NoData, Error, Any"
                                }
                            },
                            "DisableSubscriptionTransfer": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls whether subscription transfer is disabled during reconnect. Enable to prevent subscription state transfer.",
                                "errorMessage": {
                                    "type": "Must be a boolean or omitted"
                                }
                            },
                            "RepublishAfterTransfer": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": true,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls whether to republish missed values after a subscription is transferred during reconnect handling. Enable to ensure data consistency.",
                                "errorMessage": {
                                    "type": "Must be a boolean or omitted"
                                }
                            }
                        },
                        "additionalProperties": true
                    },
                    "datasetDataPointConfigurationSchema": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Data Set Data point configuration",
                        "description": "Data point additional configuration model.",
                        "type": "object",
                        "properties": {
                            "SamplingInterval": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 4294967295,
                                "examples": [
                                    100,
                                    1000,
                                    5000
                                ],
                                "description": "Server-side sampling rate in milliseconds. The value 0 means use the fastest practical rate.",
                                "errorMessage": {
                                    "type": "Must be an integer in milliseconds or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed maximum supported interval (4294967295ms)"
                                }
                            },
                            "AttributeId": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "Value",
                                    "DataType",
                                    "AccessLevel",
                                    "ArrayDimensions",
                                    "BrowseName",
                                    "DisplayName",
                                    "Description",
                                    "WriteMask",
                                    "UserWriteMask",
                                    "IsAbstract",
                                    "Symmetric",
                                    "InverseName"
                                ],
                                "default": "Value",
                                "examples": [
                                    "Value",
                                    "DataType",
                                    "DisplayName"
                                ],
                                "description": "The OPC UA attribute to monitor on the node. Specifies which characteristic of the node to monitor.",
                                "errorMessage": {
                                    "enum": "Must be a valid OPC UA attribute identifier"
                                }
                            },
                            "DataChangeTrigger": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "Status",
                                    "StatusValue",
                                    "StatusValueTimestamp"
                                ],
                                "default": "StatusValue",
                                "examples": [
                                    "Status",
                                    "StatusValue",
                                    "StatusValueTimestamp"
                                ],
                                "description": "Specifies what triggers value change notifications: Status (only status changes), StatusValue (status or value changes), or StatusValueTimestamp (status, value, or timestamp changes).",
                                "errorMessage": {
                                    "enum": "Must be one of: Status, StatusValue, StatusValueTimestamp"
                                }
                            },
                            "QueueSize": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 1,
                                "maximum": 65536,
                                "examples": [
                                    1,
                                    100,
                                    1000
                                ],
                                "description": "Size of the server-side queue for this monitored item. Larger queues consume more memory but provide better buffering.",
                                "errorMessage": {
                                    "type": "Must be an integer or omitted",
                                    "minimum": "Must be at least 1",
                                    "maximum": "Must not exceed maximum queue size (65536)"
                                }
                            },
                            "DeadbandType": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "None",
                                    "Absolute",
                                    "Percent"
                                ],
                                "default": "None",
                                "examples": [
                                    "None",
                                    "Absolute",
                                    "Percent"
                                ],
                                "description": "Deadband type of the data change filter to apply. None (no filtering), Absolute (absolute value change), or Percent (percentage value change).",
                                "errorMessage": {
                                    "enum": "Must be one of: None, Absolute, Percent"
                                }
                            },
                            "DeadbandValue": {
                                "type": [
                                    "number",
                                    "null"
                                ],
                                "minimum": 0,
                                "examples": [
                                    0.1,
                                    1.0,
                                    5.0
                                ],
                                "description": "Deadband value of the data change filter to apply. For Absolute type, this is the absolute change required. For Percent type, this is the percentage change required (0-100).",
                                "errorMessage": {
                                    "type": "Must be a number or omitted",
                                    "minimum": "Must be non-negative"
                                }
                            },
                            "DiscardNew": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls queue overflow behavior for monitored items. If true, new values are discarded when queue is full. If false, oldest values are discarded."
                            },
                            "DataSetFieldId": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "minLength": 1,
                                "maxLength": 256,
                                "examples": [
                                    "Temperature_Sensor1",
                                    "Pressure_Tank2"
                                ],
                                "description": "Custom identifier for this node in dataset messages. Must be unique within a dataset writer.",
                                "errorMessage": {
                                    "pattern": "Only alphanumeric characters, underscores, and hyphens are allowed",
                                    "minLength": "Identifier cannot be empty",
                                    "maxLength": "Identifier cannot exceed 256 characters"
                                }
                            },
                            "DataSetClassFieldId": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "uuid",
                                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                "examples": [
                                    "550e8400-e29b-41d4-a716-446655440000"
                                ],
                                "description": "Unique identifier for correlating fields with dataset class metadata.",
                                "errorMessage": {
                                    "format": "Must be a valid UUID",
                                    "pattern": "Must be in format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                }
                            },
                            "RegisterNode": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Optimize node access using RegisterNodes service. Improves performance for frequently accessed nodes but consumes server resources.",
                                "errorMessage": {
                                    "type": "Must be a boolean or omitted"
                                }
                            },
                            "UseCyclicRead": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Use periodic reads instead of monitored items. Enable for nodes that don't support subscriptions or for specific polling requirements. Required to be true when using CyclicReadMaxAge.",
                                "errorMessage": {
                                    "type": "Must be a boolean or omitted"
                                }
                            },
                            "CyclicReadMaxAge": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 4294967295,
                                "examples": [
                                    1000,
                                    5000,
                                    60000
                                ],
                                "description": "Maximum age for cached values in cyclic reads (milliseconds). Values older than this are considered stale and will trigger a new read. Only used when UseCyclicRead is true.",
                                "errorMessage": {
                                    "type": "Must be an integer in milliseconds or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed maximum supported age (4294967295ms)",
                                    "dependencies": "Requires UseCyclicRead to be true"
                                }
                            },
                            "HeartbeatInterval": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 4294967295,
                                "examples": [
                                    60000,
                                    300000
                                ],
                                "description": "Node-specific heartbeat interval in milliseconds.",
                                "errorMessage": {
                                    "type": "Must be an integer in milliseconds or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed maximum supported interval (4294967295ms)"
                                }
                            },
                            "HeartbeatBehavior": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "WatchChange",
                                    "Periodically",
                                    "None"
                                ],
                                "default": "WatchChange",
                                "examples": [
                                    "WatchChange",
                                    "Periodically",
                                    "None"
                                ],
                                "description": "Controls heartbeat message generation for this node: WatchChange (on value changes), Periodically (at fixed intervals), or None (disabled).",
                                "errorMessage": {
                                    "enum": "Must be one of: WatchChange, Periodically, None"
                                }
                            },
                            "SkipFirst": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls handling of initial value notification. If true, skips the first value after subscription creation to avoid initial value spikes.",
                                "errorMessage": {
                                    "type": "Must be a boolean or omitted"
                                }
                            },
                            "IndexRange": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "pattern": "^\\d+(:?\\d+)?$",
                                "examples": [
                                    "0",
                                    "1:3",
                                    "2:5"
                                ],
                                "description": "Range specification for array or string values. Use single index (e.g., '1') or range (e.g., '1:3'). First element is at index 0.",
                                "errorMessage": {
                                    "pattern": "Must be a single index or range in format 'start:end'"
                                }
                            }
                        },
                        "required": [],
                        "additionalProperties": true,
                        "dependencies": {
                            "CyclicReadMaxAge": {
                                "properties": {
                                    "UseCyclicRead": {
                                        "enum": [
                                            true
                                        ]
                                    }
                                },
                                "required": [
                                    "UseCyclicRead"
                                ]
                            }
                        }
                    },
                    "eventConfigurationSchema": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Event configuration model",
                        "description": "Event resource additional configuration model.",
                        "type": "object",
                        "properties": {
                            "QueueSize": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 1,
                                "maximum": 65536,
                                "examples": [
                                    1,
                                    100,
                                    1000
                                ],
                                "description": "Size of the server-side queue for this monitored item. Larger queues consume more memory but provide better buffering.",
                                "errorMessage": {
                                    "type": "Must be an integer or omitted",
                                    "minimum": "Must be at least 1",
                                    "maximum": "Must not exceed maximum queue size (65536)"
                                }
                            },
                            "publishingInterval": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 4294967295,
                                "examples": [
                                    100,
                                    1000,
                                    5000
                                ],
                                "description": "The publishing interval in milliseconds for this dataset writer. Controls how frequently data is published.",
                                "errorMessage": {
                                    "type": "Must be an integer in milliseconds or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed maximum supported interval (4294967295ms)"
                                }
                            },
                            "DiscardNew": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls queue overflow behavior for monitored items. If true, new values are discarded when queue is full. If false, oldest values are discarded."
                            },
                            "EventFilter": {
                                "$ref": "#/definitions/EventFilterModel",
                                "description": "Event Filter to apply. When specified the node is assumed to be an event notifier node to subscribe to."
                            },
                            "ConditionHandling": {
                                "$ref": "#/definitions/ConditionHandlingOptionsModel",
                                "description": "Settings for pending condition handling."
                            },
                            "SkipFirst": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls handling of initial value notification. If true, skips the first value after subscription creation to avoid initial value spikes.",
                                "errorMessage": {
                                    "type": "Must be a boolean or omitted"
                                }
                            },
                            "MessageEncoding": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "Json",
                                    "Avro"
                                ],
                                "default": "Json",
                                "examples": [
                                    "Json",
                                    "Avro"
                                ],
                                "description": "The encoding format to use for messages. Json (human-readable), Avro (raw format).",
                                "errorMessage": {
                                    "enum": "Must be one of: Json, Uadp, Binary"
                                }
                            },
                            "Priority": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 255,
                                "examples": [
                                    0,
                                    100,
                                    255
                                ],
                                "description": "Priority of the writer subscription (0-255). Higher values indicate higher priority for resource allocation and processing.",
                                "errorMessage": {
                                    "type": "Must be an integer or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed 255"
                                }
                            },
                            "DataSetClassId": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "uuid",
                                "description": "The optional dataset class id as it shall appear in dataset messages and dataset metadata."
                            },
                            "DataSetDescription": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The optional description of the dataset."
                            },
                            "SendKeepAliveDataSetMessages": {
                                "type": "boolean",
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls whether to send keep alive messages for this dataset. Enable to maintain connection health monitoring.",
                                "errorMessage": {
                                    "type": "Must be a boolean value"
                                }
                            },
                            "MaxKeepAliveCount": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "minimum": 0,
                                "maximum": 1000,
                                "examples": [
                                    3,
                                    10,
                                    20
                                ],
                                "description": "Defines how many publishing timer expirations to wait before sending a keep-alive message. Larger values reduce traffic but increase detection time.",
                                "errorMessage": {
                                    "type": "Must be an integer or omitted",
                                    "minimum": "Must be non-negative",
                                    "maximum": "Must not exceed 1000"
                                }
                            },
                            "DataSetWriterWatchdogBehavior": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "Restart",
                                    "Halt",
                                    "Continue"
                                ],
                                "default": "Restart",
                                "examples": [
                                    "Restart",
                                    "Halt",
                                    "Continue"
                                ],
                                "description": "Defines what action to take when the watchdog timer triggers. Restart (reinitialize writer), Halt (stop publishing), or Continue (keep running).",
                                "errorMessage": {
                                    "enum": "Must be one of: Restart, Halt, Continue"
                                }
                            },
                            "OpcNodeWatchdogCondition": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "NoData",
                                    "Error",
                                    "Any"
                                ],
                                "default": "NoData",
                                "examples": [
                                    "NoData",
                                    "Error",
                                    "Any"
                                ],
                                "description": "Specifies the condition that triggers the watchdog behavior. NoData (no updates received), Error (error occurs), or Any (either condition).",
                                "errorMessage": {
                                    "enum": "Must be one of: NoData, Error, Any"
                                }
                            },
                            "DisableSubscriptionTransfer": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": false,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls whether subscription transfer is disabled during reconnect. Enable to prevent subscription state transfer.",
                                "errorMessage": {
                                    "type": "Must be a boolean or omitted"
                                }
                            },
                            "RepublishAfterTransfer": {
                                "type": [
                                    "boolean",
                                    "null"
                                ],
                                "default": true,
                                "examples": [
                                    true,
                                    false
                                ],
                                "description": "Controls whether to republish missed values after a subscription is transferred during reconnect handling. Enable to ensure data consistency.",
                                "errorMessage": {
                                    "type": "Must be a boolean or omitted"
                                }
                            }
                        },
                        "additionalProperties": true,
                        "definitions": {
                            "EventFilterModel": {
                                "type": "object",
                                "description": "Event filter for OPC UA event monitoring.",
                                "properties": {
                                    "whereClause": {
                                        "$ref": "#/definitions/ContentFilterModel",
                                        "description": "Where clause for event filtering."
                                    },
                                    "typeDefinitionId": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Simple event Type definition node id."
                                    }
                                },
                                "additionalProperties": false
                            },
                            "ContentFilterModel": {
                                "type": "object",
                                "description": "Content filter for event filtering (structure not detailed in provided context).",
                                "properties": {},
                                "additionalProperties": true
                            },
                            "ConditionHandlingOptionsModel": {
                                "type": "object",
                                "description": "Condition handling options model.",
                                "properties": {
                                    "updateInterval": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ],
                                        "minimum": 0,
                                        "description": "Time interval for sending pending interval updates in seconds."
                                    },
                                    "snapshotInterval": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ],
                                        "minimum": 0,
                                        "description": "Time interval for sending pending interval snapshot in seconds."
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    "eventDataPointConfigurationSchema": null,
                    "streamConfigurationSchema": null,
                    "managementGroupConfigurationSchema": null,
                    "processControlConfigurationSchema": null
                },
                "supportedEventDestinations": [
                    "Mqtt"
                ],
                "defaultEventDestinations": [
                    "Mqtt"
                ],
                "supportedDatasetDestinations": [
                    "Mqtt"
                ],
                "defaultDatasetDestinations": [
                    "Mqtt"
                ],
                "supportedStreamDestinations": [],
                "defaultStreamDestinations": []
            },
            "isEndpointTlsEnabled": true
        }
    ]
}
