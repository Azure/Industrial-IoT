{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Data Set Data point configuration",
  "description": "Data point additional configuration model.",
  "type": "object",
  "properties": {
    "SamplingInterval": {
      "type": ["integer", "null"],
      "minimum": 0,
      "maximum": 4294967295,
      "examples": [100, 1000, 5000],
      "description": "Server-side sampling rate in milliseconds. The value 0 means use the fastest practical rate.",
      "errorMessage": {
        "type": "Must be an integer in milliseconds or omitted",
        "minimum": "Must be non-negative",
        "maximum": "Must not exceed maximum supported interval (4294967295ms)"
      }
    },
    "AttributeId": {
      "type": ["string", "null"],
      "enum": ["Value", "DataType", "AccessLevel", "ArrayDimensions", "BrowseName", "DisplayName", "Description", "WriteMask", "UserWriteMask", "IsAbstract", "Symmetric", "InverseName"],
      "default": "Value",
      "examples": ["Value", "DataType", "DisplayName"],
      "description": "The OPC UA attribute to monitor on the node. Specifies which characteristic of the node to monitor.",
      "errorMessage": {
        "enum": "Must be a valid OPC UA attribute identifier"
      }
    },
    "DataChangeTrigger": {
      "type": ["string", "null"],
      "enum": ["Status", "StatusValue", "StatusValueTimestamp"],
      "default": "StatusValue",
      "examples": ["Status", "StatusValue", "StatusValueTimestamp"],
      "description": "Specifies what triggers value change notifications: Status (only status changes), StatusValue (status or value changes), or StatusValueTimestamp (status, value, or timestamp changes).",
      "errorMessage": {
        "enum": "Must be one of: Status, StatusValue, StatusValueTimestamp"
      }
    },
    "QueueSize": {
      "type": ["integer", "null"],
      "minimum": 1,
      "maximum": 65536,
      "examples": [1, 100, 1000],
      "description": "Size of the server-side queue for this monitored item. Larger queues consume more memory but provide better buffering.",
      "errorMessage": {
        "type": "Must be an integer or omitted",
        "minimum": "Must be at least 1",
        "maximum": "Must not exceed maximum queue size (65536)"
      }
    },
    "DeadbandType": {
      "type": ["string", "null"],
      "enum": ["None", "Absolute", "Percent"],
      "default": "None",
      "examples": ["None", "Absolute", "Percent"],
      "description": "Deadband type of the data change filter to apply. None (no filtering), Absolute (absolute value change), or Percent (percentage value change).",
      "errorMessage": {
        "enum": "Must be one of: None, Absolute, Percent"
      }
    },
    "DeadbandValue": {
      "type": ["number", "null"],
      "minimum": 0,
      "examples": [0.1, 1.0, 5.0],
      "description": "Deadband value of the data change filter to apply. For Absolute type, this is the absolute change required. For Percent type, this is the percentage change required (0-100).",
      "errorMessage": {
        "type": "Must be a number or omitted",
        "minimum": "Must be non-negative"
      }
    },
    "DiscardNew": {
      "type": ["boolean", "null"],
      "default": false,
      "examples": [true, false],
      "description": "Controls queue overflow behavior for monitored items. If true, new values are discarded when queue is full. If false, oldest values are discarded."
    },
    "DataSetFieldId": {
      "type": ["string", "null"],
      "pattern": "^[a-zA-Z0-9_-]+$",
      "minLength": 1,
      "maxLength": 256,
      "examples": ["Temperature_Sensor1", "Pressure_Tank2"],
      "description": "Custom identifier for this node in dataset messages. Must be unique within a dataset writer.",
      "errorMessage": {
        "pattern": "Only alphanumeric characters, underscores, and hyphens are allowed",
        "minLength": "Identifier cannot be empty",
        "maxLength": "Identifier cannot exceed 256 characters"
      }
    },
    "DataSetClassFieldId": {
      "type": ["string", "null"],
      "format": "uuid",
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
      "examples": ["550e8400-e29b-41d4-a716-446655440000"],
      "description": "Unique identifier for correlating fields with dataset class metadata.",
      "errorMessage": {
        "format": "Must be a valid UUID",
        "pattern": "Must be in format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
      }
    },
    "RegisterNode": {
      "type": ["boolean", "null"],
      "default": false,
      "examples": [true, false],
      "description": "Optimize node access using RegisterNodes service. Improves performance for frequently accessed nodes but consumes server resources.",
      "errorMessage": {
        "type": "Must be a boolean or omitted"
      }
    },
    "UseCyclicRead": {
      "type": ["boolean", "null"],
      "default": false,
      "examples": [true, false],
      "description": "Use periodic reads instead of monitored items. Enable for nodes that don't support subscriptions or for specific polling requirements. Required to be true when using CyclicReadMaxAge.",
      "errorMessage": {
        "type": "Must be a boolean or omitted"
      }
    },
    "CyclicReadMaxAge": {
      "type": ["integer", "null"],
      "minimum": 0,
      "maximum": 4294967295,
      "examples": [1000, 5000, 60000],
      "description": "Maximum age for cached values in cyclic reads (milliseconds). Values older than this are considered stale and will trigger a new read. Only used when UseCyclicRead is true.",
      "errorMessage": {
        "type": "Must be an integer in milliseconds or omitted",
        "minimum": "Must be non-negative",
        "maximum": "Must not exceed maximum supported age (4294967295ms)",
        "dependencies": "Requires UseCyclicRead to be true"
      }
    },
    "HeartbeatInterval": {
      "type": ["integer", "null"],
      "minimum": 0,
      "maximum": 4294967295,
      "examples": [60000, 300000],
      "description": "Node-specific heartbeat interval in milliseconds.",
      "errorMessage": {
        "type": "Must be an integer in milliseconds or omitted",
        "minimum": "Must be non-negative",
        "maximum": "Must not exceed maximum supported interval (4294967295ms)"
      }
    },
    "HeartbeatBehavior": {
      "type": ["string", "null"],
      "enum": ["WatchChange", "Periodically", "None"],
      "default": "WatchChange",
      "examples": ["WatchChange", "Periodically", "None"],
      "description": "Controls heartbeat message generation for this node: WatchChange (on value changes), Periodically (at fixed intervals), or None (disabled).",
      "errorMessage": {
        "enum": "Must be one of: WatchChange, Periodically, None"
      }
    },
    "SkipFirst": {
      "type": ["boolean", "null"],
      "default": false,
      "examples": [true, false],
      "description": "Controls handling of initial value notification. If true, skips the first value after subscription creation to avoid initial value spikes.",
      "errorMessage": {
        "type": "Must be a boolean or omitted"
      }
    },
    "IndexRange": {
      "type": ["string", "null"],
      "pattern": "^\\d+(:?\\d+)?$",
      "examples": ["0", "1:3", "2:5"],
      "description": "Range specification for array or string values. Use single index (e.g., '1') or range (e.g., '1:3'). First element is at index 0.",
      "errorMessage": {
        "pattern": "Must be a single index or range in format 'start:end'"
      }
    }
  },
  "required": [],
  "additionalProperties": true,
  "dependencies": {
    "CyclicReadMaxAge": {
      "properties": {
        "UseCyclicRead": { "enum": [true] }
      },
      "required": ["UseCyclicRead"]
    }
  }
}
