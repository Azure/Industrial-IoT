{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DataSetEventModel",
  "description": "Dataset and event default and resource additional configuration model. Inherits all properties from PublishedNodesEntryModel and adds mapped properties for samplingInterval, publishingInterval, keyFrameCount, and StartInstance.",
  "type": "object",
  "properties": {
    "publishingInterval": {
      "type": ["integer", "null"],
      "minimum": 0,
      "maximum": 4294967295,
      "examples": [100, 1000, 5000],
      "description": "The publishing interval in milliseconds for this dataset writer. Controls how frequently data is published.",
      "errorMessage": {
        "type": "Must be an integer in milliseconds or omitted",
        "minimum": "Must be non-negative",
        "maximum": "Must not exceed maximum supported interval (4294967295ms)"
      }
    },
    "samplingInterval": {
      "type": ["integer", "null"],
      "minimum": 0,
      "maximum": 4294967295,
      "examples": [100, 500, 1000],
      "description": "Default sampling interval in milliseconds for all data points in the dataset. Controls how frequently data is read from nodes.",
      "errorMessage": {
        "type": "Must be an integer in milliseconds or omitted",
        "minimum": "Must be non-negative",
        "maximum": "Must not exceed maximum supported interval (4294967295ms)"
      }
    },
    "MessageEncoding": {
      "type": ["string", "null"],
      "enum": ["Json", "Avro"],
      "default": "Json",
      "examples": ["Json", "Avro"],
      "description": "The encoding format to use for messages. Json (human-readable), Avro (raw format).",
      "errorMessage": {
        "enum": "Must be one of: Json, Uadp, Binary"
      }
    },
    "keyFrameCount": {
      "type": ["integer", "null"],
      "minimum": 1,
      "maximum": 1000,
      "examples": [1, 10, 100],
      "description": "Controls key frame insertion frequency in the message stream. Higher values reduce bandwidth but increase latency for new subscribers.",
      "errorMessage": {
        "type": "Must be an integer or omitted",
        "minimum": "Must be at least 1",
        "maximum": "Must not exceed 1000"
      }
    },
    "Priority": {
      "type": ["integer", "null"],
      "minimum": 0,
      "maximum": 255,
      "examples": [0, 100, 255],
      "description": "Priority of the writer subscription (0-255). Higher values indicate higher priority for resource allocation and processing.",
      "errorMessage": {
        "type": "Must be an integer or omitted",
        "minimum": "Must be non-negative",
        "maximum": "Must not exceed 255"
      }
    },
    "DataSetClassId": {
      "type": ["string", "null"],
      "format": "uuid",
      "description": "The optional dataset class id as it shall appear in dataset messages and dataset metadata."
    },
    "DataSetDescription": {
      "type": ["string", "null"],
      "description": "The optional description of the dataset."
    },
    "DataSetExtensionFields": {
      "type": ["object", "null"],
      "description": "Optional key-value pairs inserted into key frame and metadata messages in the same data set.",
      "additionalProperties": true
    },
    "DefaultHeartbeatInterval": {
      "type": ["integer", "null"],
      "minimum": 0,
      "maximum": 4294967295,
      "examples": [60000, 300000],
      "description": "The interval in milliseconds at which to publish heartbeat messages.",
      "errorMessage": {
        "type": "Must be an integer in milliseconds or omitted",
        "minimum": "Must be non-negative",
        "maximum": "Must not exceed maximum supported interval (4294967295ms)"
      }
    },
    "DefaultHeartbeatBehavior": {
      "type": ["string", "null"],
      "enum": ["WatchChange", "Periodically", "None"],
      "default": "WatchChange",
      "examples": ["WatchChange", "Periodically", "None"],
      "description": "Configures how heartbeat messages are handled for all nodes. WatchChange (on value changes), Periodically (fixed intervals), or None (disabled).",
      "errorMessage": {
        "enum": "Must be one of: WatchChange, Periodically, None"
      }
    },
    "SendKeepAliveDataSetMessages": {
      "type": "boolean",
      "default": false,
      "examples": [true, false],
      "description": "Controls whether to send keep alive messages for this dataset. Enable to maintain connection health monitoring.",
      "errorMessage": {
        "type": "Must be a boolean value"
      }
    },
    "MaxKeepAliveCount": {
      "type": ["integer", "null"],
      "minimum": 0,
      "maximum": 1000,
      "examples": [3, 10, 20],
      "description": "Defines how many publishing timer expirations to wait before sending a keep-alive message. Larger values reduce traffic but increase detection time.",
      "errorMessage": {
        "type": "Must be an integer or omitted",
        "minimum": "Must be non-negative",
        "maximum": "Must not exceed 1000"
      }
    },
    "DataSetWriterWatchdogBehavior": {
      "type": ["string", "null"],
      "enum": ["Restart", "Halt", "Continue"],
      "default": "Restart",
      "examples": ["Restart", "Halt", "Continue"],
      "description": "Defines what action to take when the watchdog timer triggers. Restart (reinitialize writer), Halt (stop publishing), or Continue (keep running).",
      "errorMessage": {
        "enum": "Must be one of: Restart, Halt, Continue"
      }
    },
    "OpcNodeWatchdogCondition": {
      "type": ["string", "null"],
      "enum": ["NoData", "Error", "Any"],
      "default": "NoData",
      "examples": ["NoData", "Error", "Any"],
      "description": "Specifies the condition that triggers the watchdog behavior. NoData (no updates received), Error (error occurs), or Any (either condition).",
      "errorMessage": {
        "enum": "Must be one of: NoData, Error, Any"
      }
    },
    "DisableSubscriptionTransfer": {
      "type": ["boolean", "null"],
      "default": false,
      "examples": [true, false],
      "description": "Controls whether subscription transfer is disabled during reconnect. Enable to prevent subscription state transfer.",
      "errorMessage": {
        "type": "Must be a boolean or omitted"
      }
    },
    "RepublishAfterTransfer": {
      "type": ["boolean", "null"],
      "default": true,
      "examples": [true, false],
      "description": "Controls whether to republish missed values after a subscription is transferred during reconnect handling. Enable to ensure data consistency.",
      "errorMessage": {
        "type": "Must be a boolean or omitted"
      }
    }
  },
  "additionalProperties": true
}
