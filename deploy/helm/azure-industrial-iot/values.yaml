# Default values for Azure Industrial-IoT solution.

# Details of Docker images.
image:
  # image.registry is URL of Docker registry from where images will be pulled.
  registry: mcr.microsoft.com/iot
  # image.tag defines which version of Docker images to pull.
  tag: 2.5.2
  # image.pullPolicy defines value of imagePullPolicy of deployments.
  pullPolicy: IfNotPresent

# Details of Azure resources that components of Azure Industrial IoT solution will connect to.
azure:
  # azure.tenantId is Guid id of the tenant that contains Azure resources.
  tenantId: null

  # Details of Azure IoT Hub that microservices will communicate with.
  iotHub:
    # azure.iotHub.name is the name of IoT Hub that microservices will consume IoT data from.
    name: null

    # Details of built-in EventHub of IoT Hub.
    eventHub:
      # azure.iotHub.eventHub.endpoint is Event Hub-compatible endpoint of built-in EventHub of IoT Hub.
      endpoint: null
      # azure.iotHub.eventHub.partitionCount is number of artitoins of built-in EventHub.
      partitionCount: null
      # azure.iotHub.eventHub.consumerGroup is name of consumer group of built-in EventHub for onboarding events. Its value is usually 'onboarding'.
      consumerGroup: null

    sharedAccessPolicies:
      iothubowner:
        # azure.iotHub.sharedAccessPolicies.iothubowner.connectionString is IoT Hub connection string for iothubowner policy.
        # We require iothubowner policy because microservices will perform management activities on IoT Hub.
        connectionString: null

  # Details of Azure CosmosDB that microservices will use as database.
  # The following CosmosDB containers will be created (<db_name>.<container_name>):
  #   - iiot_opc.iiot_opc-indices
  #   - iiot_opc.iiot_opc-requests
  #   - OpcVault.AppsAndCertRequests
  cosmosDB:
    # azure.cosmosDB.connectionString is connection string for CosmosDB. It should provide read-write permissions.
    connectionString: null

  # This provides details of Azure Storage Account that is configured in IoT Hub as storage endpoint.
  storageAccount:
    # azure.storageAccount.name is the name of storage account.
    name: null
    # azure.storageAccount.accessKey is access key for storage account. Note that is is the key and not the connection string.
    accessKey: null
    # azure.storageAccount.endpointSuffix is blob endpoint suffix of Azure environment.
    # For Azure Public Cloud it should be 'core.windows.net'. It will be different if you are on a specific Azure government cloud.
    endpointSuffix: core.windows.net

  # Details of Azure Event Hub Namespace that microservices will use.
  eventHubNamespace:
    sharedAccessPolicies:
      rootManageSharedAccessKey:
        # azure.eventHubNamespace.sharedAccessPolicies.rootManageSharedAccessKey.connectionString is the connection string of RootManageSharedAccessKey key of Event hub Namespace.
        # RootManageSharedAccessKey key is required because microservices will create new Event Hubs within the namespace.
        connectionString: null

    eventHub:
      name: null

  # Details of Azure Service Bus Namespace that microservices will use.
  serviceBusNamespace:
    sharedAccessPolicies:
      rootManageSharedAccessKey:
        # azure.serviceBusNamespace.sharedAccessPolicies.rootManageSharedAccessKey.connectionString is connection string of RootManageSharedAccessKey key of Service Bus Namespace.
        # RootManageSharedAccessKey key is required because microservices will create new Service Bus.
        connectionString: null

  # Details of Azure Key Vault that microservices will use.
  keyVault:
    # azure.keyVault.uri is the URI of Key Vault, also referred as DNS Name.
    uri: null

  # Details of Azure Log Analytics Workspace that microservices will use.
  logAnalyticsWorkspace:
    # azure.logAnalyticsWorkspace.name is the name of Log Analytics workspace instance.
    name: null

  applicationInsights:
    name: null
    instrumentationKey: null

  appService:
    url: null

  signalR:
    connectionString: null

  servicesApp:
    corsWhitelist: '*'
    auth:
      httpsRedirectPort: 0
      required: true
      audience: null

  clientsApp:
    auth:
      aadAppId: null
      authority: https://login.microsoftonline.com/

deployment:
  microServices:
    # deployment.microServices.registry contains values specific to yaml definitions of deployment and service kubernetes resources for opc-registry-service .
    registry:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.twin contains values specific to yaml definitions of deployment and service kubernetes resources for opc-twin-service.
    twin:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.history contains values specific to yaml definitions of deployment and service kubernetes resources for opc-history-service.
    history:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.gateway contains values specific to yaml definitions of deployment and service kubernetes resources for opc-gateway-service.
    gateway:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.vault contains values specific to yaml definitions of deployment and service kubernetes resources for opc-vault-service.
    vault:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.alerting contains values specific to yaml definitions of deployment kubernetes resource for opc-alerting-service.
    alerting:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.onboarding contains values specific to yaml definitions of deployment kubernetes resource for opc-onboarding-service.
    onboarding:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.jobs contains values specific to yaml definitions of deployment kubernetes resource for opc-jobs-service.
    jobs:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.modelProcessor contains values specific to yaml definitions of deployment kubernetes resource for opc-processor-service.
    modelProcessor:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"
    # deployment.microServices.blobNotification contains values specific to yaml definitions of deployment kubernetes resource for blob-notification-service.
    blobNotification:
      enabled: true
      replicas: 1
      # extraArgs: []
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "150m"

  ingress:
    tls:
      crt: null
      key: null