{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "servicePrincipalId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the object ID of the service principal in your Azure Active Directory tenant.  You can obtain it using Get-AzADServicePrincipal cmdlet."
            }
        },
        "templateUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/Industrial-IoT",
            "metadata": {
                "description": "The artifacts url from which to pull all linked templates.  Default is official repository."
            }
        },
        "branchName": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "The branch from which to deploy deploy services and application.  Default to master."
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "The resource name of the KeyVault created as part of the deployment."
            }
        },
        "datalakeName": {
            "type": "string",
            "defaultValue": "[concat('datalake', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "The name of the Azure datalake account created as part of the deployment."
            }
        },
        "datalakeSkuName": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The datalake SKU to use."
            }
        },
        "eventHubNamespaceName": {
            "type": "string",
            "defaultValue": "[concat('eventhubnamespace-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "The name of the Event Hub namespace created as part of the deployment."
            }
        },
        "eventHubName": {
            "type": "string",
            "defaultValue": "[concat('eventhub-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "The name of the Event Hub created as part of the deployment."
            }
        },
        "eventHubRetentionInDays": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The event hub message retention in days."
            }
        },
        "eventHubPartitionCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The event hub partition count."
            }
        },
        "eventHubSkuTier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "metadata": {
                "description": "The Azure Event Hub SKU Tier."
            }
        },
        "eventHubSkuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The Azure Event Hub SKU Capacity to use."
            }
        },
        "eventHubAuthorizationName": {
            "type": "string",
            "defaultValue": "eventhub-key",
            "metadata": {
                "description": "The name of the Authorization Rule Name for the Event Hub endpoint."
            }
        },
        "serviceBusEndpointSuffix": {
            "type": "string",
            "defaultValue": "servicebus.windows.net",
            "allowedValues": [
                "servicebus.windows.net",
                "servicebus.chinacloudapi.cn"
            ],
            "metadata": {
                "description": "Suffix added to Service Bus endpoint"
            }
        },
        "tsiEnvironmentName": {
            "type": "string",
            "defaultValue": "[concat('tsi-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "Name of the Azure Time Series Insights environment created as part of the deployment. The name cannot include: '<', '>', '%', '&', ':', '\\', '?', '/' and any control characters. All other characters are allowed."
            }
        },
        "tsiStorageName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account to attach to Time Series Insights."
            }
        },
        "tsiStorageManagementKey": {
            "type": "securestring",
            "metadata": {
                "description": "The storage management key for Time Series Insights to use."
            }
        },
        "tsiEnvironmentSkuName": {
            "type": "string",
            "defaultValue": "L1",
            "allowedValues": [
                "L1"
            ],
            "metadata": {
                "description": "The Azure Time Series Insights SKU name."
            }
        },
        "tsiEnvironmentSkuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 10,
            "metadata": {
                "description": "The Azure Time Series Insights SKU capacity to use."
            }
        },
        "tsiEnvironmentKind": {
            "type": "string",
            "defaultValue": "LongTerm",
            "allowedValues": [
                "LongTerm"
            ],
            "metadata": {
                "description": "The Azure Time Series Insights environment."
            }
        },
        "tsiEnvironmentDisplayName": {
            "type": "string",
            "defaultValue": "Time Series Analytics",
            "maxLength": 90,
            "metadata": {
                "description": "An optional friendly name to show in Azure Time Series tooling or user interfaces instead of the environment name."
            }
        },
        "tsiEventSourceDisplayName": {
            "type": "string",
            "defaultValue": "Telemetry",
            "maxLength": 90,
            "metadata": {
                "description": "An optional friendly name to show in Azure Time Series tooling or user interfaces for the event source."
            }
        },
        "signalRName": {
            "type": "string",
            "defaultValue": "[concat('hub', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "The name of the signalR endpoint created as part of the deployment."
            }
        },
        "signalRSkuTier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Free",
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "The Azure SignalR Service SKU Tier to use."
            }
        },
        "signalRSkuName": {
            "type": "string",
            "defaultValue": "Standard_S1",
            "allowedValues": [
                "Free_F1",
                "Standard_S1"
            ],
            "metadata": {
                "description": "The Azure SignalR Service SKU to use."
            }
        },
        "signalRSkuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1,
                2,
                5,
                10,
                20,
                50,
                100
            ],
            "metadata": {
                "description": "The Azure SignalR SKU Capacity"
            }
        },
        "dpsName": {
            "type": "string",
            "defaultValue": "[concat('dps', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "The name of the Azure Device Provisioning service created as part of the deployment."
            }
        },
        "dpsSku": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "S1"
            ],
            "metadata": {
                "description": "The Azure Device Provisioning service SKU to use."
            }
        },
        "dpsCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 3,
            "metadata": {
                "description": "The Azure Device Provisioning service capacity."
            }
        },
        "dpsIotHubHostName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure IoT Hub to attach to Time Series Insights and the Device Provisioning service."
            }
        },
        "dpsIotHubConnectionString": {
            "type": "securestring",
            "metadata": {
                "description": "Connection string of Azure IoT Hub for Device Provisioning service."
            }
        },
        "dpsIotHubLocation": {
            "type": "string",
            "metadata": {
                "description": "Location of Azure IoT Hub for Device Provisioning service."
            }
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "[concat('logs-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 8))]",
            "metadata": {
                "description": "Specifies the name of the Azure Log Analytics workspace created as part of the deployment."
            }
        },
        "workspaceSku": {
            "type": "string",
            "allowedValues": [
                "Standalone",
                "PerNode",
                "PerGB2018"
            ],
            "defaultValue": "PerGB2018",
            "metadata": {
                "description": "Specifies the service tier of the Azure Log Analytics workspace."
            }
        },
        "appInsightsName": {
            "type": "string",
            "defaultValue": "[concat('appinsights-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "Specifies the name of Azure Application Insights instance created as part of the deployment."
            }
        }
    },
    "variables": {
        "templateBaseUrl": "[if(empty(parameters('templateUrl')), deployment().properties.templateLink.uri, concat(parameters('templateUrl'), '/', parameters('branchName'), '/deploy/templates/'))]",
        "eventHubKeyName": "RootManageSharedAccessKey",
        "eventHubKeyResourceId": "[resourceId('Microsoft.EventHub/namespaces/AuthorizationRules', parameters('eventHubNamespaceName'), variables('eventHubKeyName'))]",
        "eventHubNamespaceResourceId": "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]",
        "eventHubResourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubNamespaceName'), parameters('eventHubName'))]",
        "eventHubConsumerGroup1": "telemetrycdm",
        "eventHubConsumerGroup2": "telemetryux",
        "tsiEventSourceName": "TelemetryEventHub",
        "tsiEventSourceKeyResourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('eventHubNamespaceName'), parameters('eventHubName'), parameters('eventHubAuthorizationName'))]",
        "tsiEnvironmentTagsValue": {
            "displayName": "[parameters('tsiEnvironmentDisplayName')]"
        },
        "tsiEventSourceTagsValue": {
            "displayName": "[parameters('tsiEventSourceDisplayName')]"
        },
        "tsiEnvironmentResourceId": "[resourceId('Microsoft.TimeSeriesInsights/environments', parameters('tsiEnvironmentName'))]",
        "dpsResourceId": "[resourceId('Microsoft.Devices/provisioningServices', parameters('dpsName'))]",
        "datalakeResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('datalakeName'))]",
        "appinsightsResourceId": "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "signalRResourceId": "[resourceId('Microsoft.SignalRService/SignalR', parameters('signalRName'))]",
        "standardConfigurationResourceName": "infrastructure.configuration"
    },
    "resources": [
        {
            "comments": "Azure Device Provisioning service.",
            "type": "Microsoft.Devices/provisioningServices",
            "name": "[parameters('dpsName')]",
            "apiVersion": "2018-01-22",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('dpsSku')]",
                "capacity": "[parameters('dpsCapacity')]"
            },
            "properties": {
                "iotHubs": [
                    {
                        "connectionString": "[parameters('dpsIotHubConnectionString')]",
                        "location": "[parameters('dpsIotHubLocation')]",
                        "name": "[parameters('dpsIotHubHostName')]"
                    }
                ]
            }
        },
        {
            "comments": "Datalake storage account",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('datalakeName')]",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('datalakeSkuName')]"
            },
            "properties": {
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": [
            ]
        },
        {
            "comments": "Datalake service identity role assignment",
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(parameters('datalakeName'), '/Microsoft.Authorization/', guid(uniqueString(parameters('datalakeName'))))]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[parameters('servicePrincipalId')]"
            },
            "dependsOn": [
                "[variables('datalakeResourceId')]"
            ]
        },
        {
            "comments": "Azure Event Hub Namespace",
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2017-04-01",
            "name": "[parameters('eventHubNamespaceName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('eventHubSkuTier')]",
                "tier": "[parameters('eventHubSkuTier')]",
                "capacity": "[parameters('eventHubSkuCapacity')]"
            },
            "properties": {
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0
            },
            "dependsOn": [
            ]
        },
        {
            "comments": "Azure Event Hub for Device Telemetry",
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubName'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "messageRetentionInDays": "[parameters('eventHubRetentionInDays')]",
                "partitionCount": "[parameters('eventHubPartitionCount')]",
                "status": "Active"
            },
            "dependsOn": [
                "[variables('eventHubNamespaceResourceId')]"
            ]
        },
        {
            "comments": "CDM Telemetry Consumer Group of Event Hub for Device Telemetry",
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "name": "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubName'), '/', variables('eventHubConsumerGroup1'))]",
            "apiVersion": "2017-04-01",
            "properties": {
                "userMetadata": "CDM Telemetry Consumer Group"
            },
            "dependsOn": [
                "[variables('eventHubResourceId')]"
            ]
        },
        {
            "comments": "UX Telemetry Consumer Group of Event Hub for Device Telemetry",
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubName'), '/', variables('eventHubConsumerGroup2'))]",
            "properties": {
                "userMetadata": "UX Telemetry Consumer Group"
            },
            "dependsOn": [
                "[variables('eventHubResourceId')]"
            ]
        },
        {
            "comments": "Event Hub Authorization for Device Telemetry Consumers",
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "name": "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubName'), '/', parameters('eventHubAuthorizationName'))]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "rights": [
                    "Listen"
                ]
            },
            "dependsOn": [
                "[variables('eventHubResourceId')]"
            ]
        },
        {
            "comments": "Timeseries Insights Environment",
            "type": "Microsoft.TimeSeriesInsights/environments",
            "name": "[parameters('tsiEnvironmentName')]",
            "apiVersion": "2018-08-15-preview",
            "location": "[resourceGroup().location]",
            "kind": "[parameters('tsiEnvironmentKind')]",
            "properties": {
                "storageConfiguration": {
                    "accountName": "[parameters('tsiStorageName')]",
                    "managementKey": "[parameters('tsiStorageManagementKey')]"
                },
                "timeSeriesIdProperties": [
                    {
                        "type": "string",
                        "name": "publisherId"
                    },
                    {
                        "type": "string",
                        "name": "dataSetWriterId"
                    },
                    {
                        "type": "string",
                        "name": "dataSetClassId"
                    }
                ]
            },
            "sku": {
                "name": "[parameters('tsiEnvironmentSkuName')]",
                "capacity": "[parameters('tsiEnvironmentSkuCapacity')]"
            },
            "tags": "[variables('tsiEnvironmentTagsValue')]",
            "dependsOn": [
            ]
        },
        {
            "comments": "Timeseries Insights Device Telemetry Event Hub Event Source",
            "type": "Microsoft.TimeSeriesInsights/environments/eventsources",
            "name": "[concat(parameters('tsiEnvironmentName'), '/', variables('tsiEventSourceName'))]",
            "apiVersion": "2018-08-15-preview",
            "location": "[resourceGroup().location]",
            "kind": "Microsoft.EventHub",
            "properties": {
                "eventSourceResourceId": "[variables('eventHubResourceId')]",
                "eventHubName": "[parameters('eventHubName')]",
                "serviceBusNamespace": "[parameters('eventHubNamespaceName')]",
                "consumerGroupName": "$Default",
                "keyName": "[parameters('eventHubAuthorizationName')]",
                "sharedAccessKey": "[listkeys(variables('tsiEventSourceKeyResourceId'), '2017-04-01').primaryKey]",
                "timestampPropertyName": "TimeStamp"
            },
            "tags": "[variables('tsiEventSourceTagsValue')]",
            "dependsOn": [
                "[resourceId('Microsoft.TimeSeriesInsights/environments/', parameters('tsiEnvironmentName'))]",
                "[variables('tsiEventSourceKeyResourceId')]"
            ]
        },
        {
            "comments": "SignalR service for UX and API events",
            "type": "Microsoft.SignalRService/SignalR",
            "name": "[parameters('signalRName')]",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "hostNamePrefix": "[parameters('signalRName')]",
                "features": [
                    {
                        "flag": "ServiceMode",
                        "value": "Default"
                    }
                ],
                "cors": {
                    "allowedOrigins": [
                        "*"
                    ]
                }    
            },
            "sku": {
                "name": "[parameters('signalRSkuName')]",
                "tier": "[parameters('signalRSkuTier')]",
                "capacity": "[parameters('signalRSkuCapacity')]"
            },
            "dependsOn": [
            ]
        },
        {
            "comments": "Operations workspace instance",
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[parameters('workspaceName')]",
            "apiVersion": "2015-11-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "Name": "[parameters('workspaceSku')]"
                },
                "features": {
                    "searchVersion": 1
                }
            },
            "dependsOn": [
            ]
        },
        {
            "comments": "Applications monitoring instance",
            "type": "Microsoft.Insights/components",
            "name": "[parameters('appInsightsName')]",
            "apiVersion": "2015-05-01",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[parameters('appInsightsName')]"
            },
            "dependsOn": [
            ]
        },
        {
            "comments": "Save standard infrastructure configuration in keyVault.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "[variables('standardConfigurationResourceName')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "configuration": {
                        "value": [
                            {
                                "key": "PCS_DPS_CONNSTRING",
                                "value": "[concat('HostName=', reference(variables('dpsResourceId'), '2018-01-22'). serviceOperationsHostName, ';SharedAccessKeyName=', listkeys(variables('dpsResourceId'), '2018-01-22').value[0].keyName, ';SharedAccessKey=', listkeys(variables('dpsResourceId'), '2018-01-22').value[0].primaryKey)]"
                            },
                            {
                                "key": "PCS_DPS_IDSCOPE",
                                "value": "[reference(variables('dpsResourceId'), '2018-01-22').idScope]"
                            },
                            {
                                "key": "PCS_DPS_ENDPOINT",
                                "value": "[reference(variables('dpsResourceId'), '2018-01-22').deviceProvisioningHostName]"
                            },
                            {
                                "key": "PCS_ADLSG2_ACCOUNT",
                                "value": "[parameters('datalakeName')]"
                            },
                            {
                                "key": "PCS_SIGNALR_CONNSTRING",
                                "value": "[listkeys(parameters('signalRName'), '2018-10-01').primaryConnectionString]"
                            },
                            {
                                "key": "PCS_EVENTHUB_CONNSTRING",
                                "value": "[concat('Endpoint=sb://', parameters('eventHubNamespaceName'), '.', parameters('serviceBusEndpointSuffix'), '/;SharedAccessKeyName=', variables('eventHubKeyName'), ';SharedAccessKey=', listkeys(variables('eventHubKeyResourceId'), '2017-04-01').primaryKey, ';')]"
                            },
                            {
                                "key": "PCS_EVENTHUB_NAME",
                                "value": "[parameters('eventHubName')]"
                            },
                            {
                                "key": "PCS_WORKSPACE_NAME",
                                "value": "[parameters('workspaceName')]"
                            },
                            {
                                "key": "PCS_APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(variables('appinsightsResourceId'), '2015-05-01').InstrumentationKey]"
                            },
                            {
                                "key": "PCS_TSI_URL",
                                "value": "[reference(variables('tsiEnvironmentResourceId'), '2018-08-15-preview').dataAccessFQDN]"
                            }
                        ]
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(variables('templateBaseUrl'), 'azuredeploy.configuration.json')]"
                }
            },
            "dependsOn": [
                "[variables('appinsightsResourceId')]",
                "[variables('eventHubNamespaceResourceId')]",
                "[variables('dpsResourceId')]",
                "[variables('datalakeResourceId')]",
                "[variables('signalRResourceId')]",
                "[variables('tsiEnvironmentResourceId')]"
            ]
        }
    ],
    "outputs": {
        "tsiUrl": {
            "type": "string",
            "value": "[reference(variables('tsiEnvironmentResourceId'), '2018-08-15-preview').dataAccessFQDN]"
        }
    }
}