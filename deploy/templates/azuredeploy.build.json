{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "branchName": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "The branch from which to deploy deploy services and application.  Default to master."
            }
        },
        "repoUrl": {
            "type": "string",
            "defaultValue": "https://github.com/Azure/Industrial-IoT",
            "metadata": {
                "description": "The repository url from which to deploy services and application.  Default is official repository."
            }
        },
        "gitHubPat": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The github personal access token to setup continouus integration."
            }
        },
        "templateUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/Industrial-IoT",
            "metadata": {
                "description": "The artifacts url from which to pull all linked templates.  Default is official repository."
            }
        },
        "managedIdentityResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A user created managed identity to use for service to service access.  If not provided, client and service principal will be used to gain access to keyvault."
            }
        },
        "containerRegistryName": {
            "type": "string",
            "defaultValue": "[concat('acr', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "Specifies the name of Azure Container Registry."
            }
        },
        "containerRegistrySku": {
            "type": "string",
            "metadata": {
                "description": "Tier of your Azure Container Registry"
            },
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ]
        }
    },
    "variables": {
        "templateBaseUrl": "[if(empty(parameters('templateUrl')), deployment().properties.templateLink.uri, concat(parameters('templateUrl'), '/', parameters('branchName'), '/deploy/templates/'))]",
        "containerRegistryResourceId": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
        "containers": [
            {
                "name": "serviceContainerBuild",
                "imageName": "iot/industrial-iot-backend",
                "imageTags": [
                    "latest"
                ],
                "os": "linux",
                "dockerFilePath": "./deploy/docker/platform/Dockerfile"
            },
            {
                "name": "appContainerBuild",
                "imageName": "iot/industrial-iot-frontend",
                "imageTags": [
                    "latest"
                ],
                "os": "linux",
                "dockerFilePath": "./deploy/docker/application/Dockerfile"
            },
            {
                "name": "twinmodule",
                "imageName": "iotedge/opc-twin",
                "imageTags": [
                    "latest"
                ],
                "os": "linux",
                "dockerFilePath": "./deploy/docker/modules/twin/Dockerfile.linux"
            },
            {
                "name": "twinmodulewindows",
                "imageName": "iotedge/opc-twin",
                "imageTags": [
                    "windows"
                ],
                "os": "windows",
                "dockerFilePath": "./deploy/docker/modules/twin/Dockerfile.windows"
            },
            {
                "name": "publishermodule",
                "imageName": "iotedge/opc-publisher",
                "imageTags": [
                    "latest"
                ],
                "os": "linux",
                "dockerFilePath": "./deploy/docker/modules/publisher/Dockerfile.linux"
            },
            {
                "name": "publishermodulewindows",
                "imageName": "iotedge/opc-publisher",
                "imageTags": [
                    "windows"
                ],
                "os": "windows",
                "dockerFilePath": "./deploy/docker/modules/publisher/Dockerfile.windows"
            },
            {
                "name": "testserver",
                "imageName": "iot/opc-ua-test-server",
                "imageTags": [
                    "windows",
                    "latest"
                ],
                "os": "linux",
                "dockerFilePath": "./deploy/docker/simulation/Dockerfile"
            }
        ],
        "containersBuildDependency": "containerBuild"
    },
    "resources": [
        {
            "comments": "Container registry.",
            "name": "[parameters('containerRegistryName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-05-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('containerRegistrySku')]",
                "tier": "[parameters('containerRegistrySku')]"
            },
            "properties": {
                "adminUserEnabled": true
            },
            "dependsOn": [
            ]
        },
        {
            "comments": "Build container images in registry.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "[variables('containers')[copyIndex()].name]",
            "copy": {
                "count": "[length(variables('containers'))]",
                "mode": "Parallel",
                "name": "[variables('containersBuildDependency')]"
            },
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "containerRegistryName": {
                        "value": "[parameters('containerRegistryName')]"
                    },
                    "imageName": {
                        "value": "[variables('containers')[copyIndex()].imageName]"
                    },
                    "imageTags": {
                        "value": "[variables('containers')[copyIndex()].imageTags]"
                    },
                    "os": {
                        "value": "[variables('containers')[copyIndex()].os]"
                    },
                    "repoUrl": {
                        "value": "[parameters('repoUrl')]"
                    },
                    "branchName": {
                        "value": "[parameters('branchName')]"
                    },
                    "dockerFilePath": {
                        "value": "[variables('containers')[copyIndex()].dockerFilePath]"
                    },
                    "gitHubPat": {
                        "value": "[parameters('gitHubPat')]"
                    },
                    "managedIdentityResourceId": {
                        "value": "[parameters('managedIdentityResourceId')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(variables('templateBaseUrl'), 'azuredeploy.build.container.json')]"
                }
            },
            "dependsOn": [
                "[variables('containerRegistryResourceId')]"
            ]
        }
    ]
}