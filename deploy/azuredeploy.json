{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "userPrincipalId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the object ID of a principal in your Azure Active Directory tenant to access the deployed services."
            }
        },
        "userManagedIdentityName": {
            "type": "string",
            "defaultValue": "[concat('msi', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
            "metadata": {
                "description": "The name of the managed identity to create. If client principal was omitted a default identity will be provisioned to access resources."
            }
        },
        "storageName": {
            "type": "string",
            "defaultValue": "[concat('storage', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "The name of the storage account created as part of the deployment."
            }
        },
        "storageSkuName": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The storage SKU to use."
            }
        },
        "iotHubName": {
            "type": "string",
            "defaultValue": "[concat('iothub-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "The name of Azure IoT Hub created as part of the deployment."
            }
        },
        "iotHubSku": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "F1",
                "S1",
                "S2",
                "S3"
            ],
            "metadata": {
                "description": "The Azure IoT Hub SKU to use."
            }
        },
        "iotHubCapacity": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The Azure IoT Hub SKU capacity to use."
            }
        },
        "iotHubTier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Free",
                "Standard"
            ],
            "metadata": {
                "description": "The Azure IoT Hub tier to use."
            }
        },
        "iotHubPartitionCount": {
            "type": "int",
            "defaultValue": 4,
            "metadata": {
                "description": "The Azure IoT Hub default endpoint partition count."
            }
        },
        "iotHubRetentionInDays": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The Azure IoT Hub default message retention in days."
            }
        },
        "dpsName": {
            "type": "string",
            "defaultValue": "[concat('dps', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 6))]",
            "metadata": {
                "description": "The name of the Azure Device Provisioning service created as part of this deployment."
            }
        },
        "dpsSku": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "S1"
            ],
            "metadata": {
                "description": "The Azure Device Provisioning service SKU to use."
            }
        },
        "dpsCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 3,
            "metadata": {
                "description": "The Azure Device Provisioning service capacity."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for Azure resources."
            }
        }
    },
    "variables": {
        "iotHubResourceId": "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]",
        "iotHubContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4fc6c259-987e-4a07-842e-c321cc9d413f')]",
        "iotHubPrincipalRoleAssignment": "[guid(parameters('iotHubName'), parameters('userPrincipalId'))]",
        "iotHubRoleAssignment": "[guid(parameters('iotHubName'), parameters('userManagedIdentityName'))]",
        "iotHubTelemetryConsumerGroup": "telemetry",
        "iotHubEventsConsumerGroup": "events",
        "userManagedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName'))]",
        "storageResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
        "storageBlobDataOwnerRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "storageAccountContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
        "storagePrincipalBlobDataOwnerRoleAssignment": "[guid(parameters('storageName'), 'StorageBlobDataOwner', parameters('userPrincipalId'))]",
        "storagePrincipalStorageAccountContributorRoleAssignment": "[guid(parameters('storageName'), 'StorageAccountContributor', parameters('userPrincipalId'))]",
        "storageRoleAssignment": "[guid(parameters('storageName'), parameters('userManagedIdentityName'))]"
    },
    "resources": [
        {
            "comments": "User managed identity.",
            "name": "[parameters('userManagedIdentityName')]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2023-01-31",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]"
        },
        {
            "comments": "Create an Azure IoT Hub.",
            "apiVersion": "2023-06-30",
            "type": "Microsoft.Devices/Iothubs",
            "name": "[parameters('iotHubName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "[parameters('iotHubSku')]",
                "tier": "[parameters('iotHubTier')]",
                "capacity": "[parameters('iotHubCapacity')]"
            },
            "properties": {
                "location": "[resourceGroup().location]",
                "ipFilterRules": [],
                "disableLocalAuth": false,
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": "[parameters('iotHubRetentionInDays')]",
                        "partitionCount": "[parameters('iotHubPartitionCount')]"
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [
                        {
                            "name": "TwinChanges",
                            "source": "TwinChangeEvents",
                            "condition": "true",
                            "endpointNames": [
                                "events"
                            ],
                            "isEnabled": true
                        },
                        {
                            "name": "DeviceLifecycle",
                            "source": "DeviceLifecycleEvents",
                            "condition": "true",
                            "endpointNames": [
                                "events"
                            ],
                            "isEnabled": true
                        }
                    ],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            },
            "dependsOn": [
                "[variables('storageResourceId')]"
            ]
        },
        {
            "comments": "And assign access to IoT Hub to our managed identity.",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('iotHubRoleAssignment')]",
            "scope": "[variables('iotHubResourceId')]",
            "properties": {
                "roleDefinitionId": "[variables('iotHubContributorRoleId')]",
                "principalId": "[reference(variables('userManagedIdentityResourceId'), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[variables('userManagedIdentityResourceId')]",
                "[variables('iotHubResourceId')]"
            ]
        },
        {
            "comments": "And optionally the iot hub owner role to the user principal.",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('iotHubPrincipalRoleAssignment')]",
            "condition": "[not(empty(parameters('userPrincipalId')))]",
            "scope": "[variables('iotHubResourceId')]",
            "properties": {
                "roleDefinitionId": "[variables('iotHubContributorRoleId')]",
                "principalId": "[parameters('userPrincipalId')]"
            },
            "dependsOn": [
                "[variables('iotHubResourceId')]"
            ]
        },
        {
            "comments": "Create a Telemetry Consumer Group in IoT Hub.",
            "apiVersion": "2019-03-22",
            "name": "[concat(parameters('iotHubName'), '/events/', variables('iotHubTelemetryConsumerGroup'))]",
            "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('iotHubResourceId')]"
            ]
        },
        {
            "comments": "And a edge Events Consumer Group in the hub.",
            "apiVersion": "2019-03-22",
            "name": "[concat(parameters('iotHubName'), '/events/', variables('iotHubEventsConsumerGroup'))]",
            "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('iotHubResourceId')]"
            ]
        },
        {
            "comments": "Create blob storage account for event processing offset snapshots.",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageName')]",
            "apiVersion": "2023-04-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('storageSkuName')]"
            },
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "defaultToOAuthAuthentication": true,
                "allowSharedKeyAccess": false,
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "comments": "Assign access to own blobs in the storage to our managed identity.",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('storageRoleAssignment')]",
            "scope": "[variables('storageResourceId')]",
            "properties": {
                "roleDefinitionId": "[variables('storageBlobDataOwnerRoleId')]",
                "principalId": "[reference(variables('userManagedIdentityResourceId'), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[variables('userManagedIdentityResourceId')]",
                "[variables('storageResourceId')]"
            ]
        },
        {
            "comments": "And optionally the storage blob data owner role...",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('storagePrincipalBlobDataOwnerRoleAssignment')]",
            "condition": "[not(empty(parameters('userPrincipalId')))]",
            "scope": "[variables('storageResourceId')]",
            "properties": {
                "roleDefinitionId": "[variables('storageBlobDataOwnerRoleId')]",
                "principalId": "[parameters('userPrincipalId')]"
            },
            "dependsOn": [
                "[variables('storageResourceId')]"
            ]
        },
        {
            "comments": "... as well as the storage account contributor role to the user principal.",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('storagePrincipalStorageAccountContributorRoleAssignment')]",
            "condition": "[not(empty(parameters('userPrincipalId')))]",
            "scope": "[variables('storageResourceId')]",
            "properties": {
                "roleDefinitionId": "[variables('storageAccountContributorRoleId')]",
                "principalId": "[parameters('userPrincipalId')]"
            },
            "dependsOn": [
                "[variables('storageResourceId')]"
            ]
        },
        {
            "comments": "Create Azure Device Provisioning service.",
            "type": "Microsoft.Devices/provisioningServices",
            "name": "[parameters('dpsName')]",
            "apiVersion": "2025-02-01-preview",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[variables('userManagedIdentityResourceId')]": {}
                }
            },
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "[parameters('dpsSku')]",
                "capacity": "[parameters('dpsCapacity')]"
            },
            "properties": {
                "iotHubs": [
                    {
                        "authenticationType": "UserAssigned",
                        "iotHubResourceId": "[variables('iotHubResourceId')]",
                        "selectedUserAssignedIdentityResourceId": "[variables('userManagedIdentityResourceId')]",
                        "location": "[resourceGroup().location]",
                        "name": "[reference(variables('iotHubResourceId')).hostName]"
                    }
                ]
            },
            "dependsOn": [
                "[variables('iotHubResourceId')]"
            ]
        }
    ],
    "outputs": {
        "iotHubConnString": {
            "type": "string",
            "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName)]",
            "metadata": {
                "description": "The connection string for the IoT Hub. Use this to connect to IoT Hub using your user principal or managed identity."
            }
        },
        "dpsIdScope": {
            "type": "string",
            "value": "[reference(parameters('dpsName')).idScope]",
            "metadata": {
                "description": "The ID scope for the Device Provisioning Service. Use this to deploy IoT Edge devices using DPS."
            }
        },
        "dpsConnString": {
            "type": "string",
            "value": "[concat('HostName=', reference(parameters('dpsName')).hostName, ';SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/provisioningServices', parameters('dpsName')), '2025-02-01-preview').primaryKey)]",
            "metadata": {
                "description": "The connection string for the Device Provisioning Service. Use this to deploy IoT Edge devices using DPS."
            }
        },
        "tenantId": {
            "type": "string",
            "value": "[subscription().tenantId]",
            "metadata": {
                "description": "The tenant ID of the Azure subscription."
            }
        }
    }
}
